{
	"drawioXML": "<mxfile>\n  <diagram id=\"X-iHM6rneN3LzooIGrtw\" name=\"Page-1\">\n    <mxGraphModel dx=\"29240\" dy=\"16240\" grid=\"0\" gridSize=\"10\" guides=\"1\" tooltips=\"1\" connect=\"0\" arrows=\"1\" fold=\"1\" page=\"0\" pageScale=\"1\" pageWidth=\"850\" pageHeight=\"1100\" math=\"0\" shadow=\"0\">\n      <root>\n        <mxCell id=\"0\" />\n        <mxCell id=\"1\" style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=9;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#fffefe\" parent=\"0\" />\n        <UserObject label=\"src\" value=\"src\" id=\"08f574e7-9261-46ab-a2a4-e20060722bf1\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=55;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#fffefe\" parent=\"1\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"6740\" height=\"5579.998197764841\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"renderer\" value=\"renderer\" id=\"b9187016-b5ee-4447-85ce-a5969e6e0bd1\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=55;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#f9f3f3\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" vertex=\"1\">\n            <mxGeometry x=\"165\" y=\"270\" width=\"5210\" height=\"5039.998197764841\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"src\" value=\"src\" id=\"6e32cfe4-6534-4175-993d-def5cfa859bf\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=55;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#f4e9e9\" parent=\"b9187016-b5ee-4447-85ce-a5969e6e0bd1\" vertex=\"1\">\n            <mxGeometry x=\"95\" y=\"70\" width=\"4940\" height=\"4899.998197764841\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"App.tsx\" value=\"App.tsx\" id=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=25;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"835\" y=\"679.3900309564815\" width=\"480\" height=\"2699.996363729564\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"User Initiates Export - App.tsx:L1102-1114\" value=\"User Initiates Export - App.tsx:L1102-1114\" id=\"fe2d22b0-0ef4-48b7-9d4a-255979f68b67\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"1370\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Finalize Export Process - App.tsx:L1242-1250\" value=\"Finalize Export Process - App.tsx:L1242-1250\" id=\"3fbb97de-244f-4d2f-81da-c826f31797ad\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"200\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Orchestrate FFmpeg Operation - App.tsx:L954-955\" value=\"Orchestrate FFmpeg Operation - App.tsx:L954-955\" id=\"ac7b945f-009b-48d8-b31c-1d605096bd36\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"1890\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 1: Show Streams Selector Dialog - App.tsx:L2778\" value=\"Flow 1: Show Streams Selector Dialog - App.tsx:L2778\" id=\"278368fe-f438-43ce-b29e-2dd4620f6144\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"1760.0000000000002\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 2: User Initiates Single Stream Extraction - App.tsx:L2237-2245\" value=\"Flow 2: User Initiates Single Stream Extraction - App.tsx:L2237-2245\" id=\"fe33d7f0-dc9a-4170-be8d-bfb30bb090db\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"719.9999999999999\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 2 - Fix Duration: Renderer Calls Hook - App.tsx:L1727-1736\" value=\"Flow 2 - Fix Duration: Renderer Calls Hook - App.tsx:L1727-1736\" id=\"a4014582-24ef-42f2-b4a7-547fe51eee4f\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"459.9999999999999\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 2 - Fix Duration: App Loads New Media - App.tsx:L1734\" value=\"Flow 2 - Fix Duration: App Loads New Media - App.tsx:L1734\" id=\"03273e09-5637-4dd1-918a-91542bcb2eec\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Renderer: Event Listener - App.tsx:L2150-2152\" value=\"Renderer: Event Listener - App.tsx:L2150-2152\" id=\"cb2d5282-649d-4169-9459-bd5722c494b2\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"589.9999999999999\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"UI Update: Display New Segments - App.tsx:L365-371\" value=\"UI Update: Display New Segments - App.tsx:L365-371\" id=\"b803913c-42c9-43d8-8575-6757b399ed40\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"2280\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Import Flow: Renderer Receives IPC Message - App.tsx:L2362-2371\" value=\"Import Flow: Renderer Receives IPC Message - App.tsx:L2362-2371\" id=\"3be1cc98-9f00-4ec4-b9ae-b89114477cac\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"1630\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Import Flow: Update Application State - App.tsx:L2331-2338\" value=\"Import Flow: Update Application State - App.tsx:L2331-2338\" id=\"f5e2907f-63c2-419a-8d37-cd625c321a57\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"2539.996363729564\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Export Flow: Renderer Receives IPC Message - App.tsx:L2362-2371\" value=\"Export Flow: Renderer Receives IPC Message - App.tsx:L2362-2371\" id=\"3e09cd2d-52ef-4b0b-a5fb-972f78bab761\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"2020\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"(Snapshot Flow) Handle Snapshot Request - App.tsx:L1771-1775\" value=\"(Snapshot Flow) Handle Snapshot Request - App.tsx:L1771-1775\" id=\"3a8a4cb2-dcba-43f7-8be3-b464a572e138\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"850\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"(Sequence Flow) User Initiates Frame Extraction - App.tsx:L1322-1324\" value=\"(Sequence Flow) User Initiates Frame Extraction - App.tsx:L1322-1324\" id=\"05d22903-b741-44cd-a40f-d6294542efdb\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"1110\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"(Sequence Flow) Process Segments and Capture Frames - App.tsx:L1309-1313\" value=\"(Sequence Flow) Process Segments and Capture Frames - App.tsx:L1309-1313\" id=\"231861b0-ddcf-4129-8f75-49a63bf9b379\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"329.9999999999999\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"(Sequence Flow) Notify User of Completion - App.tsx:L1314-1317\" value=\"(Sequence Flow) Notify User of Completion - App.tsx:L1314-1317\" id=\"9c9c85c3-b4a1-4767-8264-999e40b2d754\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"979.9999999999999\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"State Initialization - App.tsx:L134\" value=\"State Initialization - App.tsx:L134\" id=\"44bb0916-1c38-4556-8138-6af52160f2c9\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"2150\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"App State Ready for Export - App.tsx:L134\" value=\"App State Ready for Export - App.tsx:L134\" id=\"c697a034-ba9e-4c07-a007-9e5576db8364\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"2410\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Invert Flow] Renderer Calls `invertAllSegments` Hook Function - App.tsx:L366\" value=\"[Invert Flow] Renderer Calls `invertAllSegments` Hook Function - App.tsx:L366\" id=\"a224479d-e0b0-4429-9fe3-c586de862f1a\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"1240\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Combine Flow] Renderer Calls `combineOverlappingSegments` Hook Function - App.tsx:L367\" value=\"[Combine Flow] Renderer Calls `combineOverlappingSegments` Hook Function - App.tsx:L367\" id=\"13fb567e-091d-438d-9b9e-a54c0669ccf3\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"3c6792a6-2b59-4658-8e1b-7a309b404b40\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"1500\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"hooks\" value=\"hooks\" id=\"7e49f83d-ae9d-47b3-a830-816fcfb91933\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=43;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"2375\" y=\"897.0000000000001\" width=\"1680\" height=\"2634.9981977648417\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"useFfmpegOperations.ts\" value=\"useFfmpegOperations.ts\" id=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=37;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#ead5d5\" parent=\"7e49f83d-ae9d-47b3-a830-816fcfb91933\" vertex=\"1\">\n            <mxGeometry x=\"225\" y=\"989.9999999999998\" width=\"1280\" height=\"1270.063070900204\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Iterate Through Segments - useFfmpegOperations.ts:L648\" value=\"Iterate Through Segments - useFfmpegOperations.ts:L648\" id=\"de110d79-f4d1-4207-9f70-d81c9e80873c\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"330\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Select Lossless Cut Operation - useFfmpegOperations.ts:L541-546\" value=\"Select Lossless Cut Operation - useFfmpegOperations.ts:L541-546\" id=\"a42e2f9e-821b-4469-92a9-270ed3c2fcaf\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"390\" y=\"349.5400900384836\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Construct and Execute FFmpeg Command - useFfmpegOperations.ts:L235-482\" value=\"Construct and Execute FFmpeg Command - useFfmpegOperations.ts:L235-482\" id=\"d2ff73e2-fc80-48b8-8405-0a5d1c9e406b\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"710\" y=\"349.5400900384836\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Aggregate Export Results - useFfmpegOperations.ts:L648\" value=\"Aggregate Export Results - useFfmpegOperations.ts:L648\" id=\"300bb67a-6d77-4cd3-9752-0504b721b3f1\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"1030\" y=\"357.64684167224374\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f\" value=\"Pass Single&#xa;Segment Data\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" source=\"de110d79-f4d1-4207-9f70-d81c9e80873c\" target=\"a42e2f9e-821b-4469-92a9-270ed3c2fcaf\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"290\" y=\"375\" />\n              <mxPoint x=\"290\" y=\"394.5400900384836\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"64a4e618-8662-4f28-8ac6-fd723229e316\" value=\"Transmit Single&#xa;Cut Parameters\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" source=\"a42e2f9e-821b-4469-92a9-270ed3c2fcaf\" target=\"d2ff73e2-fc80-48b8-8405-0a5d1c9e406b\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\" />\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"665b9b8d-5ebf-4595-a962-92e96bf0bb8c\" value=\"FFmpeg Command&#xa;Transmission\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" source=\"d2ff73e2-fc80-48b8-8405-0a5d1c9e406b\" target=\"300bb67a-6d77-4cd3-9752-0504b721b3f1\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"930\" y=\"394.5400900384836\" />\n              <mxPoint x=\"930\" y=\"402.6468416722438\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"Prepare FFmpeg Concat Command - useFfmpegOperations.ts:L113-229\" value=\"Prepare FFmpeg Concat Command - useFfmpegOperations.ts:L113-229\" id=\"98403ab6-6ec1-4bdd-b9d2-91bea01c233b\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"460\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 1: Assemble and Execute FFmpeg Command - useFfmpegOperations.ts:L321-344\" value=\"Flow 1: Assemble and Execute FFmpeg Command - useFfmpegOperations.ts:L321-344\" id=\"85c1e7e6-d4fb-4f2c-b0a3-d103d579f37c\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"1110.063070900204\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 2: Execute FFmpeg Extraction Command - useFfmpegOperations.ts:L981-985\" value=\"Flow 2: Execute FFmpeg Extraction Command - useFfmpegOperations.ts:L981-985\" id=\"363164a0-9f86-43c6-b468-3925e202f374\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"200.00000000000006\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 1 - Remuxing via Export: Prepare FFmpeg Command - useFfmpegOperations.ts:L527-561\" value=\"Flow 1 - Remuxing via Export: Prepare FFmpeg Command - useFfmpegOperations.ts:L527-561\" id=\"87dcacf4-cd17-41d5-979f-951f6de2df0d\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"849.9999999999999\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 1 - Remuxing via Export: FFmpeg Writes New File - useFfmpegOperations.ts:L527-561\" value=\"Flow 1 - Remuxing via Export: FFmpeg Writes New File - useFfmpegOperations.ts:L527-561\" id=\"d541368c-3351-4ecf-b558-521e7a2da2e4\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"390\" y=\"843.3378264982887\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 2 - Fix Duration: Execute FFmpeg to Remux - useFfmpegOperations.ts:L822-828\" value=\"Flow 2 - Fix Duration: Execute FFmpeg to Remux - useFfmpegOperations.ts:L822-828\" id=\"bd46cc28-1881-4d51-88b4-a9226d123c19\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"afd1e437-6b9c-426f-9c83-b9b161394bfb\" value=\"Flow 1&#xa;- Remuxing&#xa;via Export:&#xa;Execute FFmpeg&#xa;Process\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" source=\"87dcacf4-cd17-41d5-979f-951f6de2df0d\" target=\"d541368c-3351-4ecf-b558-521e7a2da2e4\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"290\" y=\"894.9999999999999\" />\n              <mxPoint x=\"290\" y=\"888.3378264982887\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"Check if Smart Cut is Needed - useFfmpegOperations.ts:L593-594\" value=\"Check if Smart Cut is Needed - useFfmpegOperations.ts:L593-594\" id=\"ba14524f-0627-4818-b255-c0f39aba0926\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"720\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Re-encode the &#39;Smart&#39; Part - useFfmpegOperations.ts:L635\" value=\"Re-encode the &#39;Smart&#39; Part - useFfmpegOperations.ts:L635\" id=\"5f631d25-f39b-42db-aadb-5a3ae1f3d35a\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"979.9999999999999\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Losslessly Cut the Remainder - useFfmpegOperations.ts:L616-620\" value=\"Losslessly Cut the Remainder - useFfmpegOperations.ts:L616-620\" id=\"793e945f-70c8-4583-8a69-9defa4fd895e\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"390\" y=\"979.9999999999999\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Concatenate Video Parts - useFfmpegOperations.ts:L639\" value=\"Concatenate Video Parts - useFfmpegOperations.ts:L639\" id=\"eaf7e7ea-1f08-43db-be35-fe5883680fb0\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"710\" y=\"954.0951694277231\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Clean Up Temporary Files - useFfmpegOperations.ts:L641-643\" value=\"Clean Up Temporary Files - useFfmpegOperations.ts:L641-643\" id=\"9e5a8f61-0a9f-438a-8a19-4f5911ee938a\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"1030\" y=\"954.0951694277231\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"684f87e0-d7aa-4e1f-9125-f53a18bfc9e9\" value=\"Save Re-encoded&#xa;Part to&#xa;Temp File\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" source=\"5f631d25-f39b-42db-aadb-5a3ae1f3d35a\" target=\"793e945f-70c8-4583-8a69-9defa4fd895e\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\" />\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"bf477e73-2f9a-4ce1-bb76-89c70b63776a\" value=\"Save Lossless&#xa;Part to&#xa;Temp File\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" source=\"793e945f-70c8-4583-8a69-9defa4fd895e\" target=\"eaf7e7ea-1f08-43db-be35-fe5883680fb0\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"610\" y=\"1025\" />\n              <mxPoint x=\"610\" y=\"999.0951694277231\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"0f401530-8b31-439f-8d86-78c3fc2c613a\" value=\"Save Final&#xa;Merged File\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" source=\"eaf7e7ea-1f08-43db-be35-fe5883680fb0\" target=\"9e5a8f61-0a9f-438a-8a19-4f5911ee938a\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\" />\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"FFmpeg Command Generation - useFfmpegOperations.ts:L321-324\" value=\"FFmpeg Command Generation - useFfmpegOperations.ts:L321-324\" id=\"f8cfc304-fc12-4138-9b9d-16287d5c68ef\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"590\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Output File with New Metadata - useFfmpegOperations.ts:L482\" value=\"Output File with New Metadata - useFfmpegOperations.ts:L482\" id=\"98309d94-d144-447a-a0ef-516448532229\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" vertex=\"1\">\n            <mxGeometry x=\"390\" y=\"590\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"a3f38611-e09d-480e-bbe0-3b2a555d4f6a\" value=\"FFmpeg Command&#xa;Execution\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c\" source=\"f8cfc304-fc12-4138-9b9d-16287d5c68ef\" target=\"98309d94-d144-447a-a0ef-516448532229\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\" />\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"useStreamsMeta.ts\" value=\"useStreamsMeta.ts\" id=\"e95f28c1-0b53-4ac8-9f2b-b5bb46422e04\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#ead5d5\" parent=\"7e49f83d-ae9d-47b3-a830-816fcfb91933\" vertex=\"1\">\n            <mxGeometry x=\"705\" y=\"2334.9981977648417\" width=\"320\" height=\"230\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 1: Update Stream Selection State - useStreamsMeta.ts:L47-51\" value=\"Flow 1: Update Stream Selection State - useStreamsMeta.ts:L47-51\" id=\"cccadc33-0f5b-4dab-be58-f6bbbe92f112\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"e95f28c1-0b53-4ac8-9f2b-b5bb46422e04\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"useSegments.ts\" value=\"useSegments.ts\" id=\"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=34;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#ead5d5\" parent=\"7e49f83d-ae9d-47b3-a830-816fcfb91933\" vertex=\"1\">\n            <mxGeometry x=\"293.57142857142856\" y=\"200\" width=\"1040\" height=\"749.9999999999999\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Parameter Input Dialog - useSegments.ts:L212-213\" value=\"Parameter Input Dialog - useSegments.ts:L212-213\" id=\"37245537-83e0-4424-8828-38ed04ce7af6\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Renderer: Update Segments State - useSegments.ts:L218\" value=\"Renderer: Update Segments State - useSegments.ts:L218\" id=\"5241093d-0c10-4147-89ad-9c47e0c8a2bb\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"589.9999999999999\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Invert Flow] Update State with Inverted Segments - useSegments.ts:L294-302\" value=\"[Invert Flow] Update State with Inverted Segments - useSegments.ts:L294-302\" id=\"8d01d37f-aab7-4e85-815d-4b14afe686c2\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"199.99999999999997\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Combine Flow] Update State with Combined Segments - useSegments.ts:L337-342\" value=\"[Combine Flow] Update State with Combined Segments - useSegments.ts:L337-342\" id=\"3fae905a-8e5a-4f9d-912f-4cf10d10ab20\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"329.99999999999994\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Split Flow] `splitCurrentSegment` Logic Execution - useSegments.ts:L579-583\" value=\"[Split Flow] `splitCurrentSegment` Logic Execution - useSegments.ts:L579-583\" id=\"243c6b3d-7fac-4f13-b670-62533df24ebd\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"460\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Split Flow] Constructing Updated Segment List - useSegments.ts:L601-606\" value=\"[Split Flow] Constructing Updated Segment List - useSegments.ts:L601-606\" id=\"8ed4737a-df10-49cf-9730-e696349f2f22\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28\" vertex=\"1\">\n            <mxGeometry x=\"470\" y=\"448.92584591318564\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Split Flow] State Update and UI Re-render - useSegments.ts:L601-606\" value=\"[Split Flow] State Update and UI Re-render - useSegments.ts:L601-606\" id=\"351e81f1-fe34-49ef-8219-de19aee749f9\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28\" vertex=\"1\">\n            <mxGeometry x=\"790\" y=\"448.92584591318564\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"bb3f0916-e310-4f36-a7df-7a1cf4ae9045\" value=\"[Split Flow]&#xa;Preparing New&#xa;Segment Data\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28\" source=\"243c6b3d-7fac-4f13-b670-62533df24ebd\" target=\"8ed4737a-df10-49cf-9730-e696349f2f22\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"370\" y=\"505\" />\n              <mxPoint x=\"370\" y=\"493.92584591318564\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"5208c434-02d8-46b4-a43c-057ee92df774\" value=\"[Split Flow]&#xa;Passing New&#xa;List to&#xa;State Setter\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28\" source=\"8ed4737a-df10-49cf-9730-e696349f2f22\" target=\"351e81f1-fe34-49ef-8219-de19aee749f9\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\" />\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"useFrameCapture.ts\" value=\"useFrameCapture.ts\" id=\"4e6a5b3a-8901-4162-8137-3fe70dc0f0bd\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=14;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"7e49f83d-ae9d-47b3-a830-816fcfb91933\" vertex=\"1\">\n            <mxGeometry x=\"775\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"eb1e541d-893f-46d8-a04a-fb59997562e6\" value=\"Pass Segments&#xa;and Config&#xa;to `cutMultiple`\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"fe2d22b0-0ef4-48b7-9d4a-255979f68b67\" target=\"de110d79-f4d1-4207-9f70-d81c9e80873c\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1430\" y=\"2094.3900309564815\" />\n              <mxPoint x=\"1430\" y=\"2442.8029692805294\" />\n              <mxPoint x=\"2210\" y=\"2442.8029692805294\" />\n              <mxPoint x=\"2210\" y=\"2261.9999999999995\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"4b6225fd-880e-4303-a556-046cdf4f3bec\" value=\"Return File&#xa;Paths to&#xa;Caller\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"300bb67a-6d77-4cd3-9752-0504b721b3f1\" target=\"3fbb97de-244f-4d2f-81da-c826f31797ad\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"4160\" y=\"2289.6468416722437\" />\n              <mxPoint x=\"4160\" y=\"120\" />\n              <mxPoint x=\"720\" y=\"120\" />\n              <mxPoint x=\"720\" y=\"924.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"components\" value=\"components\" id=\"4d8cdb8b-92f1-4031-9deb-8db560dd8fd4\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=25;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"160\" y=\"3495.8007588553087\" width=\"485\" height=\"909.9999999999999\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"ConcatDialog.tsx\" value=\"ConcatDialog.tsx\" id=\"67bad1d2-fef9-41fd-968a-99a1cbc0dc87\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#ead5d5\" parent=\"4d8cdb8b-92f1-4031-9deb-8db560dd8fd4\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70.00000000000001\" width=\"320\" height=\"230\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"User Initiates File Concatenation - ConcatDialog.tsx:L38-43\" value=\"User Initiates File Concatenation - ConcatDialog.tsx:L38-43\" id=\"2d06215c-fe3e-4416-a3c7-fe10657bf467\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"67bad1d2-fef9-41fd-968a-99a1cbc0dc87\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"OutputFormatSelect.tsx\" value=\"OutputFormatSelect.tsx\" id=\"041949e8-3540-4e65-b1a4-85251626e35a\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#ead5d5\" parent=\"4d8cdb8b-92f1-4031-9deb-8db560dd8fd4\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"610\" width=\"320\" height=\"230\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 1 - Remuxing via Export: User Selects Output Format - OutputFormatSelect.tsx:L24-52\" value=\"Flow 1 - Remuxing via Export: User Selects Output Format - OutputFormatSelect.tsx:L24-52\" id=\"e4b79729-7cda-4e49-8549-edb007ea3edd\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"041949e8-3540-4e65-b1a4-85251626e35a\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"ExportConfirm.tsx\" value=\"ExportConfirm.tsx\" id=\"5052c1c3-91bb-4c73-8e31-d7d619dda2ac\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#ead5d5\" parent=\"4d8cdb8b-92f1-4031-9deb-8db560dd8fd4\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"340.0000000000001\" width=\"320\" height=\"230\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Enable Smart Cut - ExportConfirm.tsx:L541-543\" value=\"Enable Smart Cut - ExportConfirm.tsx:L541-543\" id=\"a082670c-4826-432f-82ab-22c57fcac9da\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"5052c1c3-91bb-4c73-8e31-d7d619dda2ac\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"ffmpeg.ts\" value=\"ffmpeg.ts\" id=\"0480baa3-5d8d-4682-a2a0-40501c4f8b6f\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"4340\" y=\"2420.239191220706\" width=\"320\" height=\"230\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Renderer to Main Process Bridge - ffmpeg.ts:L17-20\" value=\"Renderer to Main Process Bridge - ffmpeg.ts:L17-20\" id=\"d28248f6-2c22-40b4-bc29-a0b9948ed507\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"0480baa3-5d8d-4682-a2a0-40501c4f8b6f\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"fbb618a0-e07c-46d7-8948-808dafdc9dc7\" value=\"Send Concatenation&#xa;Request\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"2d06215c-fe3e-4416-a3c7-fe10657bf467\" target=\"ac7b945f-009b-48d8-b31c-1d605096bd36\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"710\" y=\"3680.800758855309\" />\n              <mxPoint x=\"710\" y=\"2614.390030956482\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"435dd0f4-2dae-4277-9f80-6dfe96e3dd31\" value=\"Pass Parameters&#xa;to concatFiles&#xa;Hook\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"ac7b945f-009b-48d8-b31c-1d605096bd36\" target=\"98403ab6-6ec1-4bdd-b9d2-91bea01c233b\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1400\" y=\"2614.3900309564815\" />\n              <mxPoint x=\"1400\" y=\"3731.9981977648404\" />\n              <mxPoint x=\"2220\" y=\"3731.9981977648404\" />\n              <mxPoint x=\"2220\" y=\"2391.9999999999995\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"53f57e02-1e21-454a-911a-dae6b5c88f05\" value=\"Invoke FFmpeg&#xa;Execution\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"98403ab6-6ec1-4bdd-b9d2-91bea01c233b\" target=\"d28248f6-2c22-40b4-bc29-a0b9948ed507\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"2890\" y=\"2392\" />\n              <mxPoint x=\"2890\" y=\"2391.906654947652\" />\n              <mxPoint x=\"4150\" y=\"2391.9066549476515\" />\n              <mxPoint x=\"4150\" y=\"2535.239191220706\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"StreamsSelector.tsx\" value=\"StreamsSelector.tsx\" id=\"5dbe3c60-4b67-4779-affd-efe158861967\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=28;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"1505\" y=\"3833.998197764841\" width=\"640\" height=\"360\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 1: Render Streams UI and Handle User Interaction - StreamsSelector.tsx:L362-371\" value=\"Flow 1: Render Streams UI and Handle User Interaction - StreamsSelector.tsx:L362-371\" id=\"89f6803e-d025-491d-a31d-ce4a63331ded\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"5dbe3c60-4b67-4779-affd-efe158861967\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"User Opens File Metadata Editor - StreamsSelector.tsx:L504-512\" value=\"User Opens File Metadata Editor - StreamsSelector.tsx:L504-512\" id=\"e364ce6c-1250-48e0-b0aa-dcdd8bf585d9\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"5dbe3c60-4b67-4779-affd-efe158861967\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"200.00000000000003\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Metadata State Update Logic - StreamsSelector.tsx:L50-52\" value=\"Metadata State Update Logic - StreamsSelector.tsx:L50-52\" id=\"8181f0d8-0132-4b93-98b6-fd777aa5e45d\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"5dbe3c60-4b67-4779-affd-efe158861967\" vertex=\"1\">\n            <mxGeometry x=\"390\" y=\"186.1501422241266\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9\" value=\"User Input&#xa;Triggers State&#xa;Update\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"5dbe3c60-4b67-4779-affd-efe158861967\" source=\"e364ce6c-1250-48e0-b0aa-dcdd8bf585d9\" target=\"8181f0d8-0132-4b93-98b6-fd777aa5e45d\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"290\" y=\"245\" />\n              <mxPoint x=\"290\" y=\"231.15014222412657\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"util\" value=\"util\" id=\"39368be4-a7c3-4fa3-b45a-d18710dcf6c5\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=25;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"4245\" y=\"2738.3393238517147\" width=\"510\" height=\"370\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"streams.ts\" value=\"streams.ts\" id=\"d304265f-c403-46aa-b3ef-0db7c41f2760\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#ead5d5\" parent=\"39368be4-a7c3-4fa3-b45a-d18710dcf6c5\" vertex=\"1\">\n            <mxGeometry x=\"95\" y=\"70\" width=\"320\" height=\"230\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 1: Generate FFmpeg Stream Mapping Arguments - streams.ts:L202-215\" value=\"Flow 1: Generate FFmpeg Stream Mapping Arguments - streams.ts:L202-215\" id=\"29714876-444b-4ff3-9380-8eb92263b487\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"d304265f-c403-46aa-b3ef-0db7c41f2760\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"65d636c5-f1de-4017-ba01-a72fa4bfcce6\" value=\"Flow 1:&#xa;Pass Stream&#xa;Metadata to&#xa;UI\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"278368fe-f438-43ce-b29e-2dd4620f6144\" target=\"89f6803e-d025-491d-a31d-ce4a63331ded\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1410\" y=\"2484.3900309564815\" />\n              <mxPoint x=\"1410\" y=\"3948.9981977648404\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"8686cae6-d053-49ad-9fd8-de57ee5eb608\" value=\"Flow 1:&#xa;Transmit Selection&#xa;Change\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"89f6803e-d025-491d-a31d-ce4a63331ded\" target=\"cccadc33-0f5b-4dab-be58-f6bbbe92f112\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1795\" y=\"3948.998197764841\" />\n              <mxPoint x=\"1795\" y=\"3958.9185800194437\" />\n              <mxPoint x=\"2240\" y=\"3958.9185800194437\" />\n              <mxPoint x=\"2240\" y=\"2454.344416849287\" />\n              <mxPoint x=\"2485\" y=\"2454.344416849287\" />\n              <mxPoint x=\"2485\" y=\"3346.9981977648417\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"4680330c-14bb-48b3-8109-2ec8112c9523\" value=\"Flow 1:&#xa;Pass Updated&#xa;Selection to&#xa;Export Logic\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"cccadc33-0f5b-4dab-be58-f6bbbe92f112\" target=\"29714876-444b-4ff3-9380-8eb92263b487\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"4150\" y=\"3346.9981977648417\" />\n              <mxPoint x=\"4150\" y=\"2923.3393238517147\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"66fadc68-79f0-4536-aea5-d88ff355b207\" value=\"Flow 1:&#xa;Return FFmpeg&#xa;Arguments\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"29714876-444b-4ff3-9380-8eb92263b487\" target=\"85c1e7e6-d4fb-4f2c-b0a3-d103d579f37c\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"4830\" y=\"2923.3393238517147\" />\n              <mxPoint x=\"4830\" y=\"3581.9981977648413\" />\n              <mxPoint x=\"2310\" y=\"3581.9981977648413\" />\n              <mxPoint x=\"2310\" y=\"3042.0630709002035\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"d369e114-6ba4-4890-a02b-049875d226a3\" value=\"Flow 2:&#xa;Pass Stream&#xa;to Extraction&#xa;Logic\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"fe33d7f0-dc9a-4170-be8d-bfb30bb090db\" target=\"363164a0-9f86-43c6-b468-3925e202f374\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1410\" y=\"1444.390030956481\" />\n              <mxPoint x=\"1410\" y=\"794.9999999999999\" />\n              <mxPoint x=\"2210\" y=\"794.9999999999999\" />\n              <mxPoint x=\"2210\" y=\"1676.0088691869878\" />\n              <mxPoint x=\"2485\" y=\"1676.008869186988\" />\n              <mxPoint x=\"2485\" y=\"2132\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"9ea28bb1-20d6-444c-b3fc-fc002e010695\" value=\"Flow 1&#xa;- Remuxing&#xa;via Export:&#xa;Transmit New&#xa;Format Selection\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"e4b79729-7cda-4e49-8549-edb007ea3edd\" target=\"87dcacf4-cd17-41d5-979f-951f6de2df0d\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"710\" y=\"4220.800758855308\" />\n              <mxPoint x=\"710\" y=\"4726.99819776484\" />\n              <mxPoint x=\"2270\" y=\"4726.99819776484\" />\n              <mxPoint x=\"2270\" y=\"2484.3444168492865\" />\n              <mxPoint x=\"2495\" y=\"2484.344416849287\" />\n              <mxPoint x=\"2495\" y=\"2781.999999999999\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"9326d5a0-398d-4452-a0b5-33161bc10fd8\" value=\"Flow 2&#xa;- Fix&#xa;Duration: Data&#xa;Flow to&#xa;FFmpeg Operation\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"a4014582-24ef-42f2-b4a7-547fe51eee4f\" target=\"bd46cc28-1881-4d51-88b4-a9226d123c19\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1390\" y=\"1184.390030956481\" />\n              <mxPoint x=\"1390\" y=\"692.9999999999998\" />\n              <mxPoint x=\"2230\" y=\"692.9999999999998\" />\n              <mxPoint x=\"2230\" y=\"1639.6160014237155\" />\n              <mxPoint x=\"2535\" y=\"1639.616001423716\" />\n              <mxPoint x=\"2535\" y=\"2002\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"7d94b105-bb7f-4a7c-a656-0827e985c10a\" value=\"Flow 2&#xa;- Fix&#xa;Duration: Return&#xa;Corrected File&#xa;Path\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"bd46cc28-1881-4d51-88b4-a9226d123c19\" target=\"03273e09-5637-4dd1-918a-91542bcb2eec\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"2890\" y=\"2002\" />\n              <mxPoint x=\"2890\" y=\"2025.1007941920361\" />\n              <mxPoint x=\"4120\" y=\"2025.1007941920357\" />\n              <mxPoint x=\"4120\" y=\"591\" />\n              <mxPoint x=\"770\" y=\"591\" />\n              <mxPoint x=\"770\" y=\"794.5786119113129\" />\n              <mxPoint x=\"945\" y=\"794.5786119113131\" />\n              <mxPoint x=\"945\" y=\"794.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"smartcut.ts\" value=\"smartcut.ts\" id=\"25e70706-236e-4980-b3ee-c3a693731783\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"4245\" y=\"3148.3393238517147\" width=\"320\" height=\"230\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Analyze Keyframes - smartcut.ts:L9-15\" value=\"Analyze Keyframes - smartcut.ts:L9-15\" id=\"9d3ced96-2c64-4920-926a-e111aeab43d9\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"25e70706-236e-4980-b3ee-c3a693731783\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"a24fc8c3-5674-47a5-9c53-0609c9e8d115\" value=\"Trigger Export&#xa;with Smart&#xa;Cut\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"a082670c-4826-432f-82ab-22c57fcac9da\" target=\"ba14524f-0627-4818-b255-c0f39aba0926\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"730\" y=\"3950.8007588553087\" />\n              <mxPoint x=\"730\" y=\"4675.998197764841\" />\n              <mxPoint x=\"2260\" y=\"4675.998197764841\" />\n              <mxPoint x=\"2260\" y=\"2474.3444168492874\" />\n              <mxPoint x=\"2505\" y=\"2474.344416849287\" />\n              <mxPoint x=\"2505\" y=\"2652\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"f778dfab-f74b-4339-a019-6119ea0f2101\" value=\"Pass Parameters&#xa;to Keyframe&#xa;Checker\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"ba14524f-0627-4818-b255-c0f39aba0926\" target=\"9d3ced96-2c64-4920-926a-e111aeab43d9\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"2890\" y=\"2652\" />\n              <mxPoint x=\"2890\" y=\"2645.091044348959\" />\n              <mxPoint x=\"4160\" y=\"2645.0910443489583\" />\n              <mxPoint x=\"4160\" y=\"3263.3393238517147\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"1c1f3377-03b7-4195-bf0d-923e6cc7546d\" value=\"Return Smart&#xa;Cut Decision\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"9d3ced96-2c64-4920-926a-e111aeab43d9\" target=\"5f631d25-f39b-42db-aadb-5a3ae1f3d35a\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"4820\" y=\"3263.3393238517147\" />\n              <mxPoint x=\"4820\" y=\"3631.9981977648413\" />\n              <mxPoint x=\"2300\" y=\"3631.9981977648413\" />\n              <mxPoint x=\"2300\" y=\"2912\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"0b975994-c566-4ec8-9b77-c4fc01fc0778\" value=\"Function Call:&#xa;`detectBlackScenes`\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"cb2d5282-649d-4169-9459-bd5722c494b2\" target=\"37245537-83e0-4424-8828-38ed04ce7af6\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1400\" y=\"1314.390030956481\" />\n              <mxPoint x=\"1400\" y=\"743.9999999999998\" />\n              <mxPoint x=\"2220\" y=\"743.9999999999998\" />\n              <mxPoint x=\"2220\" y=\"1649.6160014237155\" />\n              <mxPoint x=\"2485\" y=\"1649.616001423716\" />\n              <mxPoint x=\"2485\" y=\"1212.4711503415883\" />\n              <mxPoint x=\"2778.5714285714284\" y=\"1212.4711503415883\" />\n              <mxPoint x=\"2778.5714285714284\" y=\"1212.0000000000002\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5\" value=\"React State&#xa;-&gt; UI\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"5241093d-0c10-4147-89ad-9c47e0c8a2bb\" target=\"b803913c-42c9-43d8-8575-6757b399ed40\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"3038.5714285714284\" y=\"1732\" />\n              <mxPoint x=\"3038.5714285714284\" y=\"1718.724438642083\" />\n              <mxPoint x=\"4140\" y=\"1718.7244386420834\" />\n              <mxPoint x=\"4140\" y=\"4624.998197764842\" />\n              <mxPoint x=\"740\" y=\"4624.998197764842\" />\n              <mxPoint x=\"740\" y=\"3004.390030956482\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"edlStore.ts\" value=\"edlStore.ts\" id=\"31642bd3-508e-4846-82f7-69175958853a\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"1697\" y=\"2499.3900309564815\" width=\"320\" height=\"490.405445554225\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Import Flow: Show File Dialog and Read File - edlStore.ts:L179-181\" value=\"Import Flow: Show File Dialog and Read File - edlStore.ts:L179-181\" id=\"12d0fa17-0475-450a-92f5-b5667b3540e5\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"31642bd3-508e-4846-82f7-69175958853a\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Export Flow: Prepare Data for Formatting - edlStore.ts:L183-187\" value=\"Export Flow: Prepare Data for Formatting - edlStore.ts:L183-187\" id=\"f2c09708-cd24-4092-9948-c8497f0169a7\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"31642bd3-508e-4846-82f7-69175958853a\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"199.99999999999997\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Export Flow: Save File to Disk - edlStore.ts:L183-187\" value=\"Export Flow: Save File to Disk - edlStore.ts:L183-187\" id=\"e7cd4725-f11e-4689-82a3-18ecd0bcec83\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"31642bd3-508e-4846-82f7-69175958853a\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"330.405445554225\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"edlFormats.ts\" value=\"edlFormats.ts\" id=\"ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"2375\" y=\"3739.4475577484172\" width=\"320\" height=\"360\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Import Flow: Parse EDL File Content - edlFormats.ts:L1\" value=\"Import Flow: Parse EDL File Content - edlFormats.ts:L1\" id=\"5d7657a9-18cf-4461-baee-23cf277e15df\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Export Flow: Format Segments to String - edlFormats.ts:L1\" value=\"Export Flow: Format Segments to String - edlFormats.ts:L1\" id=\"674617d8-eef8-4226-bfb4-f1e1883cf1c5\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"200\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"0b438473-97e3-4504-b856-779156a0774d\" value=\"Import Flow:&#xa;Request User&#xa;to Select&#xa;File\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"3be1cc98-9f00-4ec4-b9ae-b89114477cac\" target=\"12d0fa17-0475-450a-92f5-b5667b3540e5\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1420\" y=\"2354.3900309564815\" />\n              <mxPoint x=\"1420\" y=\"2614.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"7e0ab734-d424-44a5-ae87-5e2bc7e5f629\" value=\"Import Flow:&#xa;Pass File&#xa;Content to&#xa;Parser\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"12d0fa17-0475-450a-92f5-b5667b3540e5\" target=\"5d7657a9-18cf-4461-baee-23cf277e15df\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"2290\" y=\"2614.3900309564815\" />\n              <mxPoint x=\"2290\" y=\"3854.4475577484172\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"7526d6c5-59f6-4293-9656-9c52bafc6516\" value=\"Import Flow:&#xa;Return Parsed&#xa;Segments\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"5d7657a9-18cf-4461-baee-23cf277e15df\" target=\"f5e2907f-63c2-419a-8d37-cd625c321a57\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"4130\" y=\"3854.4475577484172\" />\n              <mxPoint x=\"4130\" y=\"4243.998197764841\" />\n              <mxPoint x=\"770\" y=\"4243.998197764841\" />\n              <mxPoint x=\"770\" y=\"3264.3863946860456\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"2fe168cb-edec-4f7e-a799-4639d808b5e6\" value=\"Export Flow:&#xa;Pass Segments&#xa;for Export\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=17;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"3e09cd2d-52ef-4b0b-a5fb-972f78bab761\" target=\"f2c09708-cd24-4092-9948-c8497f0169a7\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\" />\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"6a73fc2a-2ea4-424a-9adf-1e8b234193bb\" value=\"Export Flow:&#xa;Pass Segments&#xa;to Formatter\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"f2c09708-cd24-4092-9948-c8497f0169a7\" target=\"674617d8-eef8-4226-bfb4-f1e1883cf1c5\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"2210\" y=\"2744.3900309564815\" />\n              <mxPoint x=\"2210\" y=\"3984.4475577484172\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"a455187c-9171-4787-b1eb-13f324c0dce0\" value=\"Export Flow:&#xa;Return Formatted&#xa;String\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"674617d8-eef8-4226-bfb4-f1e1883cf1c5\" target=\"e7cd4725-f11e-4689-82a3-18ecd0bcec83\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"4120\" y=\"3984.4475577484172\" />\n              <mxPoint x=\"4120\" y=\"3681.9981977648413\" />\n              <mxPoint x=\"1440\" y=\"3681.9981977648413\" />\n              <mxPoint x=\"1440\" y=\"2874.7954765107065\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"BottomBar.tsx\" value=\"BottomBar.tsx\" id=\"d263d28e-33a2-4457-9e76-89873582ee51\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"325\" y=\"1723.0093296519235\" width=\"320\" height=\"230\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"(Snapshot Flow) User Clicks Capture Button - BottomBar.tsx:L563-571\" value=\"(Snapshot Flow) User Clicks Capture Button - BottomBar.tsx:L563-571\" id=\"5899327c-9400-40f9-878b-614dbc189747\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"d263d28e-33a2-4457-9e76-89873582ee51\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"dialogs\" value=\"dialogs\" id=\"197b4bf0-df82-4800-9fde-dd2b5f1705c7\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=25;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"1505\" y=\"171.00000000000023\" width=\"510\" height=\"370\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"extractFrames.tsx\" value=\"extractFrames.tsx\" id=\"c74208fe-d712-4001-82d9-09b9305f1f8b\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#ead5d5\" parent=\"197b4bf0-df82-4800-9fde-dd2b5f1705c7\" vertex=\"1\">\n            <mxGeometry x=\"95\" y=\"70\" width=\"320\" height=\"230\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"(Sequence Flow) User Selects Extraction Filter - extractFrames.tsx:L7-11\" value=\"(Sequence Flow) User Selects Extraction Filter - extractFrames.tsx:L7-11\" id=\"bca28915-50c6-4c4a-967a-d3ccc6f8c42a\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"c74208fe-d712-4001-82d9-09b9305f1f8b\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"33683624-370a-4b7e-8c6a-6c88a43240bc\" value=\"(Snapshot Flow)&#xa;Trigger `captureSnapshot`&#xa;Function\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=19;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"5899327c-9400-40f9-878b-614dbc189747\" target=\"3a8a4cb2-dcba-43f7-8be3-b464a572e138\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"730\" y=\"1838.0093296519233\" />\n              <mxPoint x=\"730\" y=\"1574.3900309564813\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"d2850200-1088-4c62-88ab-cc574dd3f70d\" value=\"(Sequence Flow)&#xa;Request User&#xa;Parameters\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"05d22903-b741-44cd-a40f-d6294542efdb\" target=\"bca28915-50c6-4c4a-967a-d3ccc6f8c42a\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1420\" y=\"1834.3900309564813\" />\n              <mxPoint x=\"1420\" y=\"356\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"18b4a40d-a82e-4247-9572-98bfb3da73b1\" value=\"(Sequence Flow)&#xa;Return User&#39;s&#xa;Choice\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"bca28915-50c6-4c4a-967a-d3ccc6f8c42a\" target=\"231861b0-ddcf-4129-8f75-49a63bf9b379\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"2210\" y=\"356.0000000000003\" />\n              <mxPoint x=\"2210\" y=\"70.00000000000006\" />\n              <mxPoint x=\"710\" y=\"70.00000000000006\" />\n              <mxPoint x=\"710\" y=\"1054.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10\" value=\"State Propagation&#xa;to StreamsSelector\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"44bb0916-1c38-4556-8138-6af52160f2c9\" target=\"e364ce6c-1250-48e0-b0aa-dcdd8bf585d9\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1380\" y=\"2874.3900309564815\" />\n              <mxPoint x=\"1380\" y=\"4078.9981977648404\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"6e73adea-b533-40bf-be8d-7222957dfa29\" value=\"State Propagation&#xa;to App&#xa;Component\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"8181f0d8-0132-4b93-98b6-fd777aa5e45d\" target=\"c697a034-ba9e-4c07-a007-9e5576db8364\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"2210\" y=\"4065.1483399889676\" />\n              <mxPoint x=\"2210\" y=\"4294.998197764841\" />\n              <mxPoint x=\"750\" y=\"4294.998197764841\" />\n              <mxPoint x=\"750\" y=\"3134.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"e49335ce-8e18-4eb4-8934-7122406f9aa8\" value=\"Metadata Passed&#xa;to Export&#xa;Process\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"c697a034-ba9e-4c07-a007-9e5576db8364\" target=\"f8cfc304-fc12-4138-9b9d-16287d5c68ef\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1390\" y=\"3134.3900309564815\" />\n              <mxPoint x=\"1390\" y=\"3782.9981977648404\" />\n              <mxPoint x=\"2230\" y=\"3782.9981977648404\" />\n              <mxPoint x=\"2230\" y=\"2444.344416849287\" />\n              <mxPoint x=\"2535\" y=\"2444.3444168492874\" />\n              <mxPoint x=\"2535\" y=\"2522\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"segments.ts\" value=\"segments.ts\" id=\"0ad2329f-13db-4897-8036-441b2de93368\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"1665\" y=\"1979.3900309564815\" width=\"320\" height=\"360\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Invert Flow] Core Inversion Logic Execution - segments.ts:L158-209\" value=\"[Invert Flow] Core Inversion Logic Execution - segments.ts:L158-209\" id=\"51def865-de03-4187-85b6-ba86cf6d1936\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"0ad2329f-13db-4897-8036-441b2de93368\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Combine Flow] Core Combination Logic Execution - segments.ts:L115-136\" value=\"[Combine Flow] Core Combination Logic Execution - segments.ts:L115-136\" id=\"2b5de623-18fd-40af-9d8c-21750eb5c26d\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"0ad2329f-13db-4897-8036-441b2de93368\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"200\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"SegmentList.tsx\" value=\"SegmentList.tsx\" id=\"739186cb-e6ce-4e17-9031-de32d7289ec2\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#efdfdf\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" vertex=\"1\">\n            <mxGeometry x=\"1825\" y=\"4344.998197764841\" width=\"320\" height=\"230\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Split Flow] User Triggers Split Segment - SegmentList.tsx:L443-447\" value=\"[Split Flow] User Triggers Split Segment - SegmentList.tsx:L443-447\" id=\"31d722ba-a2c7-48e5-8687-5c3c5abf6260\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"739186cb-e6ce-4e17-9031-de32d7289ec2\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"3e040134-87f0-485e-81a9-9b38b73d7fea\" value=\"[Invert Flow]&#xa;Passing Segments&#xa;to Inversion&#xa;Logic\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"a224479d-e0b0-4429-9fe3-c586de862f1a\" target=\"51def865-de03-4187-85b6-ba86cf6d1936\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1440\" y=\"1964.3900309564813\" />\n              <mxPoint x=\"1440\" y=\"2094.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"27b274fe-541f-41ae-b4ea-b75b03fcbcb6\" value=\"[Invert Flow]&#xa;Return Inverted&#xa;Segments\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"51def865-de03-4187-85b6-ba86cf6d1936\" target=\"8d01d37f-aab7-4e85-815d-4b14afe686c2\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"2210\" y=\"2094.3900309564815\" />\n              <mxPoint x=\"2210\" y=\"1686.0088691869878\" />\n              <mxPoint x=\"2495\" y=\"1686.0088691869878\" />\n              <mxPoint x=\"2495\" y=\"1342\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"ea9caa83-779e-43b4-aa2f-9cfde7f94a28\" value=\"[Combine Flow]&#xa;Passing Segments&#xa;to Combination&#xa;Logic\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=14;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"13fb567e-091d-438d-9b9e-a54c0669ccf3\" target=\"2b5de623-18fd-40af-9d8c-21750eb5c26d\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\" />\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"6eca0f1e-1b09-4591-8301-7de2905c0f68\" value=\"[Combine Flow]&#xa;Return Combined&#xa;Segments\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"2b5de623-18fd-40af-9d8c-21750eb5c26d\" target=\"3fae905a-8e5a-4f9d-912f-4cf10d10ab20\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"2220\" y=\"2224.3900309564815\" />\n              <mxPoint x=\"2220\" y=\"1696.0088691869878\" />\n              <mxPoint x=\"2505\" y=\"1696.0088691869878\" />\n              <mxPoint x=\"2505\" y=\"1472\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"0eb055af-faee-417c-ae68-e2b89e7ca762\" value=\"[Split Flow]&#xa;Event Bubbles&#xa;to App&#xa;Component\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"6e32cfe4-6534-4175-993d-def5cfa859bf\" source=\"31d722ba-a2c7-48e5-8687-5c3c5abf6260\" target=\"243c6b3d-7fac-4f13-b670-62533df24ebd\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"2250\" y=\"4459.99819776484\" />\n              <mxPoint x=\"2250\" y=\"2464.344416849287\" />\n              <mxPoint x=\"2515\" y=\"2464.344416849287\" />\n              <mxPoint x=\"2515\" y=\"1601.9999999999995\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"main\" value=\"main\" id=\"269ebc34-b745-4d7a-b2dc-e2d96c460f42\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=31;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#f9f3f3\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" vertex=\"1\">\n            <mxGeometry x=\"5565\" y=\"1380.2215948836974\" width=\"990\" height=\"1680.0175963370086\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"ffmpeg.ts\" value=\"ffmpeg.ts\" id=\"32eec39f-6ea1-43b3-9abf-a9309536057d\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=28;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#f4e9e9\" parent=\"269ebc34-b745-4d7a-b2dc-e2d96c460f42\" vertex=\"1\">\n            <mxGeometry x=\"95\" y=\"989.9999999999998\" width=\"720\" height=\"620.0175963370089\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Execute FFmpeg Process - ffmpeg.ts:L136-148\" value=\"Execute FFmpeg Process - ffmpeg.ts:L136-148\" id=\"a9e2aacd-aa48-45a3-9abc-e4155c788650\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"32eec39f-6ea1-43b3-9abf-a9309536057d\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"460.0175963370088\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Main Process: Execute FFmpeg - ffmpeg.ts:L361-399\" value=\"Main Process: Execute FFmpeg - ffmpeg.ts:L361-399\" id=\"37cfdc91-2660-4067-aaa0-90217d83c698\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"32eec39f-6ea1-43b3-9abf-a9309536057d\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"330\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Main Process: Parse FFmpeg Output - ffmpeg.ts:L378-390\" value=\"Main Process: Parse FFmpeg Output - ffmpeg.ts:L378-390\" id=\"ddb47d87-44fe-4a40-b379-d89682b80404\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"32eec39f-6ea1-43b3-9abf-a9309536057d\" vertex=\"1\">\n            <mxGeometry x=\"470\" y=\"307.04391985626285\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"40eb651f-95df-4092-9e3b-32800adadd06\" value=\"Data Stream:&#xa;FFmpeg stderr\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"32eec39f-6ea1-43b3-9abf-a9309536057d\" source=\"37cfdc91-2660-4067-aaa0-90217d83c698\" target=\"ddb47d87-44fe-4a40-b379-d89682b80404\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"370\" y=\"375\" />\n              <mxPoint x=\"370\" y=\"352.04391985626285\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <UserObject label=\"(Snapshot Flow) Execute FFmpeg in Main Process - ffmpeg.ts:L455-474\" value=\"(Snapshot Flow) Execute FFmpeg in Main Process - ffmpeg.ts:L455-474\" id=\"1be22197-755b-40c1-8231-6fb608c02044\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"32eec39f-6ea1-43b3-9abf-a9309536057d\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"200\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"(Sequence Flow) Execute FFmpeg Extraction in Main Process - ffmpeg.ts:L455-474\" value=\"(Sequence Flow) Execute FFmpeg Extraction in Main Process - ffmpeg.ts:L455-474\" id=\"d0ee992f-e79c-4acc-ac1c-16fafe2a07f2\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"32eec39f-6ea1-43b3-9abf-a9309536057d\" vertex=\"1\">\n            <mxGeometry x=\"150\" y=\"70.00000000000001\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"menu.ts\" value=\"menu.ts\" id=\"14ed4fa6-f08f-460f-be82-0791033d8061\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=22;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;align=left;verticalAlign=bottom;spacing=0;spacingTop=-14;spacingLeft=15;arcSize=4;labelPosition=center;verticalLabelPosition=top;;fillColor=#f4e9e9\" parent=\"269ebc34-b745-4d7a-b2dc-e2d96c460f42\" vertex=\"1\">\n            <mxGeometry x=\"415\" y=\"70\" width=\"400\" height=\"879.9999999999998\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Flow 2 - Fix Duration: User Initiates Action - menu.ts:L198-202\" value=\"Flow 2 - Fix Duration: User Initiates Action - menu.ts:L198-202\" id=\"0ffa312b-b42c-4731-9198-454bb47379ad\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"14ed4fa6-f08f-460f-be82-0791033d8061\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"199.99999999999997\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"User Action: Select Scene Detection - menu.ts:L408-411\" value=\"User Action: Select Scene Detection - menu.ts:L408-411\" id=\"be0399f3-aafe-458a-91c0-3cd8256e9ab8\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"14ed4fa6-f08f-460f-be82-0791033d8061\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"70\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Import Flow: User Selects Import Option - menu.ts:L79-81\" value=\"Import Flow: User Selects Import Option - menu.ts:L79-81\" id=\"8132c00a-6af6-429d-b6b9-16c2b93f8af7\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"14ed4fa6-f08f-460f-be82-0791033d8061\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"719.9999999999998\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"Export Flow: User Selects Export Option - menu.ts:L154-156\" value=\"Export Flow: User Selects Export Option - menu.ts:L154-156\" id=\"d4a22f5b-fcda-4a11-9fbb-e19a52a4b7ca\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"14ed4fa6-f08f-460f-be82-0791033d8061\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"590\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Invert Flow] User Triggers Invert Segments - menu.ts:L324-328\" value=\"[Invert Flow] User Triggers Invert Segments - menu.ts:L324-328\" id=\"3f2b38be-7348-47a9-9067-95777a400ec4\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"14ed4fa6-f08f-460f-be82-0791033d8061\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"460.00000000000006\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <UserObject label=\"[Combine Flow] User Triggers Combine Segments - menu.ts:L306-310\" value=\"[Combine Flow] User Triggers Combine Segments - menu.ts:L306-310\" id=\"7f2155a4-b839-4e56-adf7-e3588ce38fd8\">\n          <mxCell style=\"rounded=1;whiteSpace=wrap;html=1;container=1;glass=0;comic=0;fontSize=12;fontColor=#615B5B;strokeWidth=0.7;strokeColor=#999190;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontStyle=0;\" parent=\"14ed4fa6-f08f-460f-be82-0791033d8061\" vertex=\"1\">\n            <mxGeometry x=\"70\" y=\"330.00000000000006\" width=\"180\" height=\"90\" as=\"geometry\" />\n          </mxCell>\n        </UserObject>\n        <mxCell id=\"24ae749a-dfd1-467a-b652-5223c9e46fef\" value=\"IPC: Execute&#xa;FFmpeg Command\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=11;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"d28248f6-2c22-40b4-bc29-a0b9948ed507\" target=\"a9e2aacd-aa48-45a3-9abc-e4155c788650\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\" />\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"91584e67-3532-45b7-8a12-113fbe2220c9\" value=\"Flow 2&#xa;- Fix&#xa;Duration: IPC&#xa;Message to&#xa;Renderer\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"0ffa312b-b42c-4731-9198-454bb47379ad\" target=\"a4014582-24ef-42f2-b4a7-547fe51eee4f\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"6630\" y=\"1695.2215948836972\" />\n              <mxPoint x=\"6630\" y=\"219.99999999999955\" />\n              <mxPoint x=\"100\" y=\"219.99999999999955\" />\n              <mxPoint x=\"100\" y=\"2064.0476170647507\" />\n              <mxPoint x=\"370\" y=\"2064.047617064751\" />\n              <mxPoint x=\"370\" y=\"1942.2870726630724\" />\n              <mxPoint x=\"970\" y=\"1942.2870726630724\" />\n              <mxPoint x=\"970\" y=\"1524.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"bc63267c-2d3e-4527-8c13-366857538486\" value=\"IPC: Main&#xa;-&gt; Renderer\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"be0399f3-aafe-458a-91c0-3cd8256e9ab8\" target=\"cb2d5282-649d-4169-9459-bd5722c494b2\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"6270\" y=\"1565.2215948836974\" />\n              <mxPoint x=\"6270\" y=\"1565.919397482792\" />\n              <mxPoint x=\"6445\" y=\"1565.9193974827922\" />\n              <mxPoint x=\"6445\" y=\"1566.5305443819802\" />\n              <mxPoint x=\"6620\" y=\"1566.5305443819798\" />\n              <mxPoint x=\"6620\" y=\"169.99999999999955\" />\n              <mxPoint x=\"90\" y=\"169.99999999999955\" />\n              <mxPoint x=\"90\" y=\"2150.0093282801163\" />\n              <mxPoint x=\"380\" y=\"2150.0093282801163\" />\n              <mxPoint x=\"380\" y=\"2004.597426791934\" />\n              <mxPoint x=\"980\" y=\"2004.597426791934\" />\n              <mxPoint x=\"980\" y=\"1654.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"8fb0eef8-b010-4d5b-8a97-307002463373\" value=\"Data Flow:&#xa;Parameters to&#xa;FFmpeg wrapper\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"37245537-83e0-4424-8828-38ed04ce7af6\" target=\"37cfdc91-2660-4067-aaa0-90217d83c698\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"3298.5714285714284\" y=\"1552\" />\n              <mxPoint x=\"3298.5714285714284\" y=\"1573.4546886287503\" />\n              <mxPoint x=\"4205\" y=\"1573.4546886287503\" />\n              <mxPoint x=\"4205\" y=\"1611.6769448319358\" />\n              <mxPoint x=\"4410\" y=\"1611.6769448319362\" />\n              <mxPoint x=\"4410\" y=\"2204.4073764218983\" />\n              <mxPoint x=\"5440\" y=\"2204.4073764218983\" />\n              <mxPoint x=\"5440\" y=\"2745.2215948836974\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"23fd92ba-e3a8-4b04-80b1-8451f0774db6\" value=\"IPC: Callback&#xa;to Renderer\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"ddb47d87-44fe-4a40-b379-d89682b80404\" target=\"5241093d-0c10-4147-89ad-9c47e0c8a2bb\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"6630\" y=\"2722.2655147399605\" />\n              <mxPoint x=\"6630\" y=\"5409.998197764842\" />\n              <mxPoint x=\"90\" y=\"5409.998197764842\" />\n              <mxPoint x=\"90\" y=\"5117.998197764842\" />\n              <mxPoint x=\"2540\" y=\"5117.998197764842\" />\n              <mxPoint x=\"2540\" y=\"2834.344416849288\" />\n              <mxPoint x=\"2785\" y=\"2834.3444168492874\" />\n              <mxPoint x=\"2785\" y=\"2072\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"a8a903a5-f2ed-4eef-9d74-491986cb8f76\" value=\"Import Flow:&#xa;IPC Message&#xa;to Renderer\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"8132c00a-6af6-429d-b6b9-16c2b93f8af7\" target=\"3be1cc98-9f00-4ec4-b9ae-b89114477cac\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"6640\" y=\"2215.221594883697\" />\n              <mxPoint x=\"6640\" y=\"5459.998197764841\" />\n              <mxPoint x=\"80\" y=\"5459.998197764841\" />\n              <mxPoint x=\"80\" y=\"2891.8036179669243\" />\n              <mxPoint x=\"1030\" y=\"2891.8036179669243\" />\n              <mxPoint x=\"1030\" y=\"2694.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"5420e169-ff0c-40cc-af81-2f8b3ef52899\" value=\"Export Flow:&#xa;IPC Message&#xa;to Renderer\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"d4a22f5b-fcda-4a11-9fbb-e19a52a4b7ca\" target=\"3e09cd2d-52ef-4b0b-a5fb-972f78bab761\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"6620\" y=\"2085.2215948836974\" />\n              <mxPoint x=\"6620\" y=\"5359.998197764841\" />\n              <mxPoint x=\"100\" y=\"5359.998197764841\" />\n              <mxPoint x=\"100\" y=\"5168.998197764841\" />\n              <mxPoint x=\"980\" y=\"5168.998197764841\" />\n              <mxPoint x=\"980\" y=\"3084.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"eea2e371-ef9c-49c8-bbf9-1e74c4c11433\" value=\"(Snapshot Flow)&#xa;Invoke Frame&#xa;Capture Hook\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"3a8a4cb2-dcba-43f7-8be3-b464a572e138\" target=\"1be22197-755b-40c1-8231-6fb608c02044\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1690\" y=\"1914.3900309564813\" />\n              <mxPoint x=\"1690\" y=\"1186\" />\n              <mxPoint x=\"5080\" y=\"1186\" />\n              <mxPoint x=\"5080\" y=\"1470.7331169340428\" />\n              <mxPoint x=\"5450\" y=\"1470.7331169340432\" />\n              <mxPoint x=\"5450\" y=\"2615.2215948836974\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"1704c16d-ebcc-44ff-8c7e-68159315e892\" value=\"(Sequence Flow)&#xa;Invoke Frame&#xa;Range Capture&#xa;Hook\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"231861b0-ddcf-4129-8f75-49a63bf9b379\" target=\"d0ee992f-e79c-4acc-ac1c-16fafe2a07f2\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"1465\" y=\"1394.3900309564815\" />\n              <mxPoint x=\"1465\" y=\"1394.572742245546\" />\n              <mxPoint x=\"1640\" y=\"1394.5727422455457\" />\n              <mxPoint x=\"1640\" y=\"981.9999999999998\" />\n              <mxPoint x=\"5090\" y=\"981.9999999999998\" />\n              <mxPoint x=\"5090\" y=\"1269.4183266510368\" />\n              <mxPoint x=\"5265\" y=\"1269.4183266510368\" />\n              <mxPoint x=\"5265\" y=\"1270.0350277224034\" />\n              <mxPoint x=\"5460\" y=\"1270.0350277224038\" />\n              <mxPoint x=\"5460\" y=\"2485.302327432832\" />\n              <mxPoint x=\"5770\" y=\"2485.302327432832\" />\n              <mxPoint x=\"5770\" y=\"2485.2215948836974\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"8729cbb8-4f27-4578-b465-900583cb7a2e\" value=\"(Sequence Flow)&#xa;Report Completion\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"d0ee992f-e79c-4acc-ac1c-16fafe2a07f2\" target=\"9c9c85c3-b4a1-4767-8264-999e40b2d754\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"6030\" y=\"2485.2215948836974\" />\n              <mxPoint x=\"6030\" y=\"2511.2060364638237\" />\n              <mxPoint x=\"6660\" y=\"2511.2060364638237\" />\n              <mxPoint x=\"6660\" y=\"120.00000000000045\" />\n              <mxPoint x=\"80\" y=\"120.00000000000045\" />\n              <mxPoint x=\"80\" y=\"2425.9684544983243\" />\n              <mxPoint x=\"1000\" y=\"2425.9684544983243\" />\n              <mxPoint x=\"1000\" y=\"2044.390030956482\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"186521f7-9226-4363-b238-efdf5356086a\" value=\"[Invert Flow]&#xa;IPC Message&#xa;to Renderer\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"3f2b38be-7348-47a9-9067-95777a400ec4\" target=\"a224479d-e0b0-4429-9fe3-c586de862f1a\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"6670\" y=\"1955.2215948836972\" />\n              <mxPoint x=\"6670\" y=\"69.99999999999977\" />\n              <mxPoint x=\"70\" y=\"69.99999999999977\" />\n              <mxPoint x=\"70\" y=\"2589.8897885958313\" />\n              <mxPoint x=\"1010\" y=\"2589.8897885958318\" />\n              <mxPoint x=\"1010\" y=\"2304.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n        <mxCell id=\"173c03b6-39db-4d04-9025-2b021b534309\" value=\"[Combine Flow]&#xa;IPC Message&#xa;to Renderer\" style=\"edgeStyle=orthogonalEdgeStyle;shape=connector;rounded=1;sketch=0;jumpStyle=arc;jumpSize=17;orthogonalLoop=1;jettySize=auto;html=0;shadow=0;labelBackgroundColor=none;fontFamily=Poppins;fontSource=https%3A%2F%2Ffonts.googleapis.com%2Fcss%3Ffamily%3DPoppins;fontSize=20;fontColor=#5C5C5C;endArrow=block;endFill=1;endSize=5;sourcePerimeterSpacing=0;targetPerimeterSpacing=0;strokeColor=#A1A1A1;strokeWidth=2;arcSize=50;labelPosition=center;verticalLabelPosition=top;align=center;verticalAlign=bottom;container=1;\" parent=\"08f574e7-9261-46ab-a2a4-e20060722bf1\" source=\"7f2155a4-b839-4e56-adf7-e3588ce38fd8\" target=\"13fb567e-091d-438d-9b9e-a54c0669ccf3\" edge=\"1\">\n          <mxGeometry relative=\"1\" as=\"geometry\">\n            <Array as=\"points\">\n              <mxPoint x=\"6650\" y=\"1825.2215948836972\" />\n              <mxPoint x=\"6650\" y=\"5509.998197764841\" />\n              <mxPoint x=\"70\" y=\"5509.998197764841\" />\n              <mxPoint x=\"70\" y=\"2787.95895577207\" />\n              <mxPoint x=\"1020\" y=\"2787.95895577207\" />\n              <mxPoint x=\"1020\" y=\"2564.3900309564815\" />\n            </Array>\n          </mxGeometry>\n        </mxCell>\n      </root>\n    </mxGraphModel>\n  </diagram>\n</mxfile>\n",
	"fileName": "lossless-cut.CodeCanvas",
	"fileURL": "github",
	"diagramTemplateVersion": 0.2,
	"filePath": "lossless-cut.CodeCanvas",
	"repoData": {
		"src": {
			"path": "src",
			"fileName": "src",
			"cellName": "src",
			"cellId": "08f574e7-9261-46ab-a2a4-e20060722bf1",
			"visible": true,
			"children": [
				"src/renderer",
				"src/main"
			]
		},
		"src/main": {
			"path": "src/main",
			"fileName": "main",
			"cellName": "main",
			"cellId": "269ebc34-b745-4d7a-b2dc-e2d96c460f42",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1",
			"children": [
				"src/main/ffmpeg.ts",
				"src/main/menu.ts"
			]
		},
		"src/main/ffmpeg.ts": {
			"path": "src/main/ffmpeg.ts",
			"fileName": "ffmpeg.ts",
			"cellName": "ffmpeg.ts",
			"cellId": "32eec39f-6ea1-43b3-9abf-a9309536057d",
			"visible": true,
			"parentCellId": "269ebc34-b745-4d7a-b2dc-e2d96c460f42",
			"children": [
				"src/main/ffmpeg.ts-simstep-a188d42d-7b37-4af8-899e-515c2b18fec1",
				"src/main/ffmpeg.ts-simstep-cdb7e529-e5ce-42b5-8f47-68240dc70caf",
				"src/main/ffmpeg.ts-simstep-af8d83bf-8f21-48e3-9167-bb0f9e810d6e",
				"src/main/ffmpeg.ts-simstep-78826a87-8c3c-46ac-b641-a502a73fa459",
				"src/main/ffmpeg.ts-simstep-f67ab7d7-8548-408b-a182-457f662f46ad"
			]
		},
		"src/main/menu.ts": {
			"path": "src/main/menu.ts",
			"fileName": "menu.ts",
			"cellName": "menu.ts",
			"cellId": "14ed4fa6-f08f-460f-be82-0791033d8061",
			"visible": true,
			"parentCellId": "269ebc34-b745-4d7a-b2dc-e2d96c460f42",
			"children": [
				"src/main/menu.ts-simstep-8bf66a0d-a5d6-4d8f-90d9-8d31cb11506c",
				"src/main/menu.ts-simstep-40371c98-e32f-4c44-88de-65a268b0365d",
				"src/main/menu.ts-simstep-d20ea994-dd2c-4f30-bdb9-e578fe2db09d",
				"src/main/menu.ts-simstep-ae5699f1-d8c0-49eb-8b5c-04086b2b8c5d",
				"src/main/menu.ts-simstep-f7da2115-31e3-45e8-9e57-488261e71e75",
				"src/main/menu.ts-simstep-9301e464-e767-4752-8918-5cdbc1ea7404"
			]
		},
		"src/renderer": {
			"path": "src/renderer",
			"fileName": "renderer",
			"cellName": "renderer",
			"cellId": "b9187016-b5ee-4447-85ce-a5969e6e0bd1",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1",
			"children": [
				"src/renderer/src"
			]
		},
		"src/renderer/src": {
			"path": "src/renderer/src",
			"fileName": "src",
			"cellName": "src",
			"cellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"visible": true,
			"parentCellId": "b9187016-b5ee-4447-85ce-a5969e6e0bd1",
			"children": [
				"src/renderer/src/App.tsx",
				"src/renderer/src/hooks",
				"src/renderer/src/components",
				"src/renderer/src/ffmpeg.ts",
				"src/renderer/src/StreamsSelector.tsx",
				"src/renderer/src/util",
				"src/renderer/src/smartcut.ts",
				"src/renderer/src/edlStore.ts",
				"src/renderer/src/edlFormats.ts",
				"src/renderer/src/BottomBar.tsx",
				"src/renderer/src/dialogs",
				"src/renderer/src/segments.ts",
				"src/renderer/src/SegmentList.tsx"
			]
		},
		"src/renderer/src/App.tsx": {
			"path": "src/renderer/src/App.tsx",
			"fileName": "App.tsx",
			"cellName": "App.tsx",
			"cellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/App.tsx-simstep-845251c0-7452-4a4b-8012-c8ec97276b91",
				"src/renderer/src/App.tsx-simstep-4eb0e9e5-71df-47bd-b79f-cfb6912c5dc8",
				"src/renderer/src/App.tsx-simstep-863ff54c-7df3-4a46-b9a1-35635cab1400",
				"src/renderer/src/App.tsx-simstep-955ac900-0c55-4874-a6b0-79d5d2d837bd",
				"src/renderer/src/App.tsx-simstep-27c9cc5e-0f71-47ec-9662-16036a682f0e",
				"src/renderer/src/App.tsx-simstep-aee3ba2d-a5a4-4722-bffa-117747a9baa2",
				"src/renderer/src/App.tsx-simstep-213b4de5-e0db-45e8-8800-5a6bd805b2d7",
				"src/renderer/src/App.tsx-simstep-ed52fb91-1af8-488d-aadf-191b5bd500b2",
				"src/renderer/src/App.tsx-simstep-02e786cd-aa09-446c-b601-8abb229d3006",
				"src/renderer/src/App.tsx-simstep-7b06b4b9-5998-4da9-a4f0-0ecd26beb4a6",
				"src/renderer/src/App.tsx-simstep-2e47980d-2b90-4e07-b525-55d0a7066f71",
				"src/renderer/src/App.tsx-simstep-d7853b0d-1469-446f-97a4-8f4917bcc39c",
				"src/renderer/src/App.tsx-simstep-173ecc7a-95f8-4554-a47c-644510ad0dd5",
				"src/renderer/src/App.tsx-simstep-2bbb9120-cc5a-4728-a757-a793aeaab9da",
				"src/renderer/src/App.tsx-simstep-ee5cf021-2f21-4b87-8636-49838317018b",
				"src/renderer/src/App.tsx-simstep-21467898-a81a-4dbe-8ee2-2fc84400d6fd",
				"src/renderer/src/App.tsx-simstep-4a9e886e-c83a-4a83-aa9a-0255e1593db8",
				"src/renderer/src/App.tsx-simstep-fe019b51-f6a4-4d7c-92f5-57bfb4c33006",
				"src/renderer/src/App.tsx-simstep-ca2c6087-098f-4937-ac1b-f24daeefe21f",
				"src/renderer/src/App.tsx-simstep-58545d6d-e481-4e4b-ac77-f26f03f3f1a8"
			]
		},
		"src/renderer/src/BottomBar.tsx": {
			"path": "src/renderer/src/BottomBar.tsx",
			"fileName": "BottomBar.tsx",
			"cellName": "BottomBar.tsx",
			"cellId": "d263d28e-33a2-4457-9e76-89873582ee51",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/BottomBar.tsx-simstep-ea5ac674-2bfc-489d-808f-76363db563d4"
			]
		},
		"src/renderer/src/SegmentList.tsx": {
			"path": "src/renderer/src/SegmentList.tsx",
			"fileName": "SegmentList.tsx",
			"cellName": "SegmentList.tsx",
			"cellId": "739186cb-e6ce-4e17-9031-de32d7289ec2",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/SegmentList.tsx-simstep-5807cb31-3a26-4919-837c-45f6a8e25d38"
			]
		},
		"src/renderer/src/StreamsSelector.tsx": {
			"path": "src/renderer/src/StreamsSelector.tsx",
			"fileName": "StreamsSelector.tsx",
			"cellName": "StreamsSelector.tsx",
			"cellId": "5dbe3c60-4b67-4779-affd-efe158861967",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/StreamsSelector.tsx-simstep-e33fd41f-8e45-4629-891a-96bfe74befea",
				"src/renderer/src/StreamsSelector.tsx-simstep-46e88c5a-04a3-41e7-8a20-88a1d33375f5",
				"src/renderer/src/StreamsSelector.tsx-simstep-988c168d-d169-44e2-8db4-5fa824a2c9fc"
			]
		},
		"src/renderer/src/components": {
			"path": "src/renderer/src/components",
			"fileName": "components",
			"cellName": "components",
			"cellId": "4d8cdb8b-92f1-4031-9deb-8db560dd8fd4",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/components/ConcatDialog.tsx",
				"src/renderer/src/components/OutputFormatSelect.tsx",
				"src/renderer/src/components/ExportConfirm.tsx"
			]
		},
		"src/renderer/src/components/ConcatDialog.tsx": {
			"path": "src/renderer/src/components/ConcatDialog.tsx",
			"fileName": "ConcatDialog.tsx",
			"cellName": "ConcatDialog.tsx",
			"cellId": "67bad1d2-fef9-41fd-968a-99a1cbc0dc87",
			"visible": true,
			"parentCellId": "4d8cdb8b-92f1-4031-9deb-8db560dd8fd4",
			"children": [
				"src/renderer/src/components/ConcatDialog.tsx-simstep-ac922fa1-891d-4a0b-887b-3c45a5b73c3b"
			]
		},
		"src/renderer/src/components/ExportConfirm.tsx": {
			"path": "src/renderer/src/components/ExportConfirm.tsx",
			"fileName": "ExportConfirm.tsx",
			"cellName": "ExportConfirm.tsx",
			"cellId": "5052c1c3-91bb-4c73-8e31-d7d619dda2ac",
			"visible": true,
			"parentCellId": "4d8cdb8b-92f1-4031-9deb-8db560dd8fd4",
			"children": [
				"src/renderer/src/components/ExportConfirm.tsx-simstep-41d0cbd1-99b2-4b9a-b291-0dbe5a2f88e9"
			]
		},
		"src/renderer/src/components/OutputFormatSelect.tsx": {
			"path": "src/renderer/src/components/OutputFormatSelect.tsx",
			"fileName": "OutputFormatSelect.tsx",
			"cellName": "OutputFormatSelect.tsx",
			"cellId": "041949e8-3540-4e65-b1a4-85251626e35a",
			"visible": true,
			"parentCellId": "4d8cdb8b-92f1-4031-9deb-8db560dd8fd4",
			"children": [
				"src/renderer/src/components/OutputFormatSelect.tsx-simstep-f427d759-56a1-41a0-80fe-b023c1dce208"
			]
		},
		"src/renderer/src/dialogs": {
			"path": "src/renderer/src/dialogs",
			"fileName": "dialogs",
			"cellName": "dialogs",
			"cellId": "197b4bf0-df82-4800-9fde-dd2b5f1705c7",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/dialogs/extractFrames.tsx"
			]
		},
		"src/renderer/src/dialogs/extractFrames.tsx": {
			"path": "src/renderer/src/dialogs/extractFrames.tsx",
			"fileName": "extractFrames.tsx",
			"cellName": "extractFrames.tsx",
			"cellId": "c74208fe-d712-4001-82d9-09b9305f1f8b",
			"visible": true,
			"parentCellId": "197b4bf0-df82-4800-9fde-dd2b5f1705c7",
			"children": [
				"src/renderer/src/dialogs/extractFrames.tsx-simstep-b15d12d0-6a2e-49c9-8273-33f9473ea5a6"
			]
		},
		"src/renderer/src/edlFormats.ts": {
			"path": "src/renderer/src/edlFormats.ts",
			"fileName": "edlFormats.ts",
			"cellName": "edlFormats.ts",
			"cellId": "ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/edlFormats.ts-simstep-2573bac3-ef83-4317-8fd9-d95b9179b062",
				"src/renderer/src/edlFormats.ts-simstep-50d00e9f-edde-4033-b5ae-f51aba69975a"
			]
		},
		"src/renderer/src/edlStore.ts": {
			"path": "src/renderer/src/edlStore.ts",
			"fileName": "edlStore.ts",
			"cellName": "edlStore.ts",
			"cellId": "31642bd3-508e-4846-82f7-69175958853a",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/edlStore.ts-simstep-23e2dcc5-356b-456a-ad5f-8f0a5e7f5208",
				"src/renderer/src/edlStore.ts-simstep-d27362df-12ad-4537-8ad0-6773f1007d7a",
				"src/renderer/src/edlStore.ts-simstep-528b00f4-ae1a-44a0-a878-7956402a1e54"
			]
		},
		"src/renderer/src/ffmpeg.ts": {
			"path": "src/renderer/src/ffmpeg.ts",
			"fileName": "ffmpeg.ts",
			"cellName": "ffmpeg.ts",
			"cellId": "0480baa3-5d8d-4682-a2a0-40501c4f8b6f",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/ffmpeg.ts-simstep-ffc9135c-640e-45bc-9963-f91a56c4be28"
			]
		},
		"src/renderer/src/hooks": {
			"path": "src/renderer/src/hooks",
			"fileName": "hooks",
			"cellName": "hooks",
			"cellId": "7e49f83d-ae9d-47b3-a830-816fcfb91933",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/hooks/useFfmpegOperations.ts",
				"src/renderer/src/hooks/useStreamsMeta.ts",
				"src/renderer/src/hooks/useSegments.ts",
				"src/renderer/src/hooks/useFrameCapture.ts"
			]
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "useFfmpegOperations.ts",
			"cellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"visible": true,
			"parentCellId": "7e49f83d-ae9d-47b3-a830-816fcfb91933",
			"children": [
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-65ff028f-6203-4209-9b7c-e1e2ad08f2ea",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-094622c7-3c67-4c0c-9127-f74b44e287c9",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-94a85694-deba-4194-bbdc-a7259f092fd3",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-02f4ae7d-a804-4596-a7a1-283443f846ac",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-c1b749bd-c3f1-4a1a-917f-879fdc03fe75",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-af6a3da3-d0fd-4655-b7c0-2b80659eb50c",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b8f2de2b-803a-4c4b-b156-49db2f78fe25",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-9ddf9512-4cd7-4624-a73e-42c7226a4b2a",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-031e71fd-9b3c-497f-aadd-c28741dfc46c",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-6b85e666-b0ef-41bb-8508-7e05c2717090",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-3d80835f-159e-412d-9da6-3166ad9782ab",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-03207e44-e3f8-4bb5-bfbc-f4d8566c5ae9",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-fb1e959e-770f-42ea-9fb7-87ce48613ccb",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-426751d7-e093-4f4f-8fae-20213883b58f",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-c629b7a3-c9e0-4527-aa02-078be0b06664",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b94f13fd-1350-41ac-9665-090724eb133a",
				"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b9c1b90e-b931-4dab-98f3-bdc4b0e6c33f"
			]
		},
		"src/renderer/src/hooks/useFrameCapture.ts": {
			"path": "src/renderer/src/hooks/useFrameCapture.ts",
			"fileName": "useFrameCapture.ts",
			"cellName": "useFrameCapture.ts",
			"cellId": "4e6a5b3a-8901-4162-8137-3fe70dc0f0bd",
			"visible": true,
			"parentCellId": "7e49f83d-ae9d-47b3-a830-816fcfb91933"
		},
		"src/renderer/src/hooks/useSegments.ts": {
			"path": "src/renderer/src/hooks/useSegments.ts",
			"fileName": "useSegments.ts",
			"cellName": "useSegments.ts",
			"cellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"visible": true,
			"parentCellId": "7e49f83d-ae9d-47b3-a830-816fcfb91933",
			"children": [
				"src/renderer/src/hooks/useSegments.ts-simstep-15be662c-7685-488b-a47c-fced395616dd",
				"src/renderer/src/hooks/useSegments.ts-simstep-c0969ce8-50b4-4827-81d2-25bba7b52713",
				"src/renderer/src/hooks/useSegments.ts-simstep-9d8e3dcd-9604-4c3d-9ca9-cc771de67142",
				"src/renderer/src/hooks/useSegments.ts-simstep-897dc8bf-7af7-4483-8d93-439ebe71a453",
				"src/renderer/src/hooks/useSegments.ts-simstep-3ff1ad81-a548-4df7-8e22-b2d42b4607fb",
				"src/renderer/src/hooks/useSegments.ts-simstep-bdb38b0a-8b2d-4cd5-b92a-b0311f36f6f7",
				"src/renderer/src/hooks/useSegments.ts-simstep-afe7418e-42b8-476a-bdb5-270946172431"
			]
		},
		"src/renderer/src/hooks/useStreamsMeta.ts": {
			"path": "src/renderer/src/hooks/useStreamsMeta.ts",
			"fileName": "useStreamsMeta.ts",
			"cellName": "useStreamsMeta.ts",
			"cellId": "e95f28c1-0b53-4ac8-9f2b-b5bb46422e04",
			"visible": true,
			"parentCellId": "7e49f83d-ae9d-47b3-a830-816fcfb91933",
			"children": [
				"src/renderer/src/hooks/useStreamsMeta.ts-simstep-45111440-dac7-4619-9756-f78f1df3cd51"
			]
		},
		"src/renderer/src/segments.ts": {
			"path": "src/renderer/src/segments.ts",
			"fileName": "segments.ts",
			"cellName": "segments.ts",
			"cellId": "0ad2329f-13db-4897-8036-441b2de93368",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/segments.ts-simstep-ccfb1951-bbcd-4d12-8178-9768a5ba4cdc",
				"src/renderer/src/segments.ts-simstep-85edd41a-47b3-406a-83a5-84447dee6db9"
			]
		},
		"src/renderer/src/smartcut.ts": {
			"path": "src/renderer/src/smartcut.ts",
			"fileName": "smartcut.ts",
			"cellName": "smartcut.ts",
			"cellId": "25e70706-236e-4980-b3ee-c3a693731783",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/smartcut.ts-simstep-98f7863b-55ac-4cc4-8e10-10ed2b48680c"
			]
		},
		"src/renderer/src/util": {
			"path": "src/renderer/src/util",
			"fileName": "util",
			"cellName": "util",
			"cellId": "39368be4-a7c3-4fa3-b45a-d18710dcf6c5",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"children": [
				"src/renderer/src/util/streams.ts"
			]
		},
		"src/renderer/src/util/streams.ts": {
			"path": "src/renderer/src/util/streams.ts",
			"fileName": "streams.ts",
			"cellName": "streams.ts",
			"cellId": "d304265f-c403-46aa-b3ef-0db7c41f2760",
			"visible": true,
			"parentCellId": "39368be4-a7c3-4fa3-b45a-d18710dcf6c5",
			"children": [
				"src/renderer/src/util/streams.ts-simstep-f8e52e75-cb21-49b8-b08b-30f1528d8813"
			]
		},
		"08f574e7-9261-46ab-a2a4-e20060722bf1": {
			"path": "08f574e7-9261-46ab-a2a4-e20060722bf1",
			"fileName": "08f574e7-9261-46ab-a2a4-e20060722bf1",
			"cellName": "src",
			"cellId": "08f574e7-9261-46ab-a2a4-e20060722bf1",
			"visible": true
		},
		"b9187016-b5ee-4447-85ce-a5969e6e0bd1": {
			"path": "b9187016-b5ee-4447-85ce-a5969e6e0bd1",
			"fileName": "b9187016-b5ee-4447-85ce-a5969e6e0bd1",
			"cellName": "renderer",
			"cellId": "b9187016-b5ee-4447-85ce-a5969e6e0bd1",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"6e32cfe4-6534-4175-993d-def5cfa859bf": {
			"path": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"fileName": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"cellName": "src",
			"cellId": "6e32cfe4-6534-4175-993d-def5cfa859bf",
			"visible": true,
			"parentCellId": "b9187016-b5ee-4447-85ce-a5969e6e0bd1"
		},
		"3c6792a6-2b59-4658-8e1b-7a309b404b40": {
			"path": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"fileName": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"cellName": "App.tsx",
			"cellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"7e49f83d-ae9d-47b3-a830-816fcfb91933": {
			"path": "7e49f83d-ae9d-47b3-a830-816fcfb91933",
			"fileName": "7e49f83d-ae9d-47b3-a830-816fcfb91933",
			"cellName": "hooks",
			"cellId": "7e49f83d-ae9d-47b3-a830-816fcfb91933",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c": {
			"path": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"fileName": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"cellName": "useFfmpegOperations.ts",
			"cellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"visible": true,
			"parentCellId": "7e49f83d-ae9d-47b3-a830-816fcfb91933"
		},
		"fe2d22b0-0ef4-48b7-9d4a-255979f68b67": {
			"path": "fe2d22b0-0ef4-48b7-9d4a-255979f68b67",
			"fileName": "fe2d22b0-0ef4-48b7-9d4a-255979f68b67",
			"cellName": "User Initiates Export - App.tsx:L1102-1114",
			"cellId": "fe2d22b0-0ef4-48b7-9d4a-255979f68b67",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-845251c0-7452-4a4b-8012-c8ec97276b91": {
			"path": "src/renderer/src/App.tsx-simstep-845251c0-7452-4a4b-8012-c8ec97276b91",
			"fileName": "App.tsx",
			"wiki": "The user confirms the export dialog, triggering the `handleExport` function. This function prepares for the export by gathering segment data, output filenames, and configuration settings.",
			"cellName": "User Initiates Export - App.tsx:L1102-1114",
			"cellId": "fe2d22b0-0ef4-48b7-9d4a-255979f68b67",
			"visible": true,
			"startLine": 1102,
			"endLine": 1114,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "845251c0-7452-4a4b-8012-c8ec97276b91"
				}
			]
		},
		"de110d79-f4d1-4207-9f70-d81c9e80873c": {
			"path": "de110d79-f4d1-4207-9f70-d81c9e80873c",
			"fileName": "de110d79-f4d1-4207-9f70-d81c9e80873c",
			"cellName": "Iterate Through Segments - useFfmpegOperations.ts:L648",
			"cellId": "de110d79-f4d1-4207-9f70-d81c9e80873c",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-65ff028f-6203-4209-9b7c-e1e2ad08f2ea": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-65ff028f-6203-4209-9b7c-e1e2ad08f2ea",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "The `cutMultiple` function receives the array of segments and uses `pMap` to iterate over them sequentially, calling the inner function `cutSegment` for each one to process it individually.",
			"cellName": "Iterate Through Segments - useFfmpegOperations.ts:L648",
			"cellId": "de110d79-f4d1-4207-9f70-d81c9e80873c",
			"visible": true,
			"startLine": 648,
			"endLine": 648,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "65ff028f-6203-4209-9b7c-e1e2ad08f2ea"
				}
			]
		},
		"a42e2f9e-821b-4469-92a9-270ed3c2fcaf": {
			"path": "a42e2f9e-821b-4469-92a9-270ed3c2fcaf",
			"fileName": "a42e2f9e-821b-4469-92a9-270ed3c2fcaf",
			"cellName": "Select Lossless Cut Operation - useFfmpegOperations.ts:L541-546",
			"cellId": "a42e2f9e-821b-4469-92a9-270ed3c2fcaf",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-094622c7-3c67-4c0c-9127-f74b44e287c9": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-094622c7-3c67-4c0c-9127-f74b44e287c9",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "Inside `cutSegment`, the function checks if re-encoding is needed. For a standard lossless cut, `isEncoding` is false, which directs the logic to call `losslessCutSingle` to perform the cut without re-encoding.",
			"cellName": "Select Lossless Cut Operation - useFfmpegOperations.ts:L541-546",
			"cellId": "a42e2f9e-821b-4469-92a9-270ed3c2fcaf",
			"visible": true,
			"startLine": 541,
			"endLine": 546,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "094622c7-3c67-4c0c-9127-f74b44e287c9"
				}
			]
		},
		"d2ff73e2-fc80-48b8-8405-0a5d1c9e406b": {
			"path": "d2ff73e2-fc80-48b8-8405-0a5d1c9e406b",
			"fileName": "d2ff73e2-fc80-48b8-8405-0a5d1c9e406b",
			"cellName": "Construct and Execute FFmpeg Command - useFfmpegOperations.ts:L235-482",
			"cellId": "d2ff73e2-fc80-48b8-8405-0a5d1c9e406b",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-94a85694-deba-4194-bbdc-a7259f092fd3": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-94a85694-deba-4194-bbdc-a7259f092fd3",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "The `losslessCutSingle` function assembles an array of arguments for the FFmpeg command-line tool based on the provided parameters. This includes input file, output file, start/end times, codec instructions (`-c copy`), and metadata flags. It then executes this command via `runFfmpeg`.",
			"cellName": "Construct and Execute FFmpeg Command - useFfmpegOperations.ts:L235-482",
			"cellId": "d2ff73e2-fc80-48b8-8405-0a5d1c9e406b",
			"visible": true,
			"startLine": 235,
			"endLine": 482,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "94a85694-deba-4194-bbdc-a7259f092fd3"
				}
			]
		},
		"300bb67a-6d77-4cd3-9752-0504b721b3f1": {
			"path": "300bb67a-6d77-4cd3-9752-0504b721b3f1",
			"fileName": "300bb67a-6d77-4cd3-9752-0504b721b3f1",
			"cellName": "Aggregate Export Results - useFfmpegOperations.ts:L648",
			"cellId": "300bb67a-6d77-4cd3-9752-0504b721b3f1",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-02f4ae7d-a804-4596-a7a1-283443f846ac": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-02f4ae7d-a804-4596-a7a1-283443f846ac",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "After all segment processing promises resolve, `pMap` returns an array of result objects, each containing the path to the newly created video file for that segment. The `cutMultiple` function then returns this array.",
			"cellName": "Aggregate Export Results - useFfmpegOperations.ts:L648",
			"cellId": "300bb67a-6d77-4cd3-9752-0504b721b3f1",
			"visible": true,
			"startLine": 648,
			"endLine": 648,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "02f4ae7d-a804-4596-a7a1-283443f846ac"
				}
			]
		},
		"3fbb97de-244f-4d2f-81da-c826f31797ad": {
			"path": "3fbb97de-244f-4d2f-81da-c826f31797ad",
			"fileName": "3fbb97de-244f-4d2f-81da-c826f31797ad",
			"cellName": "Finalize Export Process - App.tsx:L1242-1250",
			"cellId": "3fbb97de-244f-4d2f-81da-c826f31797ad",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-4eb0e9e5-71df-47bd-b79f-cfb6912c5dc8": {
			"path": "src/renderer/src/App.tsx-simstep-4eb0e9e5-71df-47bd-b79f-cfb6912c5dc8",
			"fileName": "App.tsx",
			"wiki": "Back in `App.tsx`, the `handleExport` function receives the list of created files. It then proceeds with post-export actions, such as displaying an OS notification of success and cleaning up any temporary files.",
			"cellName": "Finalize Export Process - App.tsx:L1242-1250",
			"cellId": "3fbb97de-244f-4d2f-81da-c826f31797ad",
			"visible": true,
			"startLine": 1242,
			"endLine": 1250,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "4eb0e9e5-71df-47bd-b79f-cfb6912c5dc8"
				}
			]
		},
		"eb1e541d-893f-46d8-a04a-fb59997562e6": {
			"path": "eb1e541d-893f-46d8-a04a-fb59997562e6",
			"fileName": "eb1e541d-893f-46d8-a04a-fb59997562e6",
			"cellName": "Pass Segments\nand Config\nto `cutMultiple`",
			"cellId": "eb1e541d-893f-46d8-a04a-fb59997562e6",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-20bb3bf1-3b85-4cb1-ad93-85980f847002-eb1e541d-893f-46d8-a04a-fb59997562e6": {
			"path": "generated-edge-simstep-20bb3bf1-3b85-4cb1-ad93-85980f847002-eb1e541d-893f-46d8-a04a-fb59997562e6",
			"fileName": "App.tsx",
			"cellName": "Pass Segments and Config to `cutMultiple`",
			"cellId": "eb1e541d-893f-46d8-a04a-fb59997562e6",
			"visible": true,
			"startLine": 1115,
			"endLine": 1120,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "20bb3bf1-3b85-4cb1-ad93-85980f847002"
				}
			]
		},
		"d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f": {
			"path": "d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f",
			"fileName": "d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f",
			"cellName": "Pass Single\nSegment Data",
			"cellId": "d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"generated-edge-simstep-75a49b6d-aca5-483b-ae62-9db1e8066ca6-d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f": {
			"path": "generated-edge-simstep-75a49b6d-aca5-483b-ae62-9db1e8066ca6-d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "Pass Single Segment Data",
			"cellId": "d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f",
			"visible": true,
			"startLine": 528,
			"endLine": 528,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "75a49b6d-aca5-483b-ae62-9db1e8066ca6"
				}
			]
		},
		"64a4e618-8662-4f28-8ac6-fd723229e316": {
			"path": "64a4e618-8662-4f28-8ac6-fd723229e316",
			"fileName": "64a4e618-8662-4f28-8ac6-fd723229e316",
			"cellName": "Transmit Single\nCut Parameters",
			"cellId": "64a4e618-8662-4f28-8ac6-fd723229e316",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"generated-edge-simstep-bfede9c1-b355-4fe4-9743-aec91885be39-64a4e618-8662-4f28-8ac6-fd723229e316": {
			"path": "generated-edge-simstep-bfede9c1-b355-4fe4-9743-aec91885be39-64a4e618-8662-4f28-8ac6-fd723229e316",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "Transmit Single Cut Parameters",
			"cellId": "64a4e618-8662-4f28-8ac6-fd723229e316",
			"visible": true,
			"startLine": 542,
			"endLine": 545,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "bfede9c1-b355-4fe4-9743-aec91885be39"
				}
			]
		},
		"665b9b8d-5ebf-4595-a962-92e96bf0bb8c": {
			"path": "665b9b8d-5ebf-4595-a962-92e96bf0bb8c",
			"fileName": "665b9b8d-5ebf-4595-a962-92e96bf0bb8c",
			"cellName": "FFmpeg Command\nTransmission",
			"cellId": "665b9b8d-5ebf-4595-a962-92e96bf0bb8c",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"generated-edge-simstep-e32e2f34-4a4e-4082-9085-29163c74ee3d-665b9b8d-5ebf-4595-a962-92e96bf0bb8c": {
			"path": "generated-edge-simstep-e32e2f34-4a4e-4082-9085-29163c74ee3d-665b9b8d-5ebf-4595-a962-92e96bf0bb8c",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "FFmpeg Command Transmission",
			"cellId": "665b9b8d-5ebf-4595-a962-92e96bf0bb8c",
			"visible": true,
			"startLine": 481,
			"endLine": 481,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "e32e2f34-4a4e-4082-9085-29163c74ee3d"
				}
			]
		},
		"4b6225fd-880e-4303-a556-046cdf4f3bec": {
			"path": "4b6225fd-880e-4303-a556-046cdf4f3bec",
			"fileName": "4b6225fd-880e-4303-a556-046cdf4f3bec",
			"cellName": "Return File\nPaths to\nCaller",
			"cellId": "4b6225fd-880e-4303-a556-046cdf4f3bec",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-55eeda84-7f47-44a6-b0d8-c3d460ad7f42-4b6225fd-880e-4303-a556-046cdf4f3bec": {
			"path": "generated-edge-simstep-55eeda84-7f47-44a6-b0d8-c3d460ad7f42-4b6225fd-880e-4303-a556-046cdf4f3bec",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "Return File Paths to Caller",
			"cellId": "4b6225fd-880e-4303-a556-046cdf4f3bec",
			"visible": true,
			"startLine": 1115,
			"endLine": 1115,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Segment Cutting and Exporting",
					"simStepId": "55eeda84-7f47-44a6-b0d8-c3d460ad7f42"
				}
			]
		},
		"269ebc34-b745-4d7a-b2dc-e2d96c460f42": {
			"path": "269ebc34-b745-4d7a-b2dc-e2d96c460f42",
			"fileName": "269ebc34-b745-4d7a-b2dc-e2d96c460f42",
			"cellName": "main",
			"cellId": "269ebc34-b745-4d7a-b2dc-e2d96c460f42",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"32eec39f-6ea1-43b3-9abf-a9309536057d": {
			"path": "32eec39f-6ea1-43b3-9abf-a9309536057d",
			"fileName": "32eec39f-6ea1-43b3-9abf-a9309536057d",
			"cellName": "ffmpeg.ts",
			"cellId": "32eec39f-6ea1-43b3-9abf-a9309536057d",
			"visible": true,
			"parentCellId": "269ebc34-b745-4d7a-b2dc-e2d96c460f42"
		},
		"4d8cdb8b-92f1-4031-9deb-8db560dd8fd4": {
			"path": "4d8cdb8b-92f1-4031-9deb-8db560dd8fd4",
			"fileName": "4d8cdb8b-92f1-4031-9deb-8db560dd8fd4",
			"cellName": "components",
			"cellId": "4d8cdb8b-92f1-4031-9deb-8db560dd8fd4",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"0480baa3-5d8d-4682-a2a0-40501c4f8b6f": {
			"path": "0480baa3-5d8d-4682-a2a0-40501c4f8b6f",
			"fileName": "0480baa3-5d8d-4682-a2a0-40501c4f8b6f",
			"cellName": "ffmpeg.ts",
			"cellId": "0480baa3-5d8d-4682-a2a0-40501c4f8b6f",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"67bad1d2-fef9-41fd-968a-99a1cbc0dc87": {
			"path": "67bad1d2-fef9-41fd-968a-99a1cbc0dc87",
			"fileName": "67bad1d2-fef9-41fd-968a-99a1cbc0dc87",
			"cellName": "ConcatDialog.tsx",
			"cellId": "67bad1d2-fef9-41fd-968a-99a1cbc0dc87",
			"visible": true,
			"parentCellId": "4d8cdb8b-92f1-4031-9deb-8db560dd8fd4"
		},
		"2d06215c-fe3e-4416-a3c7-fe10657bf467": {
			"path": "2d06215c-fe3e-4416-a3c7-fe10657bf467",
			"fileName": "2d06215c-fe3e-4416-a3c7-fe10657bf467",
			"cellName": "User Initiates File Concatenation - ConcatDialog.tsx:L38-43",
			"cellId": "2d06215c-fe3e-4416-a3c7-fe10657bf467",
			"visible": true,
			"parentCellId": "67bad1d2-fef9-41fd-968a-99a1cbc0dc87"
		},
		"src/renderer/src/components/ConcatDialog.tsx-simstep-ac922fa1-891d-4a0b-887b-3c45a5b73c3b": {
			"path": "src/renderer/src/components/ConcatDialog.tsx-simstep-ac922fa1-891d-4a0b-887b-3c45a5b73c3b",
			"fileName": "ConcatDialog.tsx",
			"wiki": "The user is presented with the 'ConcatDialog' after selecting multiple files. This dialog allows them to confirm the files to be merged and configure output options before starting the operation.",
			"cellName": "User Initiates File Concatenation - ConcatDialog.tsx:L38-43",
			"cellId": "2d06215c-fe3e-4416-a3c7-fe10657bf467",
			"visible": true,
			"startLine": 38,
			"endLine": 43,
			"parentCellId": "67bad1d2-fef9-41fd-968a-99a1cbc0dc87",
			"parentPath": "src/renderer/src/components/ConcatDialog.tsx",
			"simSteps": [
				{
					"simulationKey": "Merging Multiple Files (Concatenation)",
					"simStepId": "ac922fa1-891d-4a0b-887b-3c45a5b73c3b"
				}
			]
		},
		"ac7b945f-009b-48d8-b31c-1d605096bd36": {
			"path": "ac7b945f-009b-48d8-b31c-1d605096bd36",
			"fileName": "ac7b945f-009b-48d8-b31c-1d605096bd36",
			"cellName": "Orchestrate FFmpeg Operation - App.tsx:L954-955",
			"cellId": "ac7b945f-009b-48d8-b31c-1d605096bd36",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-863ff54c-7df3-4a46-b9a1-35635cab1400": {
			"path": "src/renderer/src/App.tsx-simstep-863ff54c-7df3-4a46-b9a1-35635cab1400",
			"fileName": "App.tsx",
			"wiki": "The main `App` component receives the request and calls the `concatFiles` function from the `useFfmpegOperations` hook. It prepares the necessary parameters like output path, format, and metadata source.",
			"cellName": "Orchestrate FFmpeg Operation - App.tsx:L954-955",
			"cellId": "ac7b945f-009b-48d8-b31c-1d605096bd36",
			"visible": true,
			"startLine": 954,
			"endLine": 955,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Merging Multiple Files (Concatenation)",
					"simStepId": "863ff54c-7df3-4a46-b9a1-35635cab1400"
				}
			]
		},
		"98403ab6-6ec1-4bdd-b9d2-91bea01c233b": {
			"path": "98403ab6-6ec1-4bdd-b9d2-91bea01c233b",
			"fileName": "98403ab6-6ec1-4bdd-b9d2-91bea01c233b",
			"cellName": "Prepare FFmpeg Concat Command - useFfmpegOperations.ts:L113-229",
			"cellId": "98403ab6-6ec1-4bdd-b9d2-91bea01c233b",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-c1b749bd-c3f1-4a1a-917f-879fdc03fe75": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-c1b749bd-c3f1-4a1a-917f-879fdc03fe75",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "The `concatFiles` function in `useFfmpegOperations.ts` constructs the FFmpeg command. It generates a text-based list of files for FFmpeg's concat demuxer and assembles all the necessary command-line arguments for a lossless merge. It then calls `runFfmpegConcat` to execute the command.",
			"cellName": "Prepare FFmpeg Concat Command - useFfmpegOperations.ts:L113-229",
			"cellId": "98403ab6-6ec1-4bdd-b9d2-91bea01c233b",
			"visible": true,
			"startLine": 113,
			"endLine": 229,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Merging Multiple Files (Concatenation)",
					"simStepId": "c1b749bd-c3f1-4a1a-917f-879fdc03fe75"
				}
			]
		},
		"d28248f6-2c22-40b4-bc29-a0b9948ed507": {
			"path": "d28248f6-2c22-40b4-bc29-a0b9948ed507",
			"fileName": "d28248f6-2c22-40b4-bc29-a0b9948ed507",
			"cellName": "Renderer to Main Process Bridge - ffmpeg.ts:L17-20",
			"cellId": "d28248f6-2c22-40b4-bc29-a0b9948ed507",
			"visible": true,
			"parentCellId": "0480baa3-5d8d-4682-a2a0-40501c4f8b6f"
		},
		"src/renderer/src/ffmpeg.ts-simstep-ffc9135c-640e-45bc-9963-f91a56c4be28": {
			"path": "src/renderer/src/ffmpeg.ts-simstep-ffc9135c-640e-45bc-9963-f91a56c4be28",
			"fileName": "ffmpeg.ts",
			"wiki": "In the renderer process, `runFfmpegConcat` is a proxy function obtained via Electron's remote module. Calling it triggers an Inter-Process Communication (IPC) call to the corresponding function in the main process, where the actual command can be executed safely.",
			"cellName": "Renderer to Main Process Bridge - ffmpeg.ts:L17-20",
			"cellId": "d28248f6-2c22-40b4-bc29-a0b9948ed507",
			"visible": true,
			"startLine": 17,
			"endLine": 20,
			"parentCellId": "0480baa3-5d8d-4682-a2a0-40501c4f8b6f",
			"parentPath": "src/renderer/src/ffmpeg.ts",
			"simSteps": [
				{
					"simulationKey": "Merging Multiple Files (Concatenation)",
					"simStepId": "ffc9135c-640e-45bc-9963-f91a56c4be28"
				}
			]
		},
		"a9e2aacd-aa48-45a3-9abc-e4155c788650": {
			"path": "a9e2aacd-aa48-45a3-9abc-e4155c788650",
			"fileName": "a9e2aacd-aa48-45a3-9abc-e4155c788650",
			"cellName": "Execute FFmpeg Process - ffmpeg.ts:L136-148",
			"cellId": "a9e2aacd-aa48-45a3-9abc-e4155c788650",
			"visible": true,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d"
		},
		"src/main/ffmpeg.ts-simstep-a188d42d-7b37-4af8-899e-515c2b18fec1": {
			"path": "src/main/ffmpeg.ts-simstep-a188d42d-7b37-4af8-899e-515c2b18fec1",
			"fileName": "ffmpeg.ts",
			"wiki": "In the main process, `runFfmpegConcat` receives the arguments. It spawns the `ffmpeg` binary as a child process using `execa`. The `concatTxt` string, containing the list of files, is piped directly to the standard input of the FFmpeg process, which is configured to read from it (`-i -`). Progress is monitored by parsing FFmpeg's stderr output.",
			"cellName": "Execute FFmpeg Process - ffmpeg.ts:L136-148",
			"cellId": "a9e2aacd-aa48-45a3-9abc-e4155c788650",
			"visible": true,
			"startLine": 136,
			"endLine": 148,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d",
			"parentPath": "src/main/ffmpeg.ts",
			"simSteps": [
				{
					"simulationKey": "Merging Multiple Files (Concatenation)",
					"simStepId": "a188d42d-7b37-4af8-899e-515c2b18fec1"
				}
			]
		},
		"fbb618a0-e07c-46d7-8948-808dafdc9dc7": {
			"path": "fbb618a0-e07c-46d7-8948-808dafdc9dc7",
			"fileName": "fbb618a0-e07c-46d7-8948-808dafdc9dc7",
			"cellName": "Send Concatenation\nRequest",
			"cellId": "fbb618a0-e07c-46d7-8948-808dafdc9dc7",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-2927425d-e2d1-4c68-a682-333f31ad6394-fbb618a0-e07c-46d7-8948-808dafdc9dc7": {
			"path": "generated-edge-simstep-2927425d-e2d1-4c68-a682-333f31ad6394-fbb618a0-e07c-46d7-8948-808dafdc9dc7",
			"fileName": "ConcatDialog.tsx",
			"cellName": "Send Concatenation Request",
			"cellId": "fbb618a0-e07c-46d7-8948-808dafdc9dc7",
			"visible": true,
			"startLine": 2825,
			"endLine": 2825,
			"parentPath": "src/renderer/src/components/ConcatDialog.tsx",
			"simSteps": [
				{
					"simulationKey": "Merging Multiple Files (Concatenation)",
					"simStepId": "2927425d-e2d1-4c68-a682-333f31ad6394"
				}
			]
		},
		"435dd0f4-2dae-4277-9f80-6dfe96e3dd31": {
			"path": "435dd0f4-2dae-4277-9f80-6dfe96e3dd31",
			"fileName": "435dd0f4-2dae-4277-9f80-6dfe96e3dd31",
			"cellName": "Pass Parameters\nto concatFiles\nHook",
			"cellId": "435dd0f4-2dae-4277-9f80-6dfe96e3dd31",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-83054c09-b200-4d3b-8723-d6e4c8d163a6-435dd0f4-2dae-4277-9f80-6dfe96e3dd31": {
			"path": "generated-edge-simstep-83054c09-b200-4d3b-8723-d6e4c8d163a6-435dd0f4-2dae-4277-9f80-6dfe96e3dd31",
			"fileName": "App.tsx",
			"cellName": "Pass Parameters to concatFiles Hook",
			"cellId": "435dd0f4-2dae-4277-9f80-6dfe96e3dd31",
			"visible": true,
			"startLine": 954,
			"endLine": 955,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Merging Multiple Files (Concatenation)",
					"simStepId": "83054c09-b200-4d3b-8723-d6e4c8d163a6"
				}
			]
		},
		"53f57e02-1e21-454a-911a-dae6b5c88f05": {
			"path": "53f57e02-1e21-454a-911a-dae6b5c88f05",
			"fileName": "53f57e02-1e21-454a-911a-dae6b5c88f05",
			"cellName": "Invoke FFmpeg\nExecution",
			"cellId": "53f57e02-1e21-454a-911a-dae6b5c88f05",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-260737b5-8e03-4587-993c-a3d00af7fb21-53f57e02-1e21-454a-911a-dae6b5c88f05": {
			"path": "generated-edge-simstep-260737b5-8e03-4587-993c-a3d00af7fb21-53f57e02-1e21-454a-911a-dae6b5c88f05",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "Invoke FFmpeg Execution",
			"cellId": "53f57e02-1e21-454a-911a-dae6b5c88f05",
			"visible": true,
			"startLine": 225,
			"endLine": 225,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Merging Multiple Files (Concatenation)",
					"simStepId": "260737b5-8e03-4587-993c-a3d00af7fb21"
				}
			]
		},
		"24ae749a-dfd1-467a-b652-5223c9e46fef": {
			"path": "24ae749a-dfd1-467a-b652-5223c9e46fef",
			"fileName": "24ae749a-dfd1-467a-b652-5223c9e46fef",
			"cellName": "IPC: Execute\nFFmpeg Command",
			"cellId": "24ae749a-dfd1-467a-b652-5223c9e46fef",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-5433a936-c1ba-43aa-8955-51f5a0dc427d-24ae749a-dfd1-467a-b652-5223c9e46fef": {
			"path": "generated-edge-simstep-5433a936-c1ba-43aa-8955-51f5a0dc427d-24ae749a-dfd1-467a-b652-5223c9e46fef",
			"fileName": "ffmpeg.ts",
			"cellName": "IPC: Execute FFmpeg Command",
			"cellId": "24ae749a-dfd1-467a-b652-5223c9e46fef",
			"visible": true,
			"startLine": 17,
			"endLine": 17,
			"parentPath": "src/renderer/src/ffmpeg.ts",
			"simSteps": [
				{
					"simulationKey": "Merging Multiple Files (Concatenation)",
					"simStepId": "5433a936-c1ba-43aa-8955-51f5a0dc427d"
				}
			]
		},
		"5dbe3c60-4b67-4779-affd-efe158861967": {
			"path": "5dbe3c60-4b67-4779-affd-efe158861967",
			"fileName": "5dbe3c60-4b67-4779-affd-efe158861967",
			"cellName": "StreamsSelector.tsx",
			"cellId": "5dbe3c60-4b67-4779-affd-efe158861967",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"39368be4-a7c3-4fa3-b45a-d18710dcf6c5": {
			"path": "39368be4-a7c3-4fa3-b45a-d18710dcf6c5",
			"fileName": "39368be4-a7c3-4fa3-b45a-d18710dcf6c5",
			"cellName": "util",
			"cellId": "39368be4-a7c3-4fa3-b45a-d18710dcf6c5",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"e95f28c1-0b53-4ac8-9f2b-b5bb46422e04": {
			"path": "e95f28c1-0b53-4ac8-9f2b-b5bb46422e04",
			"fileName": "e95f28c1-0b53-4ac8-9f2b-b5bb46422e04",
			"cellName": "useStreamsMeta.ts",
			"cellId": "e95f28c1-0b53-4ac8-9f2b-b5bb46422e04",
			"visible": true,
			"parentCellId": "7e49f83d-ae9d-47b3-a830-816fcfb91933"
		},
		"d304265f-c403-46aa-b3ef-0db7c41f2760": {
			"path": "d304265f-c403-46aa-b3ef-0db7c41f2760",
			"fileName": "d304265f-c403-46aa-b3ef-0db7c41f2760",
			"cellName": "streams.ts",
			"cellId": "d304265f-c403-46aa-b3ef-0db7c41f2760",
			"visible": true,
			"parentCellId": "39368be4-a7c3-4fa3-b45a-d18710dcf6c5"
		},
		"278368fe-f438-43ce-b29e-2dd4620f6144": {
			"path": "278368fe-f438-43ce-b29e-2dd4620f6144",
			"fileName": "278368fe-f438-43ce-b29e-2dd4620f6144",
			"cellName": "Flow 1: Show Streams Selector Dialog - App.tsx:L2778",
			"cellId": "278368fe-f438-43ce-b29e-2dd4620f6144",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-955ac900-0c55-4874-a6b0-79d5d2d837bd": {
			"path": "src/renderer/src/App.tsx-simstep-955ac900-0c55-4874-a6b0-79d5d2d837bd",
			"fileName": "App.tsx",
			"wiki": "The user action of opening the stream selector UI triggers a state update, setting `streamsSelectorShown` to true. This causes the `StreamsSelector` component, which is wrapped in a `Sheet`, to become visible.",
			"cellName": "Flow 1: Show Streams Selector Dialog - App.tsx:L2778",
			"cellId": "278368fe-f438-43ce-b29e-2dd4620f6144",
			"visible": true,
			"startLine": 2778,
			"endLine": 2778,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "955ac900-0c55-4874-a6b0-79d5d2d837bd"
				}
			]
		},
		"89f6803e-d025-491d-a31d-ce4a63331ded": {
			"path": "89f6803e-d025-491d-a31d-ce4a63331ded",
			"fileName": "89f6803e-d025-491d-a31d-ce4a63331ded",
			"cellName": "Flow 1: Render Streams UI and Handle User Interaction - StreamsSelector.tsx:L362-371",
			"cellId": "89f6803e-d025-491d-a31d-ce4a63331ded",
			"visible": true,
			"parentCellId": "5dbe3c60-4b67-4779-affd-efe158861967"
		},
		"src/renderer/src/StreamsSelector.tsx-simstep-e33fd41f-8e45-4629-891a-96bfe74befea": {
			"path": "src/renderer/src/StreamsSelector.tsx-simstep-e33fd41f-8e45-4629-891a-96bfe74befea",
			"fileName": "StreamsSelector.tsx",
			"wiki": "The `StreamsSelector` component receives the props and renders an interface listing each stream from each file. Checkboxes reflect the current selection. When a user clicks a checkbox, a callback function like `toggleCopyStreamId` is invoked.",
			"cellName": "Flow 1: Render Streams UI and Handle User Interaction - StreamsSelector.tsx:L362-371",
			"cellId": "89f6803e-d025-491d-a31d-ce4a63331ded",
			"visible": true,
			"startLine": 362,
			"endLine": 371,
			"parentCellId": "5dbe3c60-4b67-4779-affd-efe158861967",
			"parentPath": "src/renderer/src/StreamsSelector.tsx",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "e33fd41f-8e45-4629-891a-96bfe74befea"
				}
			]
		},
		"cccadc33-0f5b-4dab-be58-f6bbbe92f112": {
			"path": "cccadc33-0f5b-4dab-be58-f6bbbe92f112",
			"fileName": "cccadc33-0f5b-4dab-be58-f6bbbe92f112",
			"cellName": "Flow 1: Update Stream Selection State - useStreamsMeta.ts:L47-51",
			"cellId": "cccadc33-0f5b-4dab-be58-f6bbbe92f112",
			"visible": true,
			"parentCellId": "e95f28c1-0b53-4ac8-9f2b-b5bb46422e04"
		},
		"src/renderer/src/hooks/useStreamsMeta.ts-simstep-45111440-dac7-4619-9756-f78f1df3cd51": {
			"path": "src/renderer/src/hooks/useStreamsMeta.ts-simstep-45111440-dac7-4619-9756-f78f1df3cd51",
			"fileName": "useStreamsMeta.ts",
			"wiki": "The `setCopyStreamIdsForPath` function, part of the `useStreamsMeta` hook, processes the user's action. It updates the central `copyStreamIdsByFile` state, toggling the selection status for the specified stream.",
			"cellName": "Flow 1: Update Stream Selection State - useStreamsMeta.ts:L47-51",
			"cellId": "cccadc33-0f5b-4dab-be58-f6bbbe92f112",
			"visible": true,
			"startLine": 47,
			"endLine": 51,
			"parentCellId": "e95f28c1-0b53-4ac8-9f2b-b5bb46422e04",
			"parentPath": "src/renderer/src/hooks/useStreamsMeta.ts",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "45111440-dac7-4619-9756-f78f1df3cd51"
				}
			]
		},
		"29714876-444b-4ff3-9380-8eb92263b487": {
			"path": "29714876-444b-4ff3-9380-8eb92263b487",
			"fileName": "29714876-444b-4ff3-9380-8eb92263b487",
			"cellName": "Flow 1: Generate FFmpeg Stream Mapping Arguments - streams.ts:L202-215",
			"cellId": "29714876-444b-4ff3-9380-8eb92263b487",
			"visible": true,
			"parentCellId": "d304265f-c403-46aa-b3ef-0db7c41f2760"
		},
		"src/renderer/src/util/streams.ts-simstep-f8e52e75-cb21-49b8-b08b-30f1528d8813": {
			"path": "src/renderer/src/util/streams.ts-simstep-f8e52e75-cb21-49b8-b08b-30f1528d8813",
			"fileName": "streams.ts",
			"wiki": "The `getMapStreamsArgs` utility function is called with the list of selected streams. It generates the corresponding `-map` and codec (`-c`) arguments for the FFmpeg command, handling necessary codec conversions (e.g., srt to mov_text for an mp4 container).",
			"cellName": "Flow 1: Generate FFmpeg Stream Mapping Arguments - streams.ts:L202-215",
			"cellId": "29714876-444b-4ff3-9380-8eb92263b487",
			"visible": true,
			"startLine": 202,
			"endLine": 215,
			"parentCellId": "d304265f-c403-46aa-b3ef-0db7c41f2760",
			"parentPath": "src/renderer/src/util/streams.ts",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "f8e52e75-cb21-49b8-b08b-30f1528d8813"
				}
			]
		},
		"85c1e7e6-d4fb-4f2c-b0a3-d103d579f37c": {
			"path": "85c1e7e6-d4fb-4f2c-b0a3-d103d579f37c",
			"fileName": "85c1e7e6-d4fb-4f2c-b0a3-d103d579f37c",
			"cellName": "Flow 1: Assemble and Execute FFmpeg Command - useFfmpegOperations.ts:L321-344",
			"cellId": "85c1e7e6-d4fb-4f2c-b0a3-d103d579f37c",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-af6a3da3-d0fd-4655-b7c0-2b80659eb50c": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-af6a3da3-d0fd-4655-b7c0-2b80659eb50c",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "The stream mapping arguments are combined with other FFmpeg parameters (input file, output file, etc.) to form the final command. This command is then executed as a child process to produce the final output file with only the selected streams.",
			"cellName": "Flow 1: Assemble and Execute FFmpeg Command - useFfmpegOperations.ts:L321-344",
			"cellId": "85c1e7e6-d4fb-4f2c-b0a3-d103d579f37c",
			"visible": true,
			"startLine": 321,
			"endLine": 344,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "af6a3da3-d0fd-4655-b7c0-2b80659eb50c"
				}
			]
		},
		"fe33d7f0-dc9a-4170-be8d-bfb30bb090db": {
			"path": "fe33d7f0-dc9a-4170-be8d-bfb30bb090db",
			"fileName": "fe33d7f0-dc9a-4170-be8d-bfb30bb090db",
			"cellName": "Flow 2: User Initiates Single Stream Extraction - App.tsx:L2237-2245",
			"cellId": "fe33d7f0-dc9a-4170-be8d-bfb30bb090db",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-27c9cc5e-0f71-47ec-9662-16036a682f0e": {
			"path": "src/renderer/src/App.tsx-simstep-27c9cc5e-0f71-47ec-9662-16036a682f0e",
			"fileName": "App.tsx",
			"wiki": "As an alternative to exporting, the user can click an 'Extract' button for a specific stream in the `StreamsSelector` UI. This action triggers the `onExtractStreamPress` callback with the stream's index, which in turn calls the `extractStreams` operation.",
			"cellName": "Flow 2: User Initiates Single Stream Extraction - App.tsx:L2237-2245",
			"cellId": "fe33d7f0-dc9a-4170-be8d-bfb30bb090db",
			"visible": true,
			"startLine": 2237,
			"endLine": 2245,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "27c9cc5e-0f71-47ec-9662-16036a682f0e"
				}
			]
		},
		"363164a0-9f86-43c6-b468-3925e202f374": {
			"path": "363164a0-9f86-43c6-b468-3925e202f374",
			"fileName": "363164a0-9f86-43c6-b468-3925e202f374",
			"cellName": "Flow 2: Execute FFmpeg Extraction Command - useFfmpegOperations.ts:L981-985",
			"cellId": "363164a0-9f86-43c6-b468-3925e202f374",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b8f2de2b-803a-4c4b-b156-49db2f78fe25": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b8f2de2b-803a-4c4b-b156-49db2f78fe25",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "The `extractStreams` function receives the stream to be extracted. It constructs and executes a specific FFmpeg command designed to copy that single stream from the input file into its own separate output file.",
			"cellName": "Flow 2: Execute FFmpeg Extraction Command - useFfmpegOperations.ts:L981-985",
			"cellId": "363164a0-9f86-43c6-b468-3925e202f374",
			"visible": true,
			"startLine": 981,
			"endLine": 985,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "b8f2de2b-803a-4c4b-b156-49db2f78fe25"
				}
			]
		},
		"65d636c5-f1de-4017-ba01-a72fa4bfcce6": {
			"path": "65d636c5-f1de-4017-ba01-a72fa4bfcce6",
			"fileName": "65d636c5-f1de-4017-ba01-a72fa4bfcce6",
			"cellName": "Flow 1:\nPass Stream\nMetadata to\nUI",
			"cellId": "65d636c5-f1de-4017-ba01-a72fa4bfcce6",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-39c8dad5-33f3-4912-9d50-738cb104ddd6-65d636c5-f1de-4017-ba01-a72fa4bfcce6": {
			"path": "generated-edge-simstep-39c8dad5-33f3-4912-9d50-738cb104ddd6-65d636c5-f1de-4017-ba01-a72fa4bfcce6",
			"fileName": "App.tsx",
			"cellName": "Flow 1: Pass Stream Metadata to UI",
			"cellId": "65d636c5-f1de-4017-ba01-a72fa4bfcce6",
			"visible": true,
			"startLine": 2779,
			"endLine": 2790,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "39c8dad5-33f3-4912-9d50-738cb104ddd6"
				}
			]
		},
		"8686cae6-d053-49ad-9fd8-de57ee5eb608": {
			"path": "8686cae6-d053-49ad-9fd8-de57ee5eb608",
			"fileName": "8686cae6-d053-49ad-9fd8-de57ee5eb608",
			"cellName": "Flow 1:\nTransmit Selection\nChange",
			"cellId": "8686cae6-d053-49ad-9fd8-de57ee5eb608",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-59233149-9951-4ea3-8265-e0aad9419c63-8686cae6-d053-49ad-9fd8-de57ee5eb608": {
			"path": "generated-edge-simstep-59233149-9951-4ea3-8265-e0aad9419c63-8686cae6-d053-49ad-9fd8-de57ee5eb608",
			"fileName": "StreamsSelector.tsx",
			"cellName": "Flow 1: Transmit Selection Change",
			"cellId": "8686cae6-d053-49ad-9fd8-de57ee5eb608",
			"visible": true,
			"startLine": 47,
			"endLine": 51,
			"parentPath": "src/renderer/src/StreamsSelector.tsx",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "59233149-9951-4ea3-8265-e0aad9419c63"
				}
			]
		},
		"4680330c-14bb-48b3-8109-2ec8112c9523": {
			"path": "4680330c-14bb-48b3-8109-2ec8112c9523",
			"fileName": "4680330c-14bb-48b3-8109-2ec8112c9523",
			"cellName": "Flow 1:\nPass Updated\nSelection to\nExport Logic",
			"cellId": "4680330c-14bb-48b3-8109-2ec8112c9523",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-e19af8ee-1182-4654-8381-19cd25d59c61-4680330c-14bb-48b3-8109-2ec8112c9523": {
			"path": "generated-edge-simstep-e19af8ee-1182-4654-8381-19cd25d59c61-4680330c-14bb-48b3-8109-2ec8112c9523",
			"fileName": "useStreamsMeta.ts",
			"cellName": "Flow 1: Pass Updated Selection to Export Logic",
			"cellId": "4680330c-14bb-48b3-8109-2ec8112c9523",
			"visible": true,
			"startLine": 1249,
			"endLine": 1249,
			"parentPath": "src/renderer/src/hooks/useStreamsMeta.ts",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "e19af8ee-1182-4654-8381-19cd25d59c61"
				}
			]
		},
		"66fadc68-79f0-4536-aea5-d88ff355b207": {
			"path": "66fadc68-79f0-4536-aea5-d88ff355b207",
			"fileName": "66fadc68-79f0-4536-aea5-d88ff355b207",
			"cellName": "Flow 1:\nReturn FFmpeg\nArguments",
			"cellId": "66fadc68-79f0-4536-aea5-d88ff355b207",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-76e62589-7a50-4e68-aa44-e60258bc8fb9-66fadc68-79f0-4536-aea5-d88ff355b207": {
			"path": "generated-edge-simstep-76e62589-7a50-4e68-aa44-e60258bc8fb9-66fadc68-79f0-4536-aea5-d88ff355b207",
			"fileName": "streams.ts",
			"cellName": "Flow 1: Return FFmpeg Arguments",
			"cellId": "66fadc68-79f0-4536-aea5-d88ff355b207",
			"visible": true,
			"startLine": 328,
			"endLine": 328,
			"parentPath": "src/renderer/src/util/streams.ts",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "76e62589-7a50-4e68-aa44-e60258bc8fb9"
				}
			]
		},
		"d369e114-6ba4-4890-a02b-049875d226a3": {
			"path": "d369e114-6ba4-4890-a02b-049875d226a3",
			"fileName": "d369e114-6ba4-4890-a02b-049875d226a3",
			"cellName": "Flow 2:\nPass Stream\nto Extraction\nLogic",
			"cellId": "d369e114-6ba4-4890-a02b-049875d226a3",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-618f93b5-e302-495a-b5a4-73b2715e8097-d369e114-6ba4-4890-a02b-049875d226a3": {
			"path": "generated-edge-simstep-618f93b5-e302-495a-b5a4-73b2715e8097-d369e114-6ba4-4890-a02b-049875d226a3",
			"fileName": "App.tsx",
			"cellName": "Flow 2: Pass Stream to Extraction Logic",
			"cellId": "d369e114-6ba4-4890-a02b-049875d226a3",
			"visible": true,
			"startLine": 2240,
			"endLine": 2240,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Managing Media Tracks (Audio, Video, Subtitles)",
					"simStepId": "618f93b5-e302-495a-b5a4-73b2715e8097"
				}
			]
		},
		"14ed4fa6-f08f-460f-be82-0791033d8061": {
			"path": "14ed4fa6-f08f-460f-be82-0791033d8061",
			"fileName": "14ed4fa6-f08f-460f-be82-0791033d8061",
			"cellName": "menu.ts",
			"cellId": "14ed4fa6-f08f-460f-be82-0791033d8061",
			"visible": true,
			"parentCellId": "269ebc34-b745-4d7a-b2dc-e2d96c460f42"
		},
		"041949e8-3540-4e65-b1a4-85251626e35a": {
			"path": "041949e8-3540-4e65-b1a4-85251626e35a",
			"fileName": "041949e8-3540-4e65-b1a4-85251626e35a",
			"cellName": "OutputFormatSelect.tsx",
			"cellId": "041949e8-3540-4e65-b1a4-85251626e35a",
			"visible": true,
			"parentCellId": "4d8cdb8b-92f1-4031-9deb-8db560dd8fd4"
		},
		"e4b79729-7cda-4e49-8549-edb007ea3edd": {
			"path": "e4b79729-7cda-4e49-8549-edb007ea3edd",
			"fileName": "e4b79729-7cda-4e49-8549-edb007ea3edd",
			"cellName": "Flow 1 - Remuxing via Export: User Selects Output Format - OutputFormatSelect.tsx:L24-52",
			"cellId": "e4b79729-7cda-4e49-8549-edb007ea3edd",
			"visible": true,
			"parentCellId": "041949e8-3540-4e65-b1a4-85251626e35a"
		},
		"src/renderer/src/components/OutputFormatSelect.tsx-simstep-f427d759-56a1-41a0-80fe-b023c1dce208": {
			"path": "src/renderer/src/components/OutputFormatSelect.tsx-simstep-f427d759-56a1-41a0-80fe-b023c1dce208",
			"fileName": "OutputFormatSelect.tsx",
			"wiki": "The user opens the export dialog and interacts with the `OutputFormatSelect` component to choose a new container format for the output file, for instance, changing 'mkv' to 'mp4'. This selection is captured by the component's state.",
			"cellName": "Flow 1 - Remuxing via Export: User Selects Output Format - OutputFormatSelect.tsx:L24-52",
			"cellId": "e4b79729-7cda-4e49-8549-edb007ea3edd",
			"visible": true,
			"startLine": 24,
			"endLine": 52,
			"parentCellId": "041949e8-3540-4e65-b1a4-85251626e35a",
			"parentPath": "src/renderer/src/components/OutputFormatSelect.tsx",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "f427d759-56a1-41a0-80fe-b023c1dce208"
				}
			]
		},
		"87dcacf4-cd17-41d5-979f-951f6de2df0d": {
			"path": "87dcacf4-cd17-41d5-979f-951f6de2df0d",
			"fileName": "87dcacf4-cd17-41d5-979f-951f6de2df0d",
			"cellName": "Flow 1 - Remuxing via Export: Prepare FFmpeg Command - useFfmpegOperations.ts:L527-561",
			"cellId": "87dcacf4-cd17-41d5-979f-951f6de2df0d",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-9ddf9512-4cd7-4624-a73e-42c7226a4b2a": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-9ddf9512-4cd7-4624-a73e-42c7226a4b2a",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "When the user initiates the export, the `cutMultiple` function from the `useFfmpegOperations` hook is invoked. Its internal helper `cutSegment` assembles the FFmpeg command arguments. Because no re-encoding is specified, it sets stream copy flags (`-c copy`) and uses the selected format for the output format flag (`-f mp4`), defining a lossless remux operation.",
			"cellName": "Flow 1 - Remuxing via Export: Prepare FFmpeg Command - useFfmpegOperations.ts:L527-561",
			"cellId": "87dcacf4-cd17-41d5-979f-951f6de2df0d",
			"visible": true,
			"startLine": 527,
			"endLine": 561,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "9ddf9512-4cd7-4624-a73e-42c7226a4b2a"
				}
			]
		},
		"d541368c-3351-4ecf-b558-521e7a2da2e4": {
			"path": "d541368c-3351-4ecf-b558-521e7a2da2e4",
			"fileName": "d541368c-3351-4ecf-b558-521e7a2da2e4",
			"cellName": "Flow 1 - Remuxing via Export: FFmpeg Writes New File - useFfmpegOperations.ts:L527-561",
			"cellId": "d541368c-3351-4ecf-b558-521e7a2da2e4",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-031e71fd-9b3c-497f-aadd-c28741dfc46c": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-031e71fd-9b3c-497f-aadd-c28741dfc46c",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "The FFmpeg process executes, reading the source file, copying the audio/video streams without re-encoding, and writing them into the new container format (e.g., MP4) on the file system. The operation is very fast as no data is re-encoded.",
			"cellName": "Flow 1 - Remuxing via Export: FFmpeg Writes New File - useFfmpegOperations.ts:L527-561",
			"cellId": "d541368c-3351-4ecf-b558-521e7a2da2e4",
			"visible": true,
			"startLine": 527,
			"endLine": 561,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "031e71fd-9b3c-497f-aadd-c28741dfc46c"
				}
			]
		},
		"0ffa312b-b42c-4731-9198-454bb47379ad": {
			"path": "0ffa312b-b42c-4731-9198-454bb47379ad",
			"fileName": "0ffa312b-b42c-4731-9198-454bb47379ad",
			"cellName": "Flow 2 - Fix Duration: User Initiates Action - menu.ts:L198-202",
			"cellId": "0ffa312b-b42c-4731-9198-454bb47379ad",
			"visible": true,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061"
		},
		"src/main/menu.ts-simstep-8bf66a0d-a5d6-4d8f-90d9-8d31cb11506c": {
			"path": "src/main/menu.ts-simstep-8bf66a0d-a5d6-4d8f-90d9-8d31cb11506c",
			"fileName": "menu.ts",
			"wiki": "The user triggers the 'Fix incorrect duration' action, either by selecting it from the 'File' menu or by using its assigned keyboard shortcut.",
			"cellName": "Flow 2 - Fix Duration: User Initiates Action - menu.ts:L198-202",
			"cellId": "0ffa312b-b42c-4731-9198-454bb47379ad",
			"visible": true,
			"startLine": 198,
			"endLine": 202,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061",
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "8bf66a0d-a5d6-4d8f-90d9-8d31cb11506c"
				}
			]
		},
		"a4014582-24ef-42f2-b4a7-547fe51eee4f": {
			"path": "a4014582-24ef-42f2-b4a7-547fe51eee4f",
			"fileName": "a4014582-24ef-42f2-b4a7-547fe51eee4f",
			"cellName": "Flow 2 - Fix Duration: Renderer Calls Hook - App.tsx:L1727-1736",
			"cellId": "a4014582-24ef-42f2-b4a7-547fe51eee4f",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-aee3ba2d-a5a4-4722-bffa-117747a9baa2": {
			"path": "src/renderer/src/App.tsx-simstep-aee3ba2d-a5a4-4722-bffa-117747a9baa2",
			"fileName": "App.tsx",
			"wiki": "The `App` component in the renderer process listens for the `fixInvalidDuration` event. It then calls the `tryFixInvalidDuration` function, which updates the UI to a 'working' state and invokes the `fixInvalidDuration` function from the `useFfmpegOperations` hook.",
			"cellName": "Flow 2 - Fix Duration: Renderer Calls Hook - App.tsx:L1727-1736",
			"cellId": "a4014582-24ef-42f2-b4a7-547fe51eee4f",
			"visible": true,
			"startLine": 1727,
			"endLine": 1736,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "aee3ba2d-a5a4-4722-bffa-117747a9baa2"
				}
			]
		},
		"bd46cc28-1881-4d51-88b4-a9226d123c19": {
			"path": "bd46cc28-1881-4d51-88b4-a9226d123c19",
			"fileName": "bd46cc28-1881-4d51-88b4-a9226d123c19",
			"cellName": "Flow 2 - Fix Duration: Execute FFmpeg to Remux - useFfmpegOperations.ts:L822-828",
			"cellId": "bd46cc28-1881-4d51-88b4-a9226d123c19",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-6b85e666-b0ef-41bb-8508-7e05c2717090": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-6b85e666-b0ef-41bb-8508-7e05c2717090",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "The `fixInvalidDuration` function builds and executes an FFmpeg command. This command losslessly copies all codecs (`-c copy`) into a new file of the same container format. This process forces FFmpeg to rewrite the file's metadata, which often corrects inaccurate duration information present in the original file.",
			"cellName": "Flow 2 - Fix Duration: Execute FFmpeg to Remux - useFfmpegOperations.ts:L822-828",
			"cellId": "bd46cc28-1881-4d51-88b4-a9226d123c19",
			"visible": true,
			"startLine": 822,
			"endLine": 828,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "6b85e666-b0ef-41bb-8508-7e05c2717090"
				}
			]
		},
		"03273e09-5637-4dd1-918a-91542bcb2eec": {
			"path": "03273e09-5637-4dd1-918a-91542bcb2eec",
			"fileName": "03273e09-5637-4dd1-918a-91542bcb2eec",
			"cellName": "Flow 2 - Fix Duration: App Loads New Media - App.tsx:L1734",
			"cellId": "03273e09-5637-4dd1-918a-91542bcb2eec",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-213b4de5-e0db-45e8-8800-5a6bd805b2d7": {
			"path": "src/renderer/src/App.tsx-simstep-213b4de5-e0db-45e8-8800-5a6bd805b2d7",
			"fileName": "App.tsx",
			"wiki": "The `App` component calls `loadMedia` with the path of the newly generated file, replacing the original problematic file in the player with the corrected version.",
			"cellName": "Flow 2 - Fix Duration: App Loads New Media - App.tsx:L1734",
			"cellId": "03273e09-5637-4dd1-918a-91542bcb2eec",
			"visible": true,
			"startLine": 1734,
			"endLine": 1734,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "213b4de5-e0db-45e8-8800-5a6bd805b2d7"
				}
			]
		},
		"9ea28bb1-20d6-444c-b3fc-fc002e010695": {
			"path": "9ea28bb1-20d6-444c-b3fc-fc002e010695",
			"fileName": "9ea28bb1-20d6-444c-b3fc-fc002e010695",
			"cellName": "Flow 1\n- Remuxing\nvia Export:\nTransmit New\nFormat Selection",
			"cellId": "9ea28bb1-20d6-444c-b3fc-fc002e010695",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-63df2f35-2328-48d0-bac2-e5c7fd10cff7-9ea28bb1-20d6-444c-b3fc-fc002e010695": {
			"path": "generated-edge-simstep-63df2f35-2328-48d0-bac2-e5c7fd10cff7-9ea28bb1-20d6-444c-b3fc-fc002e010695",
			"fileName": "OutputFormatSelect.tsx",
			"cellName": "Flow 1 - Remuxing via Export: Transmit New Format Selection",
			"cellId": "9ea28bb1-20d6-444c-b3fc-fc002e010695",
			"visible": true,
			"startLine": 48,
			"endLine": 48,
			"parentPath": "src/renderer/src/components/OutputFormatSelect.tsx",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "63df2f35-2328-48d0-bac2-e5c7fd10cff7"
				}
			]
		},
		"afd1e437-6b9c-426f-9c83-b9b161394bfb": {
			"path": "afd1e437-6b9c-426f-9c83-b9b161394bfb",
			"fileName": "afd1e437-6b9c-426f-9c83-b9b161394bfb",
			"cellName": "Flow 1\n- Remuxing\nvia Export:\nExecute FFmpeg\nProcess",
			"cellId": "afd1e437-6b9c-426f-9c83-b9b161394bfb",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"generated-edge-simstep-5d2b4804-1a23-4478-be35-3b603073c0a0-afd1e437-6b9c-426f-9c83-b9b161394bfb": {
			"path": "generated-edge-simstep-5d2b4804-1a23-4478-be35-3b603073c0a0-afd1e437-6b9c-426f-9c83-b9b161394bfb",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "Flow 1 - Remuxing via Export: Execute FFmpeg Process",
			"cellId": "afd1e437-6b9c-426f-9c83-b9b161394bfb",
			"visible": true,
			"startLine": 550,
			"endLine": 550,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "5d2b4804-1a23-4478-be35-3b603073c0a0"
				}
			]
		},
		"91584e67-3532-45b7-8a12-113fbe2220c9": {
			"path": "91584e67-3532-45b7-8a12-113fbe2220c9",
			"fileName": "91584e67-3532-45b7-8a12-113fbe2220c9",
			"cellName": "Flow 2\n- Fix\nDuration: IPC\nMessage to\nRenderer",
			"cellId": "91584e67-3532-45b7-8a12-113fbe2220c9",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-0d57c4e8-0661-4bc3-b44b-4c9254d9cf2a-91584e67-3532-45b7-8a12-113fbe2220c9": {
			"path": "generated-edge-simstep-0d57c4e8-0661-4bc3-b44b-4c9254d9cf2a-91584e67-3532-45b7-8a12-113fbe2220c9",
			"fileName": "menu.ts",
			"cellName": "Flow 2 - Fix Duration: IPC Message to Renderer",
			"cellId": "91584e67-3532-45b7-8a12-113fbe2220c9",
			"visible": true,
			"startLine": 201,
			"endLine": 201,
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "0d57c4e8-0661-4bc3-b44b-4c9254d9cf2a"
				}
			]
		},
		"9326d5a0-398d-4452-a0b5-33161bc10fd8": {
			"path": "9326d5a0-398d-4452-a0b5-33161bc10fd8",
			"fileName": "9326d5a0-398d-4452-a0b5-33161bc10fd8",
			"cellName": "Flow 2\n- Fix\nDuration: Data\nFlow to\nFFmpeg Operation",
			"cellId": "9326d5a0-398d-4452-a0b5-33161bc10fd8",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-ae4b4a67-e1c8-436f-98c6-929fcfdd8b2e-9326d5a0-398d-4452-a0b5-33161bc10fd8": {
			"path": "generated-edge-simstep-ae4b4a67-e1c8-436f-98c6-929fcfdd8b2e-9326d5a0-398d-4452-a0b5-33161bc10fd8",
			"fileName": "App.tsx",
			"cellName": "Flow 2 - Fix Duration: Data Flow to FFmpeg Operation",
			"cellId": "9326d5a0-398d-4452-a0b5-33161bc10fd8",
			"visible": true,
			"startLine": 1731,
			"endLine": 1731,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "ae4b4a67-e1c8-436f-98c6-929fcfdd8b2e"
				}
			]
		},
		"7d94b105-bb7f-4a7c-a656-0827e985c10a": {
			"path": "7d94b105-bb7f-4a7c-a656-0827e985c10a",
			"fileName": "7d94b105-bb7f-4a7c-a656-0827e985c10a",
			"cellName": "Flow 2\n- Fix\nDuration: Return\nCorrected File\nPath",
			"cellId": "7d94b105-bb7f-4a7c-a656-0827e985c10a",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-de08474e-5547-496e-bfde-ba84aceff85a-7d94b105-bb7f-4a7c-a656-0827e985c10a": {
			"path": "generated-edge-simstep-de08474e-5547-496e-bfde-ba84aceff85a-7d94b105-bb7f-4a7c-a656-0827e985c10a",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "Flow 2 - Fix Duration: Return Corrected File Path",
			"cellId": "7d94b105-bb7f-4a7c-a656-0827e985c10a",
			"visible": true,
			"startLine": 1731,
			"endLine": 1734,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Lossless Format Conversion (Remuxing)",
					"simStepId": "de08474e-5547-496e-bfde-ba84aceff85a"
				}
			]
		},
		"25e70706-236e-4980-b3ee-c3a693731783": {
			"path": "25e70706-236e-4980-b3ee-c3a693731783",
			"fileName": "25e70706-236e-4980-b3ee-c3a693731783",
			"cellName": "smartcut.ts",
			"cellId": "25e70706-236e-4980-b3ee-c3a693731783",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"5052c1c3-91bb-4c73-8e31-d7d619dda2ac": {
			"path": "5052c1c3-91bb-4c73-8e31-d7d619dda2ac",
			"fileName": "5052c1c3-91bb-4c73-8e31-d7d619dda2ac",
			"cellName": "ExportConfirm.tsx",
			"cellId": "5052c1c3-91bb-4c73-8e31-d7d619dda2ac",
			"visible": true,
			"parentCellId": "4d8cdb8b-92f1-4031-9deb-8db560dd8fd4"
		},
		"a082670c-4826-432f-82ab-22c57fcac9da": {
			"path": "a082670c-4826-432f-82ab-22c57fcac9da",
			"fileName": "a082670c-4826-432f-82ab-22c57fcac9da",
			"cellName": "Enable Smart Cut - ExportConfirm.tsx:L541-543",
			"cellId": "a082670c-4826-432f-82ab-22c57fcac9da",
			"visible": true,
			"parentCellId": "5052c1c3-91bb-4c73-8e31-d7d619dda2ac"
		},
		"src/renderer/src/components/ExportConfirm.tsx-simstep-41d0cbd1-99b2-4b9a-b291-0dbe5a2f88e9": {
			"path": "src/renderer/src/components/ExportConfirm.tsx-simstep-41d0cbd1-99b2-4b9a-b291-0dbe5a2f88e9",
			"fileName": "ExportConfirm.tsx",
			"wiki": "In the export confirmation dialog, the user enables the 'Smart cut' option. This UI component displays a warning that the feature is experimental.",
			"cellName": "Enable Smart Cut - ExportConfirm.tsx:L541-543",
			"cellId": "a082670c-4826-432f-82ab-22c57fcac9da",
			"visible": true,
			"startLine": 541,
			"endLine": 543,
			"parentCellId": "5052c1c3-91bb-4c73-8e31-d7d619dda2ac",
			"parentPath": "src/renderer/src/components/ExportConfirm.tsx",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "41d0cbd1-99b2-4b9a-b291-0dbe5a2f88e9"
				}
			]
		},
		"ba14524f-0627-4818-b255-c0f39aba0926": {
			"path": "ba14524f-0627-4818-b255-c0f39aba0926",
			"fileName": "ba14524f-0627-4818-b255-c0f39aba0926",
			"cellName": "Check if Smart Cut is Needed - useFfmpegOperations.ts:L593-594",
			"cellId": "ba14524f-0627-4818-b255-c0f39aba0926",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-3d80835f-159e-412d-9da6-3166ad9782ab": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-3d80835f-159e-412d-9da6-3166ad9782ab",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "For a given segment, the 'useFfmpegOperations' hook calls the 'needsSmartCut' utility to determine if the desired cut point falls on a keyframe. If it doesn't, a smart cut is required.",
			"cellName": "Check if Smart Cut is Needed - useFfmpegOperations.ts:L593-594",
			"cellId": "ba14524f-0627-4818-b255-c0f39aba0926",
			"visible": true,
			"startLine": 593,
			"endLine": 594,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "3d80835f-159e-412d-9da6-3166ad9782ab"
				}
			]
		},
		"9d3ced96-2c64-4920-926a-e111aeab43d9": {
			"path": "9d3ced96-2c64-4920-926a-e111aeab43d9",
			"fileName": "9d3ced96-2c64-4920-926a-e111aeab43d9",
			"cellName": "Analyze Keyframes - smartcut.ts:L9-15",
			"cellId": "9d3ced96-2c64-4920-926a-e111aeab43d9",
			"visible": true,
			"parentCellId": "25e70706-236e-4980-b3ee-c3a693731783"
		},
		"src/renderer/src/smartcut.ts-simstep-98f7863b-55ac-4cc4-8e10-10ed2b48680c": {
			"path": "src/renderer/src/smartcut.ts-simstep-98f7863b-55ac-4cc4-8e10-10ed2b48680c",
			"fileName": "smartcut.ts",
			"wiki": "The 'needsSmartCut' function reads keyframe data around the desired cut time. It determines that the cut is not on a keyframe and identifies the timestamp of the preceding keyframe, which will be the starting point for the lossless copy.",
			"cellName": "Analyze Keyframes - smartcut.ts:L9-15",
			"cellId": "9d3ced96-2c64-4920-926a-e111aeab43d9",
			"visible": true,
			"startLine": 9,
			"endLine": 15,
			"parentCellId": "25e70706-236e-4980-b3ee-c3a693731783",
			"parentPath": "src/renderer/src/smartcut.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "98f7863b-55ac-4cc4-8e10-10ed2b48680c"
				}
			]
		},
		"5f631d25-f39b-42db-aadb-5a3ae1f3d35a": {
			"path": "5f631d25-f39b-42db-aadb-5a3ae1f3d35a",
			"fileName": "5f631d25-f39b-42db-aadb-5a3ae1f3d35a",
			"cellName": "Re-encode the 'Smart' Part - useFfmpegOperations.ts:L635",
			"cellId": "5f631d25-f39b-42db-aadb-5a3ae1f3d35a",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-03207e44-e3f8-4bb5-bfbc-f4d8566c5ae9": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-03207e44-e3f8-4bb5-bfbc-f4d8566c5ae9",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "The system calls 'cutEncodeSmartPartWrapper' to handle the first part of the operation. This function re-encodes the small portion of the video from the user's desired start time to the next keyframe, ensuring a precise cut.",
			"cellName": "Re-encode the 'Smart' Part - useFfmpegOperations.ts:L635",
			"cellId": "5f631d25-f39b-42db-aadb-5a3ae1f3d35a",
			"visible": true,
			"startLine": 635,
			"endLine": 635,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "03207e44-e3f8-4bb5-bfbc-f4d8566c5ae9"
				}
			]
		},
		"793e945f-70c8-4583-8a69-9defa4fd895e": {
			"path": "793e945f-70c8-4583-8a69-9defa4fd895e",
			"fileName": "793e945f-70c8-4583-8a69-9defa4fd895e",
			"cellName": "Losslessly Cut the Remainder - useFfmpegOperations.ts:L616-620",
			"cellId": "793e945f-70c8-4583-8a69-9defa4fd895e",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-fb1e959e-770f-42ea-9fb7-87ce48613ccb": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-fb1e959e-770f-42ea-9fb7-87ce48613ccb",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "Next, the system calls 'losslessCutSingle' to losslessly copy the rest of the video segment. This operation starts from the keyframe identified earlier ('losslessCutFrom') and goes to the end of the segment.",
			"cellName": "Losslessly Cut the Remainder - useFfmpegOperations.ts:L616-620",
			"cellId": "793e945f-70c8-4583-8a69-9defa4fd895e",
			"visible": true,
			"startLine": 616,
			"endLine": 620,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "fb1e959e-770f-42ea-9fb7-87ce48613ccb"
				}
			]
		},
		"eaf7e7ea-1f08-43db-be35-fe5883680fb0": {
			"path": "eaf7e7ea-1f08-43db-be35-fe5883680fb0",
			"fileName": "eaf7e7ea-1f08-43db-be35-fe5883680fb0",
			"cellName": "Concatenate Video Parts - useFfmpegOperations.ts:L639",
			"cellId": "eaf7e7ea-1f08-43db-be35-fe5883680fb0",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-426751d7-e093-4f4f-8fae-20213883b58f": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-426751d7-e093-4f4f-8fae-20213883b58f",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "With both the re-encoded 'smart' part and the lossless part saved as temporary files, the 'concatFiles' function is called to merge them into a single, final video file.",
			"cellName": "Concatenate Video Parts - useFfmpegOperations.ts:L639",
			"cellId": "eaf7e7ea-1f08-43db-be35-fe5883680fb0",
			"visible": true,
			"startLine": 639,
			"endLine": 639,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "426751d7-e093-4f4f-8fae-20213883b58f"
				}
			]
		},
		"9e5a8f61-0a9f-438a-8a19-4f5911ee938a": {
			"path": "9e5a8f61-0a9f-438a-8a19-4f5911ee938a",
			"fileName": "9e5a8f61-0a9f-438a-8a19-4f5911ee938a",
			"cellName": "Clean Up Temporary Files - useFfmpegOperations.ts:L641-643",
			"cellId": "9e5a8f61-0a9f-438a-8a19-4f5911ee938a",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-c629b7a3-c9e0-4527-aa02-078be0b06664": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-c629b7a3-c9e0-4527-aa02-078be0b06664",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "After the final file is successfully created, a 'finally' block ensures that the two temporary video parts (the re-encoded part and the lossless part) are deleted from the disk.",
			"cellName": "Clean Up Temporary Files - useFfmpegOperations.ts:L641-643",
			"cellId": "9e5a8f61-0a9f-438a-8a19-4f5911ee938a",
			"visible": true,
			"startLine": 641,
			"endLine": 643,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "c629b7a3-c9e0-4527-aa02-078be0b06664"
				}
			]
		},
		"a24fc8c3-5674-47a5-9c53-0609c9e8d115": {
			"path": "a24fc8c3-5674-47a5-9c53-0609c9e8d115",
			"fileName": "a24fc8c3-5674-47a5-9c53-0609c9e8d115",
			"cellName": "Trigger Export\nwith Smart\nCut",
			"cellId": "a24fc8c3-5674-47a5-9c53-0609c9e8d115",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-41492037-e0b6-4220-ad5c-23eba6cf1689-a24fc8c3-5674-47a5-9c53-0609c9e8d115": {
			"path": "generated-edge-simstep-41492037-e0b6-4220-ad5c-23eba6cf1689-a24fc8c3-5674-47a5-9c53-0609c9e8d115",
			"fileName": "ExportConfirm.tsx",
			"cellName": "Trigger Export with Smart Cut",
			"cellId": "a24fc8c3-5674-47a5-9c53-0609c9e8d115",
			"visible": true,
			"startLine": 127,
			"endLine": 127,
			"parentPath": "src/renderer/src/components/ExportConfirm.tsx",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "41492037-e0b6-4220-ad5c-23eba6cf1689"
				}
			]
		},
		"f778dfab-f74b-4339-a019-6119ea0f2101": {
			"path": "f778dfab-f74b-4339-a019-6119ea0f2101",
			"fileName": "f778dfab-f74b-4339-a019-6119ea0f2101",
			"cellName": "Pass Parameters\nto Keyframe\nChecker",
			"cellId": "f778dfab-f74b-4339-a019-6119ea0f2101",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-e2eead9e-be36-456f-8960-c5e28b374275-f778dfab-f74b-4339-a019-6119ea0f2101": {
			"path": "generated-edge-simstep-e2eead9e-be36-456f-8960-c5e28b374275-f778dfab-f74b-4339-a019-6119ea0f2101",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "Pass Parameters to Keyframe Checker",
			"cellId": "f778dfab-f74b-4339-a019-6119ea0f2101",
			"visible": true,
			"startLine": 593,
			"endLine": 593,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "e2eead9e-be36-456f-8960-c5e28b374275"
				}
			]
		},
		"1c1f3377-03b7-4195-bf0d-923e6cc7546d": {
			"path": "1c1f3377-03b7-4195-bf0d-923e6cc7546d",
			"fileName": "1c1f3377-03b7-4195-bf0d-923e6cc7546d",
			"cellName": "Return Smart\nCut Decision",
			"cellId": "1c1f3377-03b7-4195-bf0d-923e6cc7546d",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-54538d16-d54a-4d1e-a451-ed10157f65ca-1c1f3377-03b7-4195-bf0d-923e6cc7546d": {
			"path": "generated-edge-simstep-54538d16-d54a-4d1e-a451-ed10157f65ca-1c1f3377-03b7-4195-bf0d-923e6cc7546d",
			"fileName": "smartcut.ts",
			"cellName": "Return Smart Cut Decision",
			"cellId": "1c1f3377-03b7-4195-bf0d-923e6cc7546d",
			"visible": true,
			"startLine": 593,
			"endLine": 593,
			"parentPath": "src/renderer/src/smartcut.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "54538d16-d54a-4d1e-a451-ed10157f65ca"
				}
			]
		},
		"684f87e0-d7aa-4e1f-9125-f53a18bfc9e9": {
			"path": "684f87e0-d7aa-4e1f-9125-f53a18bfc9e9",
			"fileName": "684f87e0-d7aa-4e1f-9125-f53a18bfc9e9",
			"cellName": "Save Re-encoded\nPart to\nTemp File",
			"cellId": "684f87e0-d7aa-4e1f-9125-f53a18bfc9e9",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"generated-edge-simstep-ecc2789d-1fa8-42a9-a05e-e214e4f739c9-684f87e0-d7aa-4e1f-9125-f53a18bfc9e9": {
			"path": "generated-edge-simstep-ecc2789d-1fa8-42a9-a05e-e214e4f739c9-684f87e0-d7aa-4e1f-9125-f53a18bfc9e9",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "Save Re-encoded Part to Temp File",
			"cellId": "684f87e0-d7aa-4e1f-9125-f53a18bfc9e9",
			"visible": true,
			"startLine": 420,
			"endLine": 425,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "ecc2789d-1fa8-42a9-a05e-e214e4f739c9"
				}
			]
		},
		"bf477e73-2f9a-4ce1-bb76-89c70b63776a": {
			"path": "bf477e73-2f9a-4ce1-bb76-89c70b63776a",
			"fileName": "bf477e73-2f9a-4ce1-bb76-89c70b63776a",
			"cellName": "Save Lossless\nPart to\nTemp File",
			"cellId": "bf477e73-2f9a-4ce1-bb76-89c70b63776a",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"generated-edge-simstep-b9fe3c66-2db3-4c7e-a78a-27e9f79e4ac1-bf477e73-2f9a-4ce1-bb76-89c70b63776a": {
			"path": "generated-edge-simstep-b9fe3c66-2db3-4c7e-a78a-27e9f79e4ac1-bf477e73-2f9a-4ce1-bb76-89c70b63776a",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "Save Lossless Part to Temp File",
			"cellId": "bf477e73-2f9a-4ce1-bb76-89c70b63776a",
			"visible": true,
			"startLine": 612,
			"endLine": 614,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "b9fe3c66-2db3-4c7e-a78a-27e9f79e4ac1"
				}
			]
		},
		"0f401530-8b31-439f-8d86-78c3fc2c613a": {
			"path": "0f401530-8b31-439f-8d86-78c3fc2c613a",
			"fileName": "0f401530-8b31-439f-8d86-78c3fc2c613a",
			"cellName": "Save Final\nMerged File",
			"cellId": "0f401530-8b31-439f-8d86-78c3fc2c613a",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"generated-edge-simstep-a0f54978-a468-420b-9339-55d6c89ffbb3-0f401530-8b31-439f-8d86-78c3fc2c613a": {
			"path": "generated-edge-simstep-a0f54978-a468-420b-9339-55d6c89ffbb3-0f401530-8b31-439f-8d86-78c3fc2c613a",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "Save Final Merged File",
			"cellId": "0f401530-8b31-439f-8d86-78c3fc2c613a",
			"visible": true,
			"startLine": 639,
			"endLine": 639,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Smart Cutting for Precise Edits",
					"simStepId": "a0f54978-a468-420b-9339-55d6c89ffbb3"
				}
			]
		},
		"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28": {
			"path": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"fileName": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"cellName": "useSegments.ts",
			"cellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"visible": true,
			"parentCellId": "7e49f83d-ae9d-47b3-a830-816fcfb91933"
		},
		"be0399f3-aafe-458a-91c0-3cd8256e9ab8": {
			"path": "be0399f3-aafe-458a-91c0-3cd8256e9ab8",
			"fileName": "be0399f3-aafe-458a-91c0-3cd8256e9ab8",
			"cellName": "User Action: Select Scene Detection - menu.ts:L408-411",
			"cellId": "be0399f3-aafe-458a-91c0-3cd8256e9ab8",
			"visible": true,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061"
		},
		"src/main/menu.ts-simstep-40371c98-e32f-4c44-88de-65a268b0365d": {
			"path": "src/main/menu.ts-simstep-40371c98-e32f-4c44-88de-65a268b0365d",
			"fileName": "menu.ts",
			"wiki": "The user clicks on the \"Tools\" menu in the application's top menu bar and selects one of the automated detection options: \"Detect black scenes\", \"Detect silent scenes\", or \"Detect scene changes\". This action initiates the analysis of the video file.",
			"cellName": "User Action: Select Scene Detection - menu.ts:L408-411",
			"cellId": "be0399f3-aafe-458a-91c0-3cd8256e9ab8",
			"visible": true,
			"startLine": 408,
			"endLine": 411,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061",
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "40371c98-e32f-4c44-88de-65a268b0365d"
				}
			]
		},
		"cb2d5282-649d-4169-9459-bd5722c494b2": {
			"path": "cb2d5282-649d-4169-9459-bd5722c494b2",
			"fileName": "cb2d5282-649d-4169-9459-bd5722c494b2",
			"cellName": "Renderer: Event Listener - App.tsx:L2150-2152",
			"cellId": "cb2d5282-649d-4169-9459-bd5722c494b2",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-ed52fb91-1af8-488d-aadf-191b5bd500b2": {
			"path": "src/renderer/src/App.tsx-simstep-ed52fb91-1af8-488d-aadf-191b5bd500b2",
			"fileName": "App.tsx",
			"wiki": "The renderer process listens for the IPC message. The action is mapped (e.g., via keyboard shortcut definitions which also handle menu events) to the corresponding function from the `useSegments` hook. For instance, the 'detectBlackScenes' event calls the `detectBlackScenes` function.",
			"cellName": "Renderer: Event Listener - App.tsx:L2150-2152",
			"cellId": "cb2d5282-649d-4169-9459-bd5722c494b2",
			"visible": true,
			"startLine": 2150,
			"endLine": 2152,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "ed52fb91-1af8-488d-aadf-191b5bd500b2"
				}
			]
		},
		"37245537-83e0-4424-8828-38ed04ce7af6": {
			"path": "37245537-83e0-4424-8828-38ed04ce7af6",
			"fileName": "37245537-83e0-4424-8828-38ed04ce7af6",
			"cellName": "Parameter Input Dialog - useSegments.ts:L212-213",
			"cellId": "37245537-83e0-4424-8828-38ed04ce7af6",
			"visible": true,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28"
		},
		"src/renderer/src/hooks/useSegments.ts-simstep-15be662c-7685-488b-a47c-fced395616dd": {
			"path": "src/renderer/src/hooks/useSegments.ts-simstep-15be662c-7685-488b-a47c-fced395616dd",
			"fileName": "useSegments.ts",
			"wiki": "The `detectBlackScenes` function in the `useSegments` hook is executed. It first opens a dialog window using `showParametersDialog` to let the user configure parameters for the FFmpeg filter (e.g., `blackdetect`), such as minimum duration and black pixel threshold.",
			"cellName": "Parameter Input Dialog - useSegments.ts:L212-213",
			"cellId": "37245537-83e0-4424-8828-38ed04ce7af6",
			"visible": true,
			"startLine": 212,
			"endLine": 213,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "15be662c-7685-488b-a47c-fced395616dd"
				}
			]
		},
		"37cfdc91-2660-4067-aaa0-90217d83c698": {
			"path": "37cfdc91-2660-4067-aaa0-90217d83c698",
			"fileName": "37cfdc91-2660-4067-aaa0-90217d83c698",
			"cellName": "Main Process: Execute FFmpeg - ffmpeg.ts:L361-399",
			"cellId": "37cfdc91-2660-4067-aaa0-90217d83c698",
			"visible": true,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d"
		},
		"src/main/ffmpeg.ts-simstep-cdb7e529-e5ce-42b5-8f47-68240dc70caf": {
			"path": "src/main/ffmpeg.ts-simstep-cdb7e529-e5ce-42b5-8f47-68240dc70caf",
			"fileName": "ffmpeg.ts",
			"wiki": "The `blackDetect` function in `src/main/ffmpeg.ts` constructs and executes an FFmpeg command using the specified video filter (e.g., `blackdetect`) and user parameters. It uses a utility to run the command and parse its output in real-time.",
			"cellName": "Main Process: Execute FFmpeg - ffmpeg.ts:L361-399",
			"cellId": "37cfdc91-2660-4067-aaa0-90217d83c698",
			"visible": true,
			"startLine": 361,
			"endLine": 399,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d",
			"parentPath": "src/main/ffmpeg.ts",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "cdb7e529-e5ce-42b5-8f47-68240dc70caf"
				}
			]
		},
		"ddb47d87-44fe-4a40-b379-d89682b80404": {
			"path": "ddb47d87-44fe-4a40-b379-d89682b80404",
			"fileName": "ddb47d87-44fe-4a40-b379-d89682b80404",
			"cellName": "Main Process: Parse FFmpeg Output - ffmpeg.ts:L378-390",
			"cellId": "ddb47d87-44fe-4a40-b379-d89682b80404",
			"visible": true,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d"
		},
		"src/main/ffmpeg.ts-simstep-af8d83bf-8f21-48e3-9167-bb0f9e810d6e": {
			"path": "src/main/ffmpeg.ts-simstep-af8d83bf-8f21-48e3-9167-bb0f9e810d6e",
			"fileName": "ffmpeg.ts",
			"wiki": "A callback function (`matchLineTokens`) inside `blackDetect` uses a regular expression to parse each line of the FFmpeg output. When a line matches the detection format, it extracts the start and end timestamps of the detected event.",
			"cellName": "Main Process: Parse FFmpeg Output - ffmpeg.ts:L378-390",
			"cellId": "ddb47d87-44fe-4a40-b379-d89682b80404",
			"visible": true,
			"startLine": 378,
			"endLine": 390,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d",
			"parentPath": "src/main/ffmpeg.ts",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "af8d83bf-8f21-48e3-9167-bb0f9e810d6e"
				}
			]
		},
		"5241093d-0c10-4147-89ad-9c47e0c8a2bb": {
			"path": "5241093d-0c10-4147-89ad-9c47e0c8a2bb",
			"fileName": "5241093d-0c10-4147-89ad-9c47e0c8a2bb",
			"cellName": "Renderer: Update Segments State - useSegments.ts:L218",
			"cellId": "5241093d-0c10-4147-89ad-9c47e0c8a2bb",
			"visible": true,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28"
		},
		"src/renderer/src/hooks/useSegments.ts-simstep-c0969ce8-50b4-4827-81d2-25bba7b52713": {
			"path": "src/renderer/src/hooks/useSegments.ts-simstep-c0969ce8-50b4-4827-81d2-25bba7b52713",
			"fileName": "useSegments.ts",
			"wiki": "A helper function in `useSegments.ts` collects all the segments sent back from the main process. Once the FFmpeg process is complete, it adds these new segments to the existing list of cut segments in the React state, triggering a UI update.",
			"cellName": "Renderer: Update Segments State - useSegments.ts:L218",
			"cellId": "5241093d-0c10-4147-89ad-9c47e0c8a2bb",
			"visible": true,
			"startLine": 218,
			"endLine": 218,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "c0969ce8-50b4-4827-81d2-25bba7b52713"
				}
			]
		},
		"b803913c-42c9-43d8-8575-6757b399ed40": {
			"path": "b803913c-42c9-43d8-8575-6757b399ed40",
			"fileName": "b803913c-42c9-43d8-8575-6757b399ed40",
			"cellName": "UI Update: Display New Segments - App.tsx:L365-371",
			"cellId": "b803913c-42c9-43d8-8575-6757b399ed40",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-02e786cd-aa09-446c-b601-8abb229d3006": {
			"path": "src/renderer/src/App.tsx-simstep-02e786cd-aa09-446c-b601-8abb229d3006",
			"fileName": "App.tsx",
			"wiki": "The application's UI, specifically the timeline and the segment list, now displays the newly created segments that correspond to the detected black scenes. The user can then proceed to edit or export these segments.",
			"cellName": "UI Update: Display New Segments - App.tsx:L365-371",
			"cellId": "b803913c-42c9-43d8-8575-6757b399ed40",
			"visible": true,
			"startLine": 365,
			"endLine": 371,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "02e786cd-aa09-446c-b601-8abb229d3006"
				}
			]
		},
		"bc63267c-2d3e-4527-8c13-366857538486": {
			"path": "bc63267c-2d3e-4527-8c13-366857538486",
			"fileName": "bc63267c-2d3e-4527-8c13-366857538486",
			"cellName": "IPC: Main\n-> Renderer",
			"cellId": "bc63267c-2d3e-4527-8c13-366857538486",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-86d61117-e9ba-456d-ba91-c15faeac6329-bc63267c-2d3e-4527-8c13-366857538486": {
			"path": "generated-edge-simstep-86d61117-e9ba-456d-ba91-c15faeac6329-bc63267c-2d3e-4527-8c13-366857538486",
			"fileName": "menu.ts",
			"cellName": "IPC: Main -> Renderer",
			"cellId": "bc63267c-2d3e-4527-8c13-366857538486",
			"visible": true,
			"startLine": 410,
			"endLine": 410,
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "86d61117-e9ba-456d-ba91-c15faeac6329"
				}
			]
		},
		"0b975994-c566-4ec8-9b77-c4fc01fc0778": {
			"path": "0b975994-c566-4ec8-9b77-c4fc01fc0778",
			"fileName": "0b975994-c566-4ec8-9b77-c4fc01fc0778",
			"cellName": "Function Call:\n`detectBlackScenes`",
			"cellId": "0b975994-c566-4ec8-9b77-c4fc01fc0778",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-595957a2-d81e-4772-b5d3-66a01a313b07-0b975994-c566-4ec8-9b77-c4fc01fc0778": {
			"path": "generated-edge-simstep-595957a2-d81e-4772-b5d3-66a01a313b07-0b975994-c566-4ec8-9b77-c4fc01fc0778",
			"fileName": "App.tsx",
			"cellName": "Function Call: `detectBlackScenes`",
			"cellId": "0b975994-c566-4ec8-9b77-c4fc01fc0778",
			"visible": true,
			"startLine": 366,
			"endLine": 366,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "595957a2-d81e-4772-b5d3-66a01a313b07"
				}
			]
		},
		"8fb0eef8-b010-4d5b-8a97-307002463373": {
			"path": "8fb0eef8-b010-4d5b-8a97-307002463373",
			"fileName": "8fb0eef8-b010-4d5b-8a97-307002463373",
			"cellName": "Data Flow:\nParameters to\nFFmpeg wrapper",
			"cellId": "8fb0eef8-b010-4d5b-8a97-307002463373",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-b867447b-34e3-45c9-b64d-5a0270e68156-8fb0eef8-b010-4d5b-8a97-307002463373": {
			"path": "generated-edge-simstep-b867447b-34e3-45c9-b64d-5a0270e68156-8fb0eef8-b010-4d5b-8a97-307002463373",
			"fileName": "useSegments.ts",
			"cellName": "Data Flow: Parameters to FFmpeg wrapper",
			"cellId": "8fb0eef8-b010-4d5b-8a97-307002463373",
			"visible": true,
			"startLine": 218,
			"endLine": 218,
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "b867447b-34e3-45c9-b64d-5a0270e68156"
				}
			]
		},
		"40eb651f-95df-4092-9e3b-32800adadd06": {
			"path": "40eb651f-95df-4092-9e3b-32800adadd06",
			"fileName": "40eb651f-95df-4092-9e3b-32800adadd06",
			"cellName": "Data Stream:\nFFmpeg stderr",
			"cellId": "40eb651f-95df-4092-9e3b-32800adadd06",
			"visible": true,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d"
		},
		"generated-edge-simstep-7d14d62e-751d-4580-b72c-9404c5a7e3f2-40eb651f-95df-4092-9e3b-32800adadd06": {
			"path": "generated-edge-simstep-7d14d62e-751d-4580-b72c-9404c5a7e3f2-40eb651f-95df-4092-9e3b-32800adadd06",
			"fileName": "ffmpeg.ts",
			"cellName": "Data Stream: FFmpeg stderr",
			"cellId": "40eb651f-95df-4092-9e3b-32800adadd06",
			"visible": true,
			"startLine": 378,
			"endLine": 382,
			"parentPath": "src/main/ffmpeg.ts",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "7d14d62e-751d-4580-b72c-9404c5a7e3f2"
				}
			]
		},
		"23fd92ba-e3a8-4b04-80b1-8451f0774db6": {
			"path": "23fd92ba-e3a8-4b04-80b1-8451f0774db6",
			"fileName": "23fd92ba-e3a8-4b04-80b1-8451f0774db6",
			"cellName": "IPC: Callback\nto Renderer",
			"cellId": "23fd92ba-e3a8-4b04-80b1-8451f0774db6",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-c7666ef9-d773-4def-baca-911ccb7836a1-23fd92ba-e3a8-4b04-80b1-8451f0774db6": {
			"path": "generated-edge-simstep-c7666ef9-d773-4def-baca-911ccb7836a1-23fd92ba-e3a8-4b04-80b1-8451f0774db6",
			"fileName": "ffmpeg.ts",
			"cellName": "IPC: Callback to Renderer",
			"cellId": "23fd92ba-e3a8-4b04-80b1-8451f0774db6",
			"visible": true,
			"startLine": 218,
			"endLine": 218,
			"parentPath": "src/main/ffmpeg.ts",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "c7666ef9-d773-4def-baca-911ccb7836a1"
				}
			]
		},
		"8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5": {
			"path": "8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5",
			"fileName": "8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5",
			"cellName": "React State\n-> UI",
			"cellId": "8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-e9a1c29e-fb83-437a-805a-82fe14f04fd5-8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5": {
			"path": "generated-edge-simstep-e9a1c29e-fb83-437a-805a-82fe14f04fd5-8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5",
			"fileName": "useSegments.ts",
			"cellName": "React State -> UI",
			"cellId": "8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5",
			"visible": true,
			"startLine": 365,
			"endLine": 365,
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Automated Scene Detection",
					"simStepId": "e9a1c29e-fb83-437a-805a-82fe14f04fd5"
				}
			]
		},
		"31642bd3-508e-4846-82f7-69175958853a": {
			"path": "31642bd3-508e-4846-82f7-69175958853a",
			"fileName": "31642bd3-508e-4846-82f7-69175958853a",
			"cellName": "edlStore.ts",
			"cellId": "31642bd3-508e-4846-82f7-69175958853a",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e": {
			"path": "ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e",
			"fileName": "ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e",
			"cellName": "edlFormats.ts",
			"cellId": "ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"8132c00a-6af6-429d-b6b9-16c2b93f8af7": {
			"path": "8132c00a-6af6-429d-b6b9-16c2b93f8af7",
			"fileName": "8132c00a-6af6-429d-b6b9-16c2b93f8af7",
			"cellName": "Import Flow: User Selects Import Option - menu.ts:L79-81",
			"cellId": "8132c00a-6af6-429d-b6b9-16c2b93f8af7",
			"visible": true,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061"
		},
		"src/main/menu.ts-simstep-d20ea994-dd2c-4f30-bdb9-e578fe2db09d": {
			"path": "src/main/menu.ts-simstep-d20ea994-dd2c-4f30-bdb9-e578fe2db09d",
			"fileName": "menu.ts",
			"wiki": "The user initiates the import process by clicking on the 'Times in seconds (CSV)' option from the 'File > Import project' menu.",
			"cellName": "Import Flow: User Selects Import Option - menu.ts:L79-81",
			"cellId": "8132c00a-6af6-429d-b6b9-16c2b93f8af7",
			"visible": true,
			"startLine": 79,
			"endLine": 81,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061",
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "d20ea994-dd2c-4f30-bdb9-e578fe2db09d"
				}
			]
		},
		"3be1cc98-9f00-4ec4-b9ae-b89114477cac": {
			"path": "3be1cc98-9f00-4ec4-b9ae-b89114477cac",
			"fileName": "3be1cc98-9f00-4ec4-b9ae-b89114477cac",
			"cellName": "Import Flow: Renderer Receives IPC Message - App.tsx:L2362-2371",
			"cellId": "3be1cc98-9f00-4ec4-b9ae-b89114477cac",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-7b06b4b9-5998-4da9-a4f0-0ecd26beb4a6": {
			"path": "src/renderer/src/App.tsx-simstep-7b06b4b9-5998-4da9-a4f0-0ecd26beb4a6",
			"fileName": "App.tsx",
			"wiki": "An IPC listener in the main App component receives the 'importEdlFile' message and triggers the importEdlFile function.",
			"cellName": "Import Flow: Renderer Receives IPC Message - App.tsx:L2362-2371",
			"cellId": "3be1cc98-9f00-4ec4-b9ae-b89114477cac",
			"visible": true,
			"startLine": 2362,
			"endLine": 2371,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "7b06b4b9-5998-4da9-a4f0-0ecd26beb4a6"
				}
			]
		},
		"12d0fa17-0475-450a-92f5-b5667b3540e5": {
			"path": "12d0fa17-0475-450a-92f5-b5667b3540e5",
			"fileName": "12d0fa17-0475-450a-92f5-b5667b3540e5",
			"cellName": "Import Flow: Show File Dialog and Read File - edlStore.ts:L179-181",
			"cellId": "12d0fa17-0475-450a-92f5-b5667b3540e5",
			"visible": true,
			"parentCellId": "31642bd3-508e-4846-82f7-69175958853a"
		},
		"src/renderer/src/edlStore.ts-simstep-23e2dcc5-356b-456a-ad5f-8f0a5e7f5208": {
			"path": "src/renderer/src/edlStore.ts-simstep-23e2dcc5-356b-456a-ad5f-8f0a5e7f5208",
			"fileName": "edlStore.ts",
			"wiki": "`askForEdlImport` from `edlStore` shows a native file dialog. After the user selects a file, it calls `readEdlFile` to read its content.",
			"cellName": "Import Flow: Show File Dialog and Read File - edlStore.ts:L179-181",
			"cellId": "12d0fa17-0475-450a-92f5-b5667b3540e5",
			"visible": true,
			"startLine": 179,
			"endLine": 181,
			"parentCellId": "31642bd3-508e-4846-82f7-69175958853a",
			"parentPath": "src/renderer/src/edlStore.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "23e2dcc5-356b-456a-ad5f-8f0a5e7f5208"
				}
			]
		},
		"5d7657a9-18cf-4461-baee-23cf277e15df": {
			"path": "5d7657a9-18cf-4461-baee-23cf277e15df",
			"fileName": "5d7657a9-18cf-4461-baee-23cf277e15df",
			"cellName": "Import Flow: Parse EDL File Content - edlFormats.ts:L1",
			"cellId": "5d7657a9-18cf-4461-baee-23cf277e15df",
			"visible": true,
			"parentCellId": "ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e"
		},
		"src/renderer/src/edlFormats.ts-simstep-2573bac3-ef83-4317-8fd9-d95b9179b062": {
			"path": "src/renderer/src/edlFormats.ts-simstep-2573bac3-ef83-4317-8fd9-d95b9179b062",
			"fileName": "edlFormats.ts",
			"wiki": "A specialized parser function in `edlFormats.ts` (e.g., `parseCsvTime`) processes the raw string content and transforms it into an array of segment objects.",
			"cellName": "Import Flow: Parse EDL File Content - edlFormats.ts:L1",
			"cellId": "5d7657a9-18cf-4461-baee-23cf277e15df",
			"visible": true,
			"startLine": 1,
			"endLine": 1,
			"parentCellId": "ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e",
			"parentPath": "src/renderer/src/edlFormats.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "2573bac3-ef83-4317-8fd9-d95b9179b062"
				}
			]
		},
		"f5e2907f-63c2-419a-8d37-cd625c321a57": {
			"path": "f5e2907f-63c2-419a-8d37-cd625c321a57",
			"fileName": "f5e2907f-63c2-419a-8d37-cd625c321a57",
			"cellName": "Import Flow: Update Application State - App.tsx:L2331-2338",
			"cellId": "f5e2907f-63c2-419a-8d37-cd625c321a57",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-2e47980d-2b90-4e07-b525-55d0a7066f71": {
			"path": "src/renderer/src/App.tsx-simstep-2e47980d-2b90-4e07-b525-55d0a7066f71",
			"fileName": "App.tsx",
			"wiki": "The returned segments are loaded into the application's state using `loadCutSegments`, which updates the timeline in the UI to display the newly imported cuts.",
			"cellName": "Import Flow: Update Application State - App.tsx:L2331-2338",
			"cellId": "f5e2907f-63c2-419a-8d37-cd625c321a57",
			"visible": true,
			"startLine": 2331,
			"endLine": 2338,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "2e47980d-2b90-4e07-b525-55d0a7066f71"
				}
			]
		},
		"d4a22f5b-fcda-4a11-9fbb-e19a52a4b7ca": {
			"path": "d4a22f5b-fcda-4a11-9fbb-e19a52a4b7ca",
			"fileName": "d4a22f5b-fcda-4a11-9fbb-e19a52a4b7ca",
			"cellName": "Export Flow: User Selects Export Option - menu.ts:L154-156",
			"cellId": "d4a22f5b-fcda-4a11-9fbb-e19a52a4b7ca",
			"visible": true,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061"
		},
		"src/main/menu.ts-simstep-ae5699f1-d8c0-49eb-8b5c-04086b2b8c5d": {
			"path": "src/main/menu.ts-simstep-ae5699f1-d8c0-49eb-8b5c-04086b2b8c5d",
			"fileName": "menu.ts",
			"wiki": "The user initiates the export process by clicking on the 'Times in seconds (CSV)' option from the 'File > Export project' menu.",
			"cellName": "Export Flow: User Selects Export Option - menu.ts:L154-156",
			"cellId": "d4a22f5b-fcda-4a11-9fbb-e19a52a4b7ca",
			"visible": true,
			"startLine": 154,
			"endLine": 156,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061",
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "ae5699f1-d8c0-49eb-8b5c-04086b2b8c5d"
				}
			]
		},
		"3e09cd2d-52ef-4b0b-a5fb-972f78bab761": {
			"path": "3e09cd2d-52ef-4b0b-a5fb-972f78bab761",
			"fileName": "3e09cd2d-52ef-4b0b-a5fb-972f78bab761",
			"cellName": "Export Flow: Renderer Receives IPC Message - App.tsx:L2362-2371",
			"cellId": "3e09cd2d-52ef-4b0b-a5fb-972f78bab761",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-d7853b0d-1469-446f-97a4-8f4917bcc39c": {
			"path": "src/renderer/src/App.tsx-simstep-d7853b0d-1469-446f-97a4-8f4917bcc39c",
			"fileName": "App.tsx",
			"wiki": "An IPC listener in the main App component receives the 'exportEdlFile' message and triggers the `tryExportEdlFile` function.",
			"cellName": "Export Flow: Renderer Receives IPC Message - App.tsx:L2362-2371",
			"cellId": "3e09cd2d-52ef-4b0b-a5fb-972f78bab761",
			"visible": true,
			"startLine": 2362,
			"endLine": 2371,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "d7853b0d-1469-446f-97a4-8f4917bcc39c"
				}
			]
		},
		"f2c09708-cd24-4092-9948-c8497f0169a7": {
			"path": "f2c09708-cd24-4092-9948-c8497f0169a7",
			"fileName": "f2c09708-cd24-4092-9948-c8497f0169a7",
			"cellName": "Export Flow: Prepare Data for Formatting - edlStore.ts:L183-187",
			"cellId": "f2c09708-cd24-4092-9948-c8497f0169a7",
			"visible": true,
			"parentCellId": "31642bd3-508e-4846-82f7-69175958853a"
		},
		"src/renderer/src/edlStore.ts-simstep-d27362df-12ad-4537-8ad0-6773f1007d7a": {
			"path": "src/renderer/src/edlStore.ts-simstep-d27362df-12ad-4537-8ad0-6773f1007d7a",
			"fileName": "edlStore.ts",
			"wiki": "`exportEdlFile` in `edlStore` receives the segments and prepares to format them by calling the appropriate formatter from `edlFormats.ts`.",
			"cellName": "Export Flow: Prepare Data for Formatting - edlStore.ts:L183-187",
			"cellId": "f2c09708-cd24-4092-9948-c8497f0169a7",
			"visible": true,
			"startLine": 183,
			"endLine": 187,
			"parentCellId": "31642bd3-508e-4846-82f7-69175958853a",
			"parentPath": "src/renderer/src/edlStore.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "d27362df-12ad-4537-8ad0-6773f1007d7a"
				}
			]
		},
		"674617d8-eef8-4226-bfb4-f1e1883cf1c5": {
			"path": "674617d8-eef8-4226-bfb4-f1e1883cf1c5",
			"fileName": "674617d8-eef8-4226-bfb4-f1e1883cf1c5",
			"cellName": "Export Flow: Format Segments to String - edlFormats.ts:L1",
			"cellId": "674617d8-eef8-4226-bfb4-f1e1883cf1c5",
			"visible": true,
			"parentCellId": "ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e"
		},
		"src/renderer/src/edlFormats.ts-simstep-50d00e9f-edde-4033-b5ae-f51aba69975a": {
			"path": "src/renderer/src/edlFormats.ts-simstep-50d00e9f-edde-4033-b5ae-f51aba69975a",
			"fileName": "edlFormats.ts",
			"wiki": "A formatter function in `edlFormats.ts` (e.g., `formatCsvSeconds`) converts the array of segment objects into a single CSV-formatted string.",
			"cellName": "Export Flow: Format Segments to String - edlFormats.ts:L1",
			"cellId": "674617d8-eef8-4226-bfb4-f1e1883cf1c5",
			"visible": true,
			"startLine": 1,
			"endLine": 1,
			"parentCellId": "ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e",
			"parentPath": "src/renderer/src/edlFormats.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "50d00e9f-edde-4033-b5ae-f51aba69975a"
				}
			]
		},
		"e7cd4725-f11e-4689-82a3-18ecd0bcec83": {
			"path": "e7cd4725-f11e-4689-82a3-18ecd0bcec83",
			"fileName": "e7cd4725-f11e-4689-82a3-18ecd0bcec83",
			"cellName": "Export Flow: Save File to Disk - edlStore.ts:L183-187",
			"cellId": "e7cd4725-f11e-4689-82a3-18ecd0bcec83",
			"visible": true,
			"parentCellId": "31642bd3-508e-4846-82f7-69175958853a"
		},
		"src/renderer/src/edlStore.ts-simstep-528b00f4-ae1a-44a0-a878-7956402a1e54": {
			"path": "src/renderer/src/edlStore.ts-simstep-528b00f4-ae1a-44a0-a878-7956402a1e54",
			"fileName": "edlStore.ts",
			"wiki": "`exportEdlFile` shows a native 'save file' dialog, allowing the user to choose a destination. It then writes the formatted string content to the specified file on the user's disk.",
			"cellName": "Export Flow: Save File to Disk - edlStore.ts:L183-187",
			"cellId": "e7cd4725-f11e-4689-82a3-18ecd0bcec83",
			"visible": true,
			"startLine": 183,
			"endLine": 187,
			"parentCellId": "31642bd3-508e-4846-82f7-69175958853a",
			"parentPath": "src/renderer/src/edlStore.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "528b00f4-ae1a-44a0-a878-7956402a1e54"
				}
			]
		},
		"a8a903a5-f2ed-4eef-9d74-491986cb8f76": {
			"path": "a8a903a5-f2ed-4eef-9d74-491986cb8f76",
			"fileName": "a8a903a5-f2ed-4eef-9d74-491986cb8f76",
			"cellName": "Import Flow:\nIPC Message\nto Renderer",
			"cellId": "a8a903a5-f2ed-4eef-9d74-491986cb8f76",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-d6bf5102-ac1a-4da3-94be-e5cb9280dc73-a8a903a5-f2ed-4eef-9d74-491986cb8f76": {
			"path": "generated-edge-simstep-d6bf5102-ac1a-4da3-94be-e5cb9280dc73-a8a903a5-f2ed-4eef-9d74-491986cb8f76",
			"fileName": "menu.ts",
			"cellName": "Import Flow: IPC Message to Renderer",
			"cellId": "a8a903a5-f2ed-4eef-9d74-491986cb8f76",
			"visible": true,
			"startLine": 80,
			"endLine": 80,
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "d6bf5102-ac1a-4da3-94be-e5cb9280dc73"
				}
			]
		},
		"0b438473-97e3-4504-b856-779156a0774d": {
			"path": "0b438473-97e3-4504-b856-779156a0774d",
			"fileName": "0b438473-97e3-4504-b856-779156a0774d",
			"cellName": "Import Flow:\nRequest User\nto Select\nFile",
			"cellId": "0b438473-97e3-4504-b856-779156a0774d",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-a8b3a5b1-36e5-47e1-8b91-98689158cf71-0b438473-97e3-4504-b856-779156a0774d": {
			"path": "generated-edge-simstep-a8b3a5b1-36e5-47e1-8b91-98689158cf71-0b438473-97e3-4504-b856-779156a0774d",
			"fileName": "App.tsx",
			"cellName": "Import Flow: Request User to Select File",
			"cellId": "0b438473-97e3-4504-b856-779156a0774d",
			"visible": true,
			"startLine": 2334,
			"endLine": 2334,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "a8b3a5b1-36e5-47e1-8b91-98689158cf71"
				}
			]
		},
		"7e0ab734-d424-44a5-ae87-5e2bc7e5f629": {
			"path": "7e0ab734-d424-44a5-ae87-5e2bc7e5f629",
			"fileName": "7e0ab734-d424-44a5-ae87-5e2bc7e5f629",
			"cellName": "Import Flow:\nPass File\nContent to\nParser",
			"cellId": "7e0ab734-d424-44a5-ae87-5e2bc7e5f629",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-fb7685d1-a9fd-46f4-805b-360e4ee276a4-7e0ab734-d424-44a5-ae87-5e2bc7e5f629": {
			"path": "generated-edge-simstep-fb7685d1-a9fd-46f4-805b-360e4ee276a4-7e0ab734-d424-44a5-ae87-5e2bc7e5f629",
			"fileName": "edlStore.ts",
			"cellName": "Import Flow: Pass File Content to Parser",
			"cellId": "7e0ab734-d424-44a5-ae87-5e2bc7e5f629",
			"visible": true,
			"startLine": 5,
			"endLine": 5,
			"parentPath": "src/renderer/src/edlStore.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "fb7685d1-a9fd-46f4-805b-360e4ee276a4"
				}
			]
		},
		"7526d6c5-59f6-4293-9656-9c52bafc6516": {
			"path": "7526d6c5-59f6-4293-9656-9c52bafc6516",
			"fileName": "7526d6c5-59f6-4293-9656-9c52bafc6516",
			"cellName": "Import Flow:\nReturn Parsed\nSegments",
			"cellId": "7526d6c5-59f6-4293-9656-9c52bafc6516",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-b70e2054-18b8-4684-af31-5e0a98cb193d-7526d6c5-59f6-4293-9656-9c52bafc6516": {
			"path": "generated-edge-simstep-b70e2054-18b8-4684-af31-5e0a98cb193d-7526d6c5-59f6-4293-9656-9c52bafc6516",
			"fileName": "edlFormats.ts",
			"cellName": "Import Flow: Return Parsed Segments",
			"cellId": "7526d6c5-59f6-4293-9656-9c52bafc6516",
			"visible": true,
			"startLine": 2334,
			"endLine": 2334,
			"parentPath": "src/renderer/src/edlFormats.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "b70e2054-18b8-4684-af31-5e0a98cb193d"
				}
			]
		},
		"5420e169-ff0c-40cc-af81-2f8b3ef52899": {
			"path": "5420e169-ff0c-40cc-af81-2f8b3ef52899",
			"fileName": "5420e169-ff0c-40cc-af81-2f8b3ef52899",
			"cellName": "Export Flow:\nIPC Message\nto Renderer",
			"cellId": "5420e169-ff0c-40cc-af81-2f8b3ef52899",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-ce53852f-9230-4518-83f7-67c19aa1f17e-5420e169-ff0c-40cc-af81-2f8b3ef52899": {
			"path": "generated-edge-simstep-ce53852f-9230-4518-83f7-67c19aa1f17e-5420e169-ff0c-40cc-af81-2f8b3ef52899",
			"fileName": "menu.ts",
			"cellName": "Export Flow: IPC Message to Renderer",
			"cellId": "5420e169-ff0c-40cc-af81-2f8b3ef52899",
			"visible": true,
			"startLine": 155,
			"endLine": 155,
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "ce53852f-9230-4518-83f7-67c19aa1f17e"
				}
			]
		},
		"2fe168cb-edec-4f7e-a799-4639d808b5e6": {
			"path": "2fe168cb-edec-4f7e-a799-4639d808b5e6",
			"fileName": "2fe168cb-edec-4f7e-a799-4639d808b5e6",
			"cellName": "Export Flow:\nPass Segments\nfor Export",
			"cellId": "2fe168cb-edec-4f7e-a799-4639d808b5e6",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-14dac8dd-53d7-465c-8685-40daac53b612-2fe168cb-edec-4f7e-a799-4639d808b5e6": {
			"path": "generated-edge-simstep-14dac8dd-53d7-465c-8685-40daac53b612-2fe168cb-edec-4f7e-a799-4639d808b5e6",
			"fileName": "App.tsx",
			"cellName": "Export Flow: Pass Segments for Export",
			"cellId": "2fe168cb-edec-4f7e-a799-4639d808b5e6",
			"visible": true,
			"startLine": 2325,
			"endLine": 2325,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "14dac8dd-53d7-465c-8685-40daac53b612"
				}
			]
		},
		"6a73fc2a-2ea4-424a-9adf-1e8b234193bb": {
			"path": "6a73fc2a-2ea4-424a-9adf-1e8b234193bb",
			"fileName": "6a73fc2a-2ea4-424a-9adf-1e8b234193bb",
			"cellName": "Export Flow:\nPass Segments\nto Formatter",
			"cellId": "6a73fc2a-2ea4-424a-9adf-1e8b234193bb",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-7a556467-3147-43c8-abc7-ed2d98cf50c1-6a73fc2a-2ea4-424a-9adf-1e8b234193bb": {
			"path": "generated-edge-simstep-7a556467-3147-43c8-abc7-ed2d98cf50c1-6a73fc2a-2ea4-424a-9adf-1e8b234193bb",
			"fileName": "edlStore.ts",
			"cellName": "Export Flow: Pass Segments to Formatter",
			"cellId": "6a73fc2a-2ea4-424a-9adf-1e8b234193bb",
			"visible": true,
			"startLine": 5,
			"endLine": 5,
			"parentPath": "src/renderer/src/edlStore.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "7a556467-3147-43c8-abc7-ed2d98cf50c1"
				}
			]
		},
		"a455187c-9171-4787-b1eb-13f324c0dce0": {
			"path": "a455187c-9171-4787-b1eb-13f324c0dce0",
			"fileName": "a455187c-9171-4787-b1eb-13f324c0dce0",
			"cellName": "Export Flow:\nReturn Formatted\nString",
			"cellId": "a455187c-9171-4787-b1eb-13f324c0dce0",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-c2ca5c19-4603-4ca3-b7de-8121f4a82033-a455187c-9171-4787-b1eb-13f324c0dce0": {
			"path": "generated-edge-simstep-c2ca5c19-4603-4ca3-b7de-8121f4a82033-a455187c-9171-4787-b1eb-13f324c0dce0",
			"fileName": "edlFormats.ts",
			"cellName": "Export Flow: Return Formatted String",
			"cellId": "a455187c-9171-4787-b1eb-13f324c0dce0",
			"visible": true,
			"startLine": 183,
			"endLine": 187,
			"parentPath": "src/renderer/src/edlFormats.ts",
			"simSteps": [
				{
					"simulationKey": "Importing and Exporting Cut Lists (EDL)",
					"simStepId": "c2ca5c19-4603-4ca3-b7de-8121f4a82033"
				}
			]
		},
		"d263d28e-33a2-4457-9e76-89873582ee51": {
			"path": "d263d28e-33a2-4457-9e76-89873582ee51",
			"fileName": "d263d28e-33a2-4457-9e76-89873582ee51",
			"cellName": "BottomBar.tsx",
			"cellId": "d263d28e-33a2-4457-9e76-89873582ee51",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"197b4bf0-df82-4800-9fde-dd2b5f1705c7": {
			"path": "197b4bf0-df82-4800-9fde-dd2b5f1705c7",
			"fileName": "197b4bf0-df82-4800-9fde-dd2b5f1705c7",
			"cellName": "dialogs",
			"cellId": "197b4bf0-df82-4800-9fde-dd2b5f1705c7",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"4e6a5b3a-8901-4162-8137-3fe70dc0f0bd": {
			"path": "4e6a5b3a-8901-4162-8137-3fe70dc0f0bd",
			"fileName": "4e6a5b3a-8901-4162-8137-3fe70dc0f0bd",
			"cellName": "useFrameCapture.ts",
			"cellId": "4e6a5b3a-8901-4162-8137-3fe70dc0f0bd",
			"visible": true,
			"parentCellId": "7e49f83d-ae9d-47b3-a830-816fcfb91933"
		},
		"c74208fe-d712-4001-82d9-09b9305f1f8b": {
			"path": "c74208fe-d712-4001-82d9-09b9305f1f8b",
			"fileName": "c74208fe-d712-4001-82d9-09b9305f1f8b",
			"cellName": "extractFrames.tsx",
			"cellId": "c74208fe-d712-4001-82d9-09b9305f1f8b",
			"visible": true,
			"parentCellId": "197b4bf0-df82-4800-9fde-dd2b5f1705c7"
		},
		"5899327c-9400-40f9-878b-614dbc189747": {
			"path": "5899327c-9400-40f9-878b-614dbc189747",
			"fileName": "5899327c-9400-40f9-878b-614dbc189747",
			"cellName": "(Snapshot Flow) User Clicks Capture Button - BottomBar.tsx:L563-571",
			"cellId": "5899327c-9400-40f9-878b-614dbc189747",
			"visible": true,
			"parentCellId": "d263d28e-33a2-4457-9e76-89873582ee51"
		},
		"src/renderer/src/BottomBar.tsx-simstep-ea5ac674-2bfc-489d-808f-76363db563d4": {
			"path": "src/renderer/src/BottomBar.tsx-simstep-ea5ac674-2bfc-489d-808f-76363db563d4",
			"fileName": "BottomBar.tsx",
			"wiki": "The user clicks the camera icon in the bottom bar to capture a single, full-resolution snapshot of the current video frame.",
			"cellName": "(Snapshot Flow) User Clicks Capture Button - BottomBar.tsx:L563-571",
			"cellId": "5899327c-9400-40f9-878b-614dbc189747",
			"visible": true,
			"startLine": 563,
			"endLine": 571,
			"parentCellId": "d263d28e-33a2-4457-9e76-89873582ee51",
			"parentPath": "src/renderer/src/BottomBar.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "ea5ac674-2bfc-489d-808f-76363db563d4"
				}
			]
		},
		"3a8a4cb2-dcba-43f7-8be3-b464a572e138": {
			"path": "3a8a4cb2-dcba-43f7-8be3-b464a572e138",
			"fileName": "3a8a4cb2-dcba-43f7-8be3-b464a572e138",
			"cellName": "(Snapshot Flow) Handle Snapshot Request - App.tsx:L1771-1775",
			"cellId": "3a8a4cb2-dcba-43f7-8be3-b464a572e138",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-173ecc7a-95f8-4554-a47c-644510ad0dd5": {
			"path": "src/renderer/src/App.tsx-simstep-173ecc7a-95f8-4554-a47c-644510ad0dd5",
			"fileName": "App.tsx",
			"wiki": "The `captureSnapshot` function in `App.tsx` is executed. It retrieves the current playback time and calls the `captureFrameFromFfmpeg` utility function to handle the actual frame capture logic.",
			"cellName": "(Snapshot Flow) Handle Snapshot Request - App.tsx:L1771-1775",
			"cellId": "3a8a4cb2-dcba-43f7-8be3-b464a572e138",
			"visible": true,
			"startLine": 1771,
			"endLine": 1775,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "173ecc7a-95f8-4554-a47c-644510ad0dd5"
				}
			]
		},
		"1be22197-755b-40c1-8231-6fb608c02044": {
			"path": "1be22197-755b-40c1-8231-6fb608c02044",
			"fileName": "1be22197-755b-40c1-8231-6fb608c02044",
			"cellName": "(Snapshot Flow) Execute FFmpeg in Main Process - ffmpeg.ts:L455-474",
			"cellId": "1be22197-755b-40c1-8231-6fb608c02044",
			"visible": true,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d"
		},
		"src/main/ffmpeg.ts-simstep-78826a87-8c3c-46ac-b641-a502a73fa459": {
			"path": "src/main/ffmpeg.ts-simstep-78826a87-8c3c-46ac-b641-a502a73fa459",
			"fileName": "ffmpeg.ts",
			"wiki": "The main process receives the request. The `captureFrame` function constructs the final FFmpeg command with the correct timestamp, quality, and output path, then executes it to save the snapshot image file.",
			"cellName": "(Snapshot Flow) Execute FFmpeg in Main Process - ffmpeg.ts:L455-474",
			"cellId": "1be22197-755b-40c1-8231-6fb608c02044",
			"visible": true,
			"startLine": 455,
			"endLine": 474,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d",
			"parentPath": "src/main/ffmpeg.ts",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "78826a87-8c3c-46ac-b641-a502a73fa459"
				}
			]
		},
		"05d22903-b741-44cd-a40f-d6294542efdb": {
			"path": "05d22903-b741-44cd-a40f-d6294542efdb",
			"fileName": "05d22903-b741-44cd-a40f-d6294542efdb",
			"cellName": "(Sequence Flow) User Initiates Frame Extraction - App.tsx:L1322-1324",
			"cellId": "05d22903-b741-44cd-a40f-d6294542efdb",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-2bbb9120-cc5a-4728-a757-a793aeaab9da": {
			"path": "src/renderer/src/App.tsx-simstep-2bbb9120-cc5a-4728-a757-a793aeaab9da",
			"fileName": "App.tsx",
			"wiki": "The user triggers an action, such as from a context menu or keyboard shortcut, to extract frames from the currently selected video segment.",
			"cellName": "(Sequence Flow) User Initiates Frame Extraction - App.tsx:L1322-1324",
			"cellId": "05d22903-b741-44cd-a40f-d6294542efdb",
			"visible": true,
			"startLine": 1322,
			"endLine": 1324,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "2bbb9120-cc5a-4728-a757-a793aeaab9da"
				}
			]
		},
		"bca28915-50c6-4c4a-967a-d3ccc6f8c42a": {
			"path": "bca28915-50c6-4c4a-967a-d3ccc6f8c42a",
			"fileName": "bca28915-50c6-4c4a-967a-d3ccc6f8c42a",
			"cellName": "(Sequence Flow) User Selects Extraction Filter - extractFrames.tsx:L7-11",
			"cellId": "bca28915-50c6-4c4a-967a-d3ccc6f8c42a",
			"visible": true,
			"parentCellId": "c74208fe-d712-4001-82d9-09b9305f1f8b"
		},
		"src/renderer/src/dialogs/extractFrames.tsx-simstep-b15d12d0-6a2e-49c9-8273-33f9473ea5a6": {
			"path": "src/renderer/src/dialogs/extractFrames.tsx-simstep-b15d12d0-6a2e-49c9-8273-33f9473ea5a6",
			"fileName": "extractFrames.tsx",
			"wiki": "A dialog is displayed, prompting the user to choose how frames should be extracted (e.g., every Nth frame, every second, best thumbnails). The application waits for the user's selection.",
			"cellName": "(Sequence Flow) User Selects Extraction Filter - extractFrames.tsx:L7-11",
			"cellId": "bca28915-50c6-4c4a-967a-d3ccc6f8c42a",
			"visible": true,
			"startLine": 7,
			"endLine": 11,
			"parentCellId": "c74208fe-d712-4001-82d9-09b9305f1f8b",
			"parentPath": "src/renderer/src/dialogs/extractFrames.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "b15d12d0-6a2e-49c9-8273-33f9473ea5a6"
				}
			]
		},
		"231861b0-ddcf-4129-8f75-49a63bf9b379": {
			"path": "231861b0-ddcf-4129-8f75-49a63bf9b379",
			"fileName": "231861b0-ddcf-4129-8f75-49a63bf9b379",
			"cellName": "(Sequence Flow) Process Segments and Capture Frames - App.tsx:L1309-1313",
			"cellId": "231861b0-ddcf-4129-8f75-49a63bf9b379",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-ee5cf021-2f21-4b87-8636-49838317018b": {
			"path": "src/renderer/src/App.tsx-simstep-ee5cf021-2f21-4b87-8636-49838317018b",
			"fileName": "App.tsx",
			"wiki": "After receiving the user's settings, the application iterates through each selected segment and calls `captureFramesRange` for each one to initiate the extraction.",
			"cellName": "(Sequence Flow) Process Segments and Capture Frames - App.tsx:L1309-1313",
			"cellId": "231861b0-ddcf-4129-8f75-49a63bf9b379",
			"visible": true,
			"startLine": 1309,
			"endLine": 1313,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "ee5cf021-2f21-4b87-8636-49838317018b"
				}
			]
		},
		"d0ee992f-e79c-4acc-ac1c-16fafe2a07f2": {
			"path": "d0ee992f-e79c-4acc-ac1c-16fafe2a07f2",
			"fileName": "d0ee992f-e79c-4acc-ac1c-16fafe2a07f2",
			"cellName": "(Sequence Flow) Execute FFmpeg Extraction in Main Process - ffmpeg.ts:L455-474",
			"cellId": "d0ee992f-e79c-4acc-ac1c-16fafe2a07f2",
			"visible": true,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d"
		},
		"src/main/ffmpeg.ts-simstep-f67ab7d7-8548-408b-a182-457f662f46ad": {
			"path": "src/main/ffmpeg.ts-simstep-f67ab7d7-8548-408b-a182-457f662f46ad",
			"fileName": "ffmpeg.ts",
			"wiki": "The `captureFrames` function in the main process receives the request. It constructs the final FFmpeg command, including the video filter (`-vf`) for selecting frames and an output path template for sequential numbering (e.g., `output-%04d.png`), and then executes the command.",
			"cellName": "(Sequence Flow) Execute FFmpeg Extraction in Main Process - ffmpeg.ts:L455-474",
			"cellId": "d0ee992f-e79c-4acc-ac1c-16fafe2a07f2",
			"visible": true,
			"startLine": 455,
			"endLine": 474,
			"parentCellId": "32eec39f-6ea1-43b3-9abf-a9309536057d",
			"parentPath": "src/main/ffmpeg.ts",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "f67ab7d7-8548-408b-a182-457f662f46ad"
				}
			]
		},
		"9c9c85c3-b4a1-4767-8264-999e40b2d754": {
			"path": "9c9c85c3-b4a1-4767-8264-999e40b2d754",
			"fileName": "9c9c85c3-b4a1-4767-8264-999e40b2d754",
			"cellName": "(Sequence Flow) Notify User of Completion - App.tsx:L1314-1317",
			"cellId": "9c9c85c3-b4a1-4767-8264-999e40b2d754",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-21467898-a81a-4dbe-8ee2-2fc84400d6fd": {
			"path": "src/renderer/src/App.tsx-simstep-21467898-a81a-4dbe-8ee2-2fc84400d6fd",
			"fileName": "App.tsx",
			"wiki": "Once all segments have been processed, the application displays a system notification and a toast message confirming that the frames have been extracted, providing a button to open the output folder.",
			"cellName": "(Sequence Flow) Notify User of Completion - App.tsx:L1314-1317",
			"cellId": "9c9c85c3-b4a1-4767-8264-999e40b2d754",
			"visible": true,
			"startLine": 1314,
			"endLine": 1317,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "21467898-a81a-4dbe-8ee2-2fc84400d6fd"
				}
			]
		},
		"33683624-370a-4b7e-8c6a-6c88a43240bc": {
			"path": "33683624-370a-4b7e-8c6a-6c88a43240bc",
			"fileName": "33683624-370a-4b7e-8c6a-6c88a43240bc",
			"cellName": "(Snapshot Flow)\nTrigger `captureSnapshot`\nFunction",
			"cellId": "33683624-370a-4b7e-8c6a-6c88a43240bc",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-0de15a15-1f53-4261-b1dd-f4f00015b026-33683624-370a-4b7e-8c6a-6c88a43240bc": {
			"path": "generated-edge-simstep-0de15a15-1f53-4261-b1dd-f4f00015b026-33683624-370a-4b7e-8c6a-6c88a43240bc",
			"fileName": "BottomBar.tsx",
			"cellName": "(Snapshot Flow) Trigger `captureSnapshot` Function",
			"cellId": "33683624-370a-4b7e-8c6a-6c88a43240bc",
			"visible": true,
			"startLine": 568,
			"endLine": 568,
			"parentPath": "src/renderer/src/BottomBar.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "0de15a15-1f53-4261-b1dd-f4f00015b026"
				}
			]
		},
		"eea2e371-ef9c-49c8-bbf9-1e74c4c11433": {
			"path": "eea2e371-ef9c-49c8-bbf9-1e74c4c11433",
			"fileName": "eea2e371-ef9c-49c8-bbf9-1e74c4c11433",
			"cellName": "(Snapshot Flow)\nInvoke Frame\nCapture Hook",
			"cellId": "eea2e371-ef9c-49c8-bbf9-1e74c4c11433",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-08683851-3460-4a81-b51d-6b9b04181158-eea2e371-ef9c-49c8-bbf9-1e74c4c11433": {
			"path": "generated-edge-simstep-08683851-3460-4a81-b51d-6b9b04181158-eea2e371-ef9c-49c8-bbf9-1e74c4c11433",
			"fileName": "App.tsx",
			"cellName": "(Snapshot Flow) Invoke Frame Capture Hook",
			"cellId": "eea2e371-ef9c-49c8-bbf9-1e74c4c11433",
			"visible": true,
			"startLine": 127,
			"endLine": 135,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "08683851-3460-4a81-b51d-6b9b04181158"
				}
			]
		},
		"d2850200-1088-4c62-88ab-cc574dd3f70d": {
			"path": "d2850200-1088-4c62-88ab-cc574dd3f70d",
			"fileName": "d2850200-1088-4c62-88ab-cc574dd3f70d",
			"cellName": "(Sequence Flow)\nRequest User\nParameters",
			"cellId": "d2850200-1088-4c62-88ab-cc574dd3f70d",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-090045bf-7b75-4225-b95e-424a274a179c-d2850200-1088-4c62-88ab-cc574dd3f70d": {
			"path": "generated-edge-simstep-090045bf-7b75-4225-b95e-424a274a179c-d2850200-1088-4c62-88ab-cc574dd3f70d",
			"fileName": "App.tsx",
			"cellName": "(Sequence Flow) Request User Parameters",
			"cellId": "d2850200-1088-4c62-88ab-cc574dd3f70d",
			"visible": true,
			"startLine": 1286,
			"endLine": 1290,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "090045bf-7b75-4225-b95e-424a274a179c"
				}
			]
		},
		"18b4a40d-a82e-4247-9572-98bfb3da73b1": {
			"path": "18b4a40d-a82e-4247-9572-98bfb3da73b1",
			"fileName": "18b4a40d-a82e-4247-9572-98bfb3da73b1",
			"cellName": "(Sequence Flow)\nReturn User's\nChoice",
			"cellId": "18b4a40d-a82e-4247-9572-98bfb3da73b1",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-6e59692d-410e-4cfd-bd53-6c154b73d948-18b4a40d-a82e-4247-9572-98bfb3da73b1": {
			"path": "generated-edge-simstep-6e59692d-410e-4cfd-bd53-6c154b73d948-18b4a40d-a82e-4247-9572-98bfb3da73b1",
			"fileName": "extractFrames.tsx",
			"cellName": "(Sequence Flow) Return User's Choice",
			"cellId": "18b4a40d-a82e-4247-9572-98bfb3da73b1",
			"visible": true,
			"startLine": 1286,
			"endLine": 1290,
			"parentPath": "src/renderer/src/dialogs/extractFrames.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "6e59692d-410e-4cfd-bd53-6c154b73d948"
				}
			]
		},
		"1704c16d-ebcc-44ff-8c7e-68159315e892": {
			"path": "1704c16d-ebcc-44ff-8c7e-68159315e892",
			"fileName": "1704c16d-ebcc-44ff-8c7e-68159315e892",
			"cellName": "(Sequence Flow)\nInvoke Frame\nRange Capture\nHook",
			"cellId": "1704c16d-ebcc-44ff-8c7e-68159315e892",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-3b54127a-920d-4c3b-a6c1-bc6ed6a6f44c-1704c16d-ebcc-44ff-8c7e-68159315e892": {
			"path": "generated-edge-simstep-3b54127a-920d-4c3b-a6c1-bc6ed6a6f44c-1704c16d-ebcc-44ff-8c7e-68159315e892",
			"fileName": "App.tsx",
			"cellName": "(Sequence Flow) Invoke Frame Range Capture Hook",
			"cellId": "1704c16d-ebcc-44ff-8c7e-68159315e892",
			"visible": true,
			"startLine": 54,
			"endLine": 54,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "3b54127a-920d-4c3b-a6c1-bc6ed6a6f44c"
				}
			]
		},
		"8729cbb8-4f27-4578-b465-900583cb7a2e": {
			"path": "8729cbb8-4f27-4578-b465-900583cb7a2e",
			"fileName": "8729cbb8-4f27-4578-b465-900583cb7a2e",
			"cellName": "(Sequence Flow)\nReport Completion",
			"cellId": "8729cbb8-4f27-4578-b465-900583cb7a2e",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-0213e7b6-7e23-42ea-90e6-9a9f89edd818-8729cbb8-4f27-4578-b465-900583cb7a2e": {
			"path": "generated-edge-simstep-0213e7b6-7e23-42ea-90e6-9a9f89edd818-8729cbb8-4f27-4578-b465-900583cb7a2e",
			"fileName": "ffmpeg.ts",
			"cellName": "(Sequence Flow) Report Completion",
			"cellId": "8729cbb8-4f27-4578-b465-900583cb7a2e",
			"visible": true,
			"startLine": 56,
			"endLine": 56,
			"parentPath": "src/main/ffmpeg.ts",
			"simSteps": [
				{
					"simulationKey": "Capturing Snapshots and Image Sequences",
					"simStepId": "0213e7b6-7e23-42ea-90e6-9a9f89edd818"
				}
			]
		},
		"44bb0916-1c38-4556-8138-6af52160f2c9": {
			"path": "44bb0916-1c38-4556-8138-6af52160f2c9",
			"fileName": "44bb0916-1c38-4556-8138-6af52160f2c9",
			"cellName": "State Initialization - App.tsx:L134",
			"cellId": "44bb0916-1c38-4556-8138-6af52160f2c9",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-4a9e886e-c83a-4a83-aa9a-0255e1593db8": {
			"path": "src/renderer/src/App.tsx-simstep-4a9e886e-c83a-4a83-aa9a-0255e1593db8",
			"fileName": "App.tsx",
			"wiki": "The main App component initializes and manages the application state. The `customTagsByFile` state is created using `useState` to hold any user-defined metadata for each loaded file. Initially, it's an empty object.",
			"cellName": "State Initialization - App.tsx:L134",
			"cellId": "44bb0916-1c38-4556-8138-6af52160f2c9",
			"visible": true,
			"startLine": 134,
			"endLine": 134,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "4a9e886e-c83a-4a83-aa9a-0255e1593db8"
				}
			]
		},
		"e364ce6c-1250-48e0-b0aa-dcdd8bf585d9": {
			"path": "e364ce6c-1250-48e0-b0aa-dcdd8bf585d9",
			"fileName": "e364ce6c-1250-48e0-b0aa-dcdd8bf585d9",
			"cellName": "User Opens File Metadata Editor - StreamsSelector.tsx:L504-512",
			"cellId": "e364ce6c-1250-48e0-b0aa-dcdd8bf585d9",
			"visible": true,
			"parentCellId": "5dbe3c60-4b67-4779-affd-efe158861967"
		},
		"src/renderer/src/StreamsSelector.tsx-simstep-46e88c5a-04a3-41e7-8a20-88a1d33375f5": {
			"path": "src/renderer/src/StreamsSelector.tsx-simstep-46e88c5a-04a3-41e7-8a20-88a1d33375f5",
			"fileName": "StreamsSelector.tsx",
			"wiki": "When the user clicks an 'Edit' button for a file in the Streams panel, `StreamsSelector` updates its internal state to show a dialog. This dialog renders the `EditFileDialog` component, which contains a `TagEditor` for modifying the file's container-level metadata.",
			"cellName": "User Opens File Metadata Editor - StreamsSelector.tsx:L504-512",
			"cellId": "e364ce6c-1250-48e0-b0aa-dcdd8bf585d9",
			"visible": true,
			"startLine": 504,
			"endLine": 512,
			"parentCellId": "5dbe3c60-4b67-4779-affd-efe158861967",
			"parentPath": "src/renderer/src/StreamsSelector.tsx",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "46e88c5a-04a3-41e7-8a20-88a1d33375f5"
				}
			]
		},
		"8181f0d8-0132-4b93-98b6-fd777aa5e45d": {
			"path": "8181f0d8-0132-4b93-98b6-fd777aa5e45d",
			"fileName": "8181f0d8-0132-4b93-98b6-fd777aa5e45d",
			"cellName": "Metadata State Update Logic - StreamsSelector.tsx:L50-52",
			"cellId": "8181f0d8-0132-4b93-98b6-fd777aa5e45d",
			"visible": true,
			"parentCellId": "5dbe3c60-4b67-4779-affd-efe158861967"
		},
		"src/renderer/src/StreamsSelector.tsx-simstep-988c168d-d169-44e2-8db4-5fa824a2c9fc": {
			"path": "src/renderer/src/StreamsSelector.tsx-simstep-988c168d-d169-44e2-8db4-5fa824a2c9fc",
			"fileName": "StreamsSelector.tsx",
			"wiki": "The `onTagsChange` callback within `EditFileDialog` receives the new metadata. It then calls the `setCustomTagsByFile` prop, updating the state by merging the new tags for the currently editing file.",
			"cellName": "Metadata State Update Logic - StreamsSelector.tsx:L50-52",
			"cellId": "8181f0d8-0132-4b93-98b6-fd777aa5e45d",
			"visible": true,
			"startLine": 50,
			"endLine": 52,
			"parentCellId": "5dbe3c60-4b67-4779-affd-efe158861967",
			"parentPath": "src/renderer/src/StreamsSelector.tsx",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "988c168d-d169-44e2-8db4-5fa824a2c9fc"
				}
			]
		},
		"c697a034-ba9e-4c07-a007-9e5576db8364": {
			"path": "c697a034-ba9e-4c07-a007-9e5576db8364",
			"fileName": "c697a034-ba9e-4c07-a007-9e5576db8364",
			"cellName": "App State Ready for Export - App.tsx:L134",
			"cellId": "c697a034-ba9e-4c07-a007-9e5576db8364",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-fe019b51-f6a4-4d7c-92f5-57bfb4c33006": {
			"path": "src/renderer/src/App.tsx-simstep-fe019b51-f6a4-4d7c-92f5-57bfb4c33006",
			"fileName": "App.tsx",
			"wiki": "The `customTagsByFile` state in `App.tsx` now contains the user-defined metadata. This data is ready to be used when the user initiates an export operation.",
			"cellName": "App State Ready for Export - App.tsx:L134",
			"cellId": "c697a034-ba9e-4c07-a007-9e5576db8364",
			"visible": true,
			"startLine": 134,
			"endLine": 134,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "fe019b51-f6a4-4d7c-92f5-57bfb4c33006"
				}
			]
		},
		"f8cfc304-fc12-4138-9b9d-16287d5c68ef": {
			"path": "f8cfc304-fc12-4138-9b9d-16287d5c68ef",
			"fileName": "f8cfc304-fc12-4138-9b9d-16287d5c68ef",
			"cellName": "FFmpeg Command Generation - useFfmpegOperations.ts:L321-324",
			"cellId": "f8cfc304-fc12-4138-9b9d-16287d5c68ef",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b94f13fd-1350-41ac-9665-090724eb133a": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b94f13fd-1350-41ac-9665-090724eb133a",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "Inside the `losslessCutSingle` function (called by the export process), the `customTagsByFile` object is used to construct FFmpeg command line arguments. Each key-value pair is formatted into a `-metadata key=value` argument.",
			"cellName": "FFmpeg Command Generation - useFfmpegOperations.ts:L321-324",
			"cellId": "f8cfc304-fc12-4138-9b9d-16287d5c68ef",
			"visible": true,
			"startLine": 321,
			"endLine": 324,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "b94f13fd-1350-41ac-9665-090724eb133a"
				}
			]
		},
		"98309d94-d144-447a-a0ef-516448532229": {
			"path": "98309d94-d144-447a-a0ef-516448532229",
			"fileName": "98309d94-d144-447a-a0ef-516448532229",
			"cellName": "Output File with New Metadata - useFfmpegOperations.ts:L482",
			"cellId": "98309d94-d144-447a-a0ef-516448532229",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b9c1b90e-b931-4dab-98f3-bdc4b0e6c33f": {
			"path": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b9c1b90e-b931-4dab-98f3-bdc4b0e6c33f",
			"fileName": "useFfmpegOperations.ts",
			"wiki": "FFmpeg processes the input file and creates a new output file. The new file is a lossless copy that now contains the user-specified title in its container-level metadata, viewable in other media players and editors.",
			"cellName": "Output File with New Metadata - useFfmpegOperations.ts:L482",
			"cellId": "98309d94-d144-447a-a0ef-516448532229",
			"visible": true,
			"startLine": 482,
			"endLine": 482,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c",
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "b9c1b90e-b931-4dab-98f3-bdc4b0e6c33f"
				}
			]
		},
		"35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10": {
			"path": "35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10",
			"fileName": "35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10",
			"cellName": "State Propagation\nto StreamsSelector",
			"cellId": "35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-a8032886-f843-42ff-a61a-ace33bffeea9-35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10": {
			"path": "generated-edge-simstep-a8032886-f843-42ff-a61a-ace33bffeea9-35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10",
			"fileName": "App.tsx",
			"cellName": "State Propagation to StreamsSelector",
			"cellId": "35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10",
			"visible": true,
			"startLine": 2793,
			"endLine": 2794,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "a8032886-f843-42ff-a61a-ace33bffeea9"
				}
			]
		},
		"d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9": {
			"path": "d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9",
			"fileName": "d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9",
			"cellName": "User Input\nTriggers State\nUpdate",
			"cellId": "d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9",
			"visible": true,
			"parentCellId": "5dbe3c60-4b67-4779-affd-efe158861967"
		},
		"generated-edge-simstep-47b9ec8a-12f2-4d8b-95ac-58f6504132b6-d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9": {
			"path": "generated-edge-simstep-47b9ec8a-12f2-4d8b-95ac-58f6504132b6-d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9",
			"fileName": "StreamsSelector.tsx",
			"cellName": "User Input Triggers State Update",
			"cellId": "d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9",
			"visible": true,
			"startLine": 50,
			"endLine": 52,
			"parentPath": "src/renderer/src/StreamsSelector.tsx",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "47b9ec8a-12f2-4d8b-95ac-58f6504132b6"
				}
			]
		},
		"6e73adea-b533-40bf-be8d-7222957dfa29": {
			"path": "6e73adea-b533-40bf-be8d-7222957dfa29",
			"fileName": "6e73adea-b533-40bf-be8d-7222957dfa29",
			"cellName": "State Propagation\nto App\nComponent",
			"cellId": "6e73adea-b533-40bf-be8d-7222957dfa29",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-fb1d4f06-bd16-409d-92f0-be3a609fba92-6e73adea-b533-40bf-be8d-7222957dfa29": {
			"path": "generated-edge-simstep-fb1d4f06-bd16-409d-92f0-be3a609fba92-6e73adea-b533-40bf-be8d-7222957dfa29",
			"fileName": "StreamsSelector.tsx",
			"cellName": "State Propagation to App Component",
			"cellId": "6e73adea-b533-40bf-be8d-7222957dfa29",
			"visible": true,
			"startLine": 134,
			"endLine": 134,
			"parentPath": "src/renderer/src/StreamsSelector.tsx",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "fb1d4f06-bd16-409d-92f0-be3a609fba92"
				}
			]
		},
		"e49335ce-8e18-4eb4-8934-7122406f9aa8": {
			"path": "e49335ce-8e18-4eb4-8934-7122406f9aa8",
			"fileName": "e49335ce-8e18-4eb4-8934-7122406f9aa8",
			"cellName": "Metadata Passed\nto Export\nProcess",
			"cellId": "e49335ce-8e18-4eb4-8934-7122406f9aa8",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-2411a4bb-6054-4b50-9703-95fbf343470e-e49335ce-8e18-4eb4-8934-7122406f9aa8": {
			"path": "generated-edge-simstep-2411a4bb-6054-4b50-9703-95fbf343470e-e49335ce-8e18-4eb4-8934-7122406f9aa8",
			"fileName": "App.tsx",
			"cellName": "Metadata Passed to Export Process",
			"cellId": "e49335ce-8e18-4eb4-8934-7122406f9aa8",
			"visible": true,
			"startLine": 1186,
			"endLine": 1186,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "2411a4bb-6054-4b50-9703-95fbf343470e"
				}
			]
		},
		"a3f38611-e09d-480e-bbe0-3b2a555d4f6a": {
			"path": "a3f38611-e09d-480e-bbe0-3b2a555d4f6a",
			"fileName": "a3f38611-e09d-480e-bbe0-3b2a555d4f6a",
			"cellName": "FFmpeg Command\nExecution",
			"cellId": "a3f38611-e09d-480e-bbe0-3b2a555d4f6a",
			"visible": true,
			"parentCellId": "60c0bf90-c76e-42a3-bfe5-baddf9ffde4c"
		},
		"generated-edge-simstep-508dd45b-3ee9-4d5d-a56f-7b7b3d3b8ceb-a3f38611-e09d-480e-bbe0-3b2a555d4f6a": {
			"path": "generated-edge-simstep-508dd45b-3ee9-4d5d-a56f-7b7b3d3b8ceb-a3f38611-e09d-480e-bbe0-3b2a555d4f6a",
			"fileName": "useFfmpegOperations.ts",
			"cellName": "FFmpeg Command Execution",
			"cellId": "a3f38611-e09d-480e-bbe0-3b2a555d4f6a",
			"visible": true,
			"startLine": 482,
			"endLine": 482,
			"parentPath": "src/renderer/src/hooks/useFfmpegOperations.ts",
			"simSteps": [
				{
					"simulationKey": "Editing File and Track Metadata",
					"simStepId": "508dd45b-3ee9-4d5d-a56f-7b7b3d3b8ceb"
				}
			]
		},
		"0ad2329f-13db-4897-8036-441b2de93368": {
			"path": "0ad2329f-13db-4897-8036-441b2de93368",
			"fileName": "0ad2329f-13db-4897-8036-441b2de93368",
			"cellName": "segments.ts",
			"cellId": "0ad2329f-13db-4897-8036-441b2de93368",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"739186cb-e6ce-4e17-9031-de32d7289ec2": {
			"path": "739186cb-e6ce-4e17-9031-de32d7289ec2",
			"fileName": "739186cb-e6ce-4e17-9031-de32d7289ec2",
			"cellName": "SegmentList.tsx",
			"cellId": "739186cb-e6ce-4e17-9031-de32d7289ec2",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"3f2b38be-7348-47a9-9067-95777a400ec4": {
			"path": "3f2b38be-7348-47a9-9067-95777a400ec4",
			"fileName": "3f2b38be-7348-47a9-9067-95777a400ec4",
			"cellName": "[Invert Flow] User Triggers Invert Segments - menu.ts:L324-328",
			"cellId": "3f2b38be-7348-47a9-9067-95777a400ec4",
			"visible": true,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061"
		},
		"src/main/menu.ts-simstep-f7da2115-31e3-45e8-9e57-488261e71e75": {
			"path": "src/main/menu.ts-simstep-f7da2115-31e3-45e8-9e57-488261e71e75",
			"fileName": "menu.ts",
			"wiki": "The user initiates the 'Invert Segments' operation by clicking the 'Invert all segments on timeline' option from the 'Segments' menu in the application's top menu bar. This action is handled in the main process.",
			"cellName": "[Invert Flow] User Triggers Invert Segments - menu.ts:L324-328",
			"cellId": "3f2b38be-7348-47a9-9067-95777a400ec4",
			"visible": true,
			"startLine": 324,
			"endLine": 328,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061",
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "f7da2115-31e3-45e8-9e57-488261e71e75"
				}
			]
		},
		"a224479d-e0b0-4429-9fe3-c586de862f1a": {
			"path": "a224479d-e0b0-4429-9fe3-c586de862f1a",
			"fileName": "a224479d-e0b0-4429-9fe3-c586de862f1a",
			"cellName": "[Invert Flow] Renderer Calls `invertAllSegments` Hook Function - App.tsx:L366",
			"cellId": "a224479d-e0b0-4429-9fe3-c586de862f1a",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-ca2c6087-098f-4937-ac1b-f24daeefe21f": {
			"path": "src/renderer/src/App.tsx-simstep-ca2c6087-098f-4937-ac1b-f24daeefe21f",
			"fileName": "App.tsx",
			"wiki": "The renderer process receives the IPC message. The main App component, via its keyboard and action handling logic, invokes the `invertAllSegments` function provided by the `useSegments` custom hook.",
			"cellName": "[Invert Flow] Renderer Calls `invertAllSegments` Hook Function - App.tsx:L366",
			"cellId": "a224479d-e0b0-4429-9fe3-c586de862f1a",
			"visible": true,
			"startLine": 366,
			"endLine": 366,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "ca2c6087-098f-4937-ac1b-f24daeefe21f"
				}
			]
		},
		"51def865-de03-4187-85b6-ba86cf6d1936": {
			"path": "51def865-de03-4187-85b6-ba86cf6d1936",
			"fileName": "51def865-de03-4187-85b6-ba86cf6d1936",
			"cellName": "[Invert Flow] Core Inversion Logic Execution - segments.ts:L158-209",
			"cellId": "51def865-de03-4187-85b6-ba86cf6d1936",
			"visible": true,
			"parentCellId": "0ad2329f-13db-4897-8036-441b2de93368"
		},
		"src/renderer/src/segments.ts-simstep-ccfb1951-bbcd-4d12-8178-9768a5ba4cdc": {
			"path": "src/renderer/src/segments.ts-simstep-ccfb1951-bbcd-4d12-8178-9768a5ba4cdc",
			"fileName": "segments.ts",
			"wiki": "The `invertSegments` function calculates the gaps between the provided segments. It creates new segments to fill these gaps, effectively inverting the selection. It handles the start and end of the timeline based on provided flags.",
			"cellName": "[Invert Flow] Core Inversion Logic Execution - segments.ts:L158-209",
			"cellId": "51def865-de03-4187-85b6-ba86cf6d1936",
			"visible": true,
			"startLine": 158,
			"endLine": 209,
			"parentCellId": "0ad2329f-13db-4897-8036-441b2de93368",
			"parentPath": "src/renderer/src/segments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "ccfb1951-bbcd-4d12-8178-9768a5ba4cdc"
				}
			]
		},
		"8d01d37f-aab7-4e85-815d-4b14afe686c2": {
			"path": "8d01d37f-aab7-4e85-815d-4b14afe686c2",
			"fileName": "8d01d37f-aab7-4e85-815d-4b14afe686c2",
			"cellName": "[Invert Flow] Update State with Inverted Segments - useSegments.ts:L294-302",
			"cellId": "8d01d37f-aab7-4e85-815d-4b14afe686c2",
			"visible": true,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28"
		},
		"src/renderer/src/hooks/useSegments.ts-simstep-9d8e3dcd-9604-4c3d-9ca9-cc771de67142": {
			"path": "src/renderer/src/hooks/useSegments.ts-simstep-9d8e3dcd-9604-4c3d-9ca9-cc771de67142",
			"fileName": "useSegments.ts",
			"wiki": "The `invertAllSegments` function in the hook receives the result, maps each new segment into a state-compatible object with a new ID, and updates the application's state using `safeSetCutSegments`. This triggers a UI re-render, displaying the inverted segments on the timeline.",
			"cellName": "[Invert Flow] Update State with Inverted Segments - useSegments.ts:L294-302",
			"cellId": "8d01d37f-aab7-4e85-815d-4b14afe686c2",
			"visible": true,
			"startLine": 294,
			"endLine": 302,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "9d8e3dcd-9604-4c3d-9ca9-cc771de67142"
				}
			]
		},
		"7f2155a4-b839-4e56-adf7-e3588ce38fd8": {
			"path": "7f2155a4-b839-4e56-adf7-e3588ce38fd8",
			"fileName": "7f2155a4-b839-4e56-adf7-e3588ce38fd8",
			"cellName": "[Combine Flow] User Triggers Combine Segments - menu.ts:L306-310",
			"cellId": "7f2155a4-b839-4e56-adf7-e3588ce38fd8",
			"visible": true,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061"
		},
		"src/main/menu.ts-simstep-9301e464-e767-4752-8918-5cdbc1ea7404": {
			"path": "src/main/menu.ts-simstep-9301e464-e767-4752-8918-5cdbc1ea7404",
			"fileName": "menu.ts",
			"wiki": "The user initiates the 'Combine Overlapping Segments' operation from the 'Segments' menu. This action is defined in the main process.",
			"cellName": "[Combine Flow] User Triggers Combine Segments - menu.ts:L306-310",
			"cellId": "7f2155a4-b839-4e56-adf7-e3588ce38fd8",
			"visible": true,
			"startLine": 306,
			"endLine": 310,
			"parentCellId": "14ed4fa6-f08f-460f-be82-0791033d8061",
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "9301e464-e767-4752-8918-5cdbc1ea7404"
				}
			]
		},
		"13fb567e-091d-438d-9b9e-a54c0669ccf3": {
			"path": "13fb567e-091d-438d-9b9e-a54c0669ccf3",
			"fileName": "13fb567e-091d-438d-9b9e-a54c0669ccf3",
			"cellName": "[Combine Flow] Renderer Calls `combineOverlappingSegments` Hook Function - App.tsx:L367",
			"cellId": "13fb567e-091d-438d-9b9e-a54c0669ccf3",
			"visible": true,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40"
		},
		"src/renderer/src/App.tsx-simstep-58545d6d-e481-4e4b-ac77-f26f03f3f1a8": {
			"path": "src/renderer/src/App.tsx-simstep-58545d6d-e481-4e4b-ac77-f26f03f3f1a8",
			"fileName": "App.tsx",
			"wiki": "The renderer process, via the main App component's action handling, calls the `combineOverlappingSegments` function from the `useSegments` hook. This function will operate on the currently selected segments.",
			"cellName": "[Combine Flow] Renderer Calls `combineOverlappingSegments` Hook Function - App.tsx:L367",
			"cellId": "13fb567e-091d-438d-9b9e-a54c0669ccf3",
			"visible": true,
			"startLine": 367,
			"endLine": 367,
			"parentCellId": "3c6792a6-2b59-4658-8e1b-7a309b404b40",
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "58545d6d-e481-4e4b-ac77-f26f03f3f1a8"
				}
			]
		},
		"2b5de623-18fd-40af-9d8c-21750eb5c26d": {
			"path": "2b5de623-18fd-40af-9d8c-21750eb5c26d",
			"fileName": "2b5de623-18fd-40af-9d8c-21750eb5c26d",
			"cellName": "[Combine Flow] Core Combination Logic Execution - segments.ts:L115-136",
			"cellId": "2b5de623-18fd-40af-9d8c-21750eb5c26d",
			"visible": true,
			"parentCellId": "0ad2329f-13db-4897-8036-441b2de93368"
		},
		"src/renderer/src/segments.ts-simstep-85edd41a-47b3-406a-83a5-84447dee6db9": {
			"path": "src/renderer/src/segments.ts-simstep-85edd41a-47b3-406a-83a5-84447dee6db9",
			"fileName": "segments.ts",
			"wiki": "The `combineOverlappingSegments` utility function sorts the segments by start time, then iterates through them, merging any segments that overlap into a single segment with a start time from the first and an end time from the last overlapping segment.",
			"cellName": "[Combine Flow] Core Combination Logic Execution - segments.ts:L115-136",
			"cellId": "2b5de623-18fd-40af-9d8c-21750eb5c26d",
			"visible": true,
			"startLine": 115,
			"endLine": 136,
			"parentCellId": "0ad2329f-13db-4897-8036-441b2de93368",
			"parentPath": "src/renderer/src/segments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "85edd41a-47b3-406a-83a5-84447dee6db9"
				}
			]
		},
		"3fae905a-8e5a-4f9d-912f-4cf10d10ab20": {
			"path": "3fae905a-8e5a-4f9d-912f-4cf10d10ab20",
			"fileName": "3fae905a-8e5a-4f9d-912f-4cf10d10ab20",
			"cellName": "[Combine Flow] Update State with Combined Segments - useSegments.ts:L337-342",
			"cellId": "3fae905a-8e5a-4f9d-912f-4cf10d10ab20",
			"visible": true,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28"
		},
		"src/renderer/src/hooks/useSegments.ts-simstep-897dc8bf-7af7-4483-8d93-439ebe71a453": {
			"path": "src/renderer/src/hooks/useSegments.ts-simstep-897dc8bf-7af7-4483-8d93-439ebe71a453",
			"fileName": "useSegments.ts",
			"wiki": "The hook function updates the application state by replacing the original selected segments with the newly combined ones, while keeping all unselected segments. This triggers a UI re-render.",
			"cellName": "[Combine Flow] Update State with Combined Segments - useSegments.ts:L337-342",
			"cellId": "3fae905a-8e5a-4f9d-912f-4cf10d10ab20",
			"visible": true,
			"startLine": 337,
			"endLine": 342,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "897dc8bf-7af7-4483-8d93-439ebe71a453"
				}
			]
		},
		"31d722ba-a2c7-48e5-8687-5c3c5abf6260": {
			"path": "31d722ba-a2c7-48e5-8687-5c3c5abf6260",
			"fileName": "31d722ba-a2c7-48e5-8687-5c3c5abf6260",
			"cellName": "[Split Flow] User Triggers Split Segment - SegmentList.tsx:L443-447",
			"cellId": "31d722ba-a2c7-48e5-8687-5c3c5abf6260",
			"visible": true,
			"parentCellId": "739186cb-e6ce-4e17-9031-de32d7289ec2"
		},
		"src/renderer/src/SegmentList.tsx-simstep-5807cb31-3a26-4919-837c-45f6a8e25d38": {
			"path": "src/renderer/src/SegmentList.tsx-simstep-5807cb31-3a26-4919-837c-45f6a8e25d38",
			"fileName": "SegmentList.tsx",
			"wiki": "The user clicks the 'Split segment at cursor' button in the Segment List UI. This action is only available if the playhead is currently over a segment.",
			"cellName": "[Split Flow] User Triggers Split Segment - SegmentList.tsx:L443-447",
			"cellId": "31d722ba-a2c7-48e5-8687-5c3c5abf6260",
			"visible": true,
			"startLine": 443,
			"endLine": 447,
			"parentCellId": "739186cb-e6ce-4e17-9031-de32d7289ec2",
			"parentPath": "src/renderer/src/SegmentList.tsx",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "5807cb31-3a26-4919-837c-45f6a8e25d38"
				}
			]
		},
		"243c6b3d-7fac-4f13-b670-62533df24ebd": {
			"path": "243c6b3d-7fac-4f13-b670-62533df24ebd",
			"fileName": "243c6b3d-7fac-4f13-b670-62533df24ebd",
			"cellName": "[Split Flow] `splitCurrentSegment` Logic Execution - useSegments.ts:L579-583",
			"cellId": "243c6b3d-7fac-4f13-b670-62533df24ebd",
			"visible": true,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28"
		},
		"src/renderer/src/hooks/useSegments.ts-simstep-3ff1ad81-a548-4df7-8e22-b2d42b4607fb": {
			"path": "src/renderer/src/hooks/useSegments.ts-simstep-3ff1ad81-a548-4df7-8e22-b2d42b4607fb",
			"fileName": "useSegments.ts",
			"wiki": "The `splitCurrentSegment` function in the `useSegments` hook executes. It first gets the current playhead time and then finds which existing segment is at that time.",
			"cellName": "[Split Flow] `splitCurrentSegment` Logic Execution - useSegments.ts:L579-583",
			"cellId": "243c6b3d-7fac-4f13-b670-62533df24ebd",
			"visible": true,
			"startLine": 579,
			"endLine": 583,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "3ff1ad81-a548-4df7-8e22-b2d42b4607fb"
				}
			]
		},
		"8ed4737a-df10-49cf-9730-e696349f2f22": {
			"path": "8ed4737a-df10-49cf-9730-e696349f2f22",
			"fileName": "8ed4737a-df10-49cf-9730-e696349f2f22",
			"cellName": "[Split Flow] Constructing Updated Segment List - useSegments.ts:L601-606",
			"cellId": "8ed4737a-df10-49cf-9730-e696349f2f22",
			"visible": true,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28"
		},
		"src/renderer/src/hooks/useSegments.ts-simstep-bdb38b0a-8b2d-4cd5-b92a-b0311f36f6f7": {
			"path": "src/renderer/src/hooks/useSegments.ts-simstep-bdb38b0a-8b2d-4cd5-b92a-b0311f36f6f7",
			"fileName": "useSegments.ts",
			"wiki": "The function constructs a new array of all segments. It finds the index of the original segment and inserts the newly created segment immediately after it.",
			"cellName": "[Split Flow] Constructing Updated Segment List - useSegments.ts:L601-606",
			"cellId": "8ed4737a-df10-49cf-9730-e696349f2f22",
			"visible": true,
			"startLine": 601,
			"endLine": 606,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "bdb38b0a-8b2d-4cd5-b92a-b0311f36f6f7"
				}
			]
		},
		"351e81f1-fe34-49ef-8219-de19aee749f9": {
			"path": "351e81f1-fe34-49ef-8219-de19aee749f9",
			"fileName": "351e81f1-fe34-49ef-8219-de19aee749f9",
			"cellName": "[Split Flow] State Update and UI Re-render - useSegments.ts:L601-606",
			"cellId": "351e81f1-fe34-49ef-8219-de19aee749f9",
			"visible": true,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28"
		},
		"src/renderer/src/hooks/useSegments.ts-simstep-afe7418e-42b8-476a-bdb5-270946172431": {
			"path": "src/renderer/src/hooks/useSegments.ts-simstep-afe7418e-42b8-476a-bdb5-270946172431",
			"fileName": "useSegments.ts",
			"wiki": "The `safeSetCutSegments` function updates the `cutSegments` state with the new array. This change in state triggers React to re-render the components, showing the single segment now split into two on the timeline.",
			"cellName": "[Split Flow] State Update and UI Re-render - useSegments.ts:L601-606",
			"cellId": "351e81f1-fe34-49ef-8219-de19aee749f9",
			"visible": true,
			"startLine": 601,
			"endLine": 606,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28",
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "afe7418e-42b8-476a-bdb5-270946172431"
				}
			]
		},
		"186521f7-9226-4363-b238-efdf5356086a": {
			"path": "186521f7-9226-4363-b238-efdf5356086a",
			"fileName": "186521f7-9226-4363-b238-efdf5356086a",
			"cellName": "[Invert Flow]\nIPC Message\nto Renderer",
			"cellId": "186521f7-9226-4363-b238-efdf5356086a",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-cc63814d-95aa-4cd0-aa20-73538e2ad2ba-186521f7-9226-4363-b238-efdf5356086a": {
			"path": "generated-edge-simstep-cc63814d-95aa-4cd0-aa20-73538e2ad2ba-186521f7-9226-4363-b238-efdf5356086a",
			"fileName": "menu.ts",
			"cellName": "[Invert Flow] IPC Message to Renderer",
			"cellId": "186521f7-9226-4363-b238-efdf5356086a",
			"visible": true,
			"startLine": 326,
			"endLine": 326,
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "cc63814d-95aa-4cd0-aa20-73538e2ad2ba"
				}
			]
		},
		"3e040134-87f0-485e-81a9-9b38b73d7fea": {
			"path": "3e040134-87f0-485e-81a9-9b38b73d7fea",
			"fileName": "3e040134-87f0-485e-81a9-9b38b73d7fea",
			"cellName": "[Invert Flow]\nPassing Segments\nto Inversion\nLogic",
			"cellId": "3e040134-87f0-485e-81a9-9b38b73d7fea",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-22cf59bc-c947-4668-8652-9f81fde52a9e-3e040134-87f0-485e-81a9-9b38b73d7fea": {
			"path": "generated-edge-simstep-22cf59bc-c947-4668-8652-9f81fde52a9e-3e040134-87f0-485e-81a9-9b38b73d7fea",
			"fileName": "App.tsx",
			"cellName": "[Invert Flow] Passing Segments to Inversion Logic",
			"cellId": "3e040134-87f0-485e-81a9-9b38b73d7fea",
			"visible": true,
			"startLine": 294,
			"endLine": 294,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "22cf59bc-c947-4668-8652-9f81fde52a9e"
				}
			]
		},
		"27b274fe-541f-41ae-b4ea-b75b03fcbcb6": {
			"path": "27b274fe-541f-41ae-b4ea-b75b03fcbcb6",
			"fileName": "27b274fe-541f-41ae-b4ea-b75b03fcbcb6",
			"cellName": "[Invert Flow]\nReturn Inverted\nSegments",
			"cellId": "27b274fe-541f-41ae-b4ea-b75b03fcbcb6",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-b0a049a0-2291-44f0-9b4e-114a07dede93-27b274fe-541f-41ae-b4ea-b75b03fcbcb6": {
			"path": "generated-edge-simstep-b0a049a0-2291-44f0-9b4e-114a07dede93-27b274fe-541f-41ae-b4ea-b75b03fcbcb6",
			"fileName": "segments.ts",
			"cellName": "[Invert Flow] Return Inverted Segments",
			"cellId": "27b274fe-541f-41ae-b4ea-b75b03fcbcb6",
			"visible": true,
			"startLine": 208,
			"endLine": 208,
			"parentPath": "src/renderer/src/segments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "b0a049a0-2291-44f0-9b4e-114a07dede93"
				}
			]
		},
		"173c03b6-39db-4d04-9025-2b021b534309": {
			"path": "173c03b6-39db-4d04-9025-2b021b534309",
			"fileName": "173c03b6-39db-4d04-9025-2b021b534309",
			"cellName": "[Combine Flow]\nIPC Message\nto Renderer",
			"cellId": "173c03b6-39db-4d04-9025-2b021b534309",
			"visible": true,
			"parentCellId": "08f574e7-9261-46ab-a2a4-e20060722bf1"
		},
		"generated-edge-simstep-cae7c2e7-2559-4035-bb9f-e9e785722f3b-173c03b6-39db-4d04-9025-2b021b534309": {
			"path": "generated-edge-simstep-cae7c2e7-2559-4035-bb9f-e9e785722f3b-173c03b6-39db-4d04-9025-2b021b534309",
			"fileName": "menu.ts",
			"cellName": "[Combine Flow] IPC Message to Renderer",
			"cellId": "173c03b6-39db-4d04-9025-2b021b534309",
			"visible": true,
			"startLine": 308,
			"endLine": 308,
			"parentPath": "src/main/menu.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "cae7c2e7-2559-4035-bb9f-e9e785722f3b"
				}
			]
		},
		"ea9caa83-779e-43b4-aa2f-9cfde7f94a28": {
			"path": "ea9caa83-779e-43b4-aa2f-9cfde7f94a28",
			"fileName": "ea9caa83-779e-43b4-aa2f-9cfde7f94a28",
			"cellName": "[Combine Flow]\nPassing Segments\nto Combination\nLogic",
			"cellId": "ea9caa83-779e-43b4-aa2f-9cfde7f94a28",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-1fb35969-f799-4f56-85e6-ae3985f834a4-ea9caa83-779e-43b4-aa2f-9cfde7f94a28": {
			"path": "generated-edge-simstep-1fb35969-f799-4f56-85e6-ae3985f834a4-ea9caa83-779e-43b4-aa2f-9cfde7f94a28",
			"fileName": "App.tsx",
			"cellName": "[Combine Flow] Passing Segments to Combination Logic",
			"cellId": "ea9caa83-779e-43b4-aa2f-9cfde7f94a28",
			"visible": true,
			"startLine": 340,
			"endLine": 340,
			"parentPath": "src/renderer/src/App.tsx",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "1fb35969-f799-4f56-85e6-ae3985f834a4"
				}
			]
		},
		"6eca0f1e-1b09-4591-8301-7de2905c0f68": {
			"path": "6eca0f1e-1b09-4591-8301-7de2905c0f68",
			"fileName": "6eca0f1e-1b09-4591-8301-7de2905c0f68",
			"cellName": "[Combine Flow]\nReturn Combined\nSegments",
			"cellId": "6eca0f1e-1b09-4591-8301-7de2905c0f68",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-fc1b792e-fc06-4e69-b764-b133c5ad7b98-6eca0f1e-1b09-4591-8301-7de2905c0f68": {
			"path": "generated-edge-simstep-fc1b792e-fc06-4e69-b764-b133c5ad7b98-6eca0f1e-1b09-4591-8301-7de2905c0f68",
			"fileName": "segments.ts",
			"cellName": "[Combine Flow] Return Combined Segments",
			"cellId": "6eca0f1e-1b09-4591-8301-7de2905c0f68",
			"visible": true,
			"startLine": 136,
			"endLine": 136,
			"parentPath": "src/renderer/src/segments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "fc1b792e-fc06-4e69-b764-b133c5ad7b98"
				}
			]
		},
		"0eb055af-faee-417c-ae68-e2b89e7ca762": {
			"path": "0eb055af-faee-417c-ae68-e2b89e7ca762",
			"fileName": "0eb055af-faee-417c-ae68-e2b89e7ca762",
			"cellName": "[Split Flow]\nEvent Bubbles\nto App\nComponent",
			"cellId": "0eb055af-faee-417c-ae68-e2b89e7ca762",
			"visible": true,
			"parentCellId": "6e32cfe4-6534-4175-993d-def5cfa859bf"
		},
		"generated-edge-simstep-7d8626e5-bedd-4a8d-9657-a8a9b6fa56a3-0eb055af-faee-417c-ae68-e2b89e7ca762": {
			"path": "generated-edge-simstep-7d8626e5-bedd-4a8d-9657-a8a9b6fa56a3-0eb055af-faee-417c-ae68-e2b89e7ca762",
			"fileName": "SegmentList.tsx",
			"cellName": "[Split Flow] Event Bubbles to App Component",
			"cellId": "0eb055af-faee-417c-ae68-e2b89e7ca762",
			"visible": true,
			"startLine": 2652,
			"endLine": 2652,
			"parentPath": "src/renderer/src/SegmentList.tsx",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "7d8626e5-bedd-4a8d-9657-a8a9b6fa56a3"
				}
			]
		},
		"bb3f0916-e310-4f36-a7df-7a1cf4ae9045": {
			"path": "bb3f0916-e310-4f36-a7df-7a1cf4ae9045",
			"fileName": "bb3f0916-e310-4f36-a7df-7a1cf4ae9045",
			"cellName": "[Split Flow]\nPreparing New\nSegment Data",
			"cellId": "bb3f0916-e310-4f36-a7df-7a1cf4ae9045",
			"visible": true,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28"
		},
		"generated-edge-simstep-e3db0f11-4e61-4aed-9539-24c297c149b0-bb3f0916-e310-4f36-a7df-7a1cf4ae9045": {
			"path": "generated-edge-simstep-e3db0f11-4e61-4aed-9539-24c297c149b0-bb3f0916-e310-4f36-a7df-7a1cf4ae9045",
			"fileName": "useSegments.ts",
			"cellName": "[Split Flow] Preparing New Segment Data",
			"cellId": "bb3f0916-e310-4f36-a7df-7a1cf4ae9045",
			"visible": true,
			"startLine": 589,
			"endLine": 599,
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "e3db0f11-4e61-4aed-9539-24c297c149b0"
				}
			]
		},
		"5208c434-02d8-46b4-a43c-057ee92df774": {
			"path": "5208c434-02d8-46b4-a43c-057ee92df774",
			"fileName": "5208c434-02d8-46b4-a43c-057ee92df774",
			"cellName": "[Split Flow]\nPassing New\nList to\nState Setter",
			"cellId": "5208c434-02d8-46b4-a43c-057ee92df774",
			"visible": true,
			"parentCellId": "8c1e43d7-fc51-4ba9-ba0a-543e07c54b28"
		},
		"generated-edge-simstep-43d1ada2-fad0-4955-a678-abca1222f245-5208c434-02d8-46b4-a43c-057ee92df774": {
			"path": "generated-edge-simstep-43d1ada2-fad0-4955-a678-abca1222f245-5208c434-02d8-46b4-a43c-057ee92df774",
			"fileName": "useSegments.ts",
			"cellName": "[Split Flow] Passing New List to State Setter",
			"cellId": "5208c434-02d8-46b4-a43c-057ee92df774",
			"visible": true,
			"startLine": 601,
			"endLine": 601,
			"parentPath": "src/renderer/src/hooks/useSegments.ts",
			"simSteps": [
				{
					"simulationKey": "Advanced Segment Manipulation on Timeline",
					"simStepId": "43d1ada2-fad0-4955-a678-abca1222f245"
				}
			]
		}
	},
	"simulations": {
		"Lossless Segment Cutting and Exporting": {
			"name": "Lossless Segment Cutting and Exporting",
			"simSteps": [
				{
					"simStepId": "845251c0-7452-4a4b-8012-c8ec97276b91",
					"diagramNodeId": "fe2d22b0-0ef4-48b7-9d4a-255979f68b67",
					"simStepLabel": "User Initiates Export",
					"simStepDescription": "The user confirms the export dialog, triggering the `handleExport` function. This function prepares for the export by gathering segment data, output filenames, and configuration settings.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1102",
						"endLine": "1114",
						"relevantVariables": [
							"handleExport",
							"segmentsToExport",
							"generateOutSegFileNames",
							"outputDir",
							"customOutDir",
							"fileFormat"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{\"segmentsToExport\": [{\"start\": 10.5, \"end\": 25.2, \"name\": \"Segment 1\"}, {\"start\": 50.1, \"end\": 65.8, \"name\": \"Segment 2\"}], \"outputDir\": \"/Users/john/Movies/\", \"fileFormat\": \"mp4\", \"outSegFileNames\": [\"video-segment-1.mp4\", \"video-segment-2.mp4\"]}"
				},
				{
					"simStepId": "20bb3bf1-3b85-4cb1-ad93-85980f847002",
					"diagramNodeId": "eb1e541d-893f-46d8-a04a-fb59997562e6",
					"simStepLabel": "Pass Segments and Config to `cutMultiple`",
					"simStepDescription": "The collected segment data and export configuration are passed as arguments to the `cutMultiple` function to begin the cutting process.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1115",
						"endLine": "1120",
						"relevantVariables": [
							"cutMultiple"
						]
					},
					"inputDataExample": "{\"outputDir\": \"/Users/john/Movies/\", \"customOutDir\": null, \"outFormat\": \"mp4\", \"fileDuration\": 120.5, \"segments\": [{\"start\": 10.5, \"end\": 25.2}, {\"start\": 50.1, \"end\": 65.8}], \"outSegFileNames\": [\"video-segment-1.mp4\", \"video-segment-2.mp4\"], \"copyFileStreams\": [{\"fileIndex\": 0, \"streams\": [0, 1]}]}",
					"outputDataExample": "{\"outputDir\": \"/Users/john/Movies/\", \"customOutDir\": null, \"outFormat\": \"mp4\", \"fileDuration\": 120.5, \"segments\": [{\"start\": 10.5, \"end\": 25.2}, {\"start\": 50.1, \"end\": 65.8}], \"outSegFileNames\": [\"video-segment-1.mp4\", \"video-segment-2.mp4\"], \"copyFileStreams\": [{\"fileIndex\": 0, \"streams\": [0, 1]}]}"
				},
				{
					"simStepId": "65ff028f-6203-4209-9b7c-e1e2ad08f2ea",
					"diagramNodeId": "de110d79-f4d1-4207-9f70-d81c9e80873c",
					"simStepLabel": "Iterate Through Segments",
					"simStepDescription": "The `cutMultiple` function receives the array of segments and uses `pMap` to iterate over them sequentially, calling the inner function `cutSegment` for each one to process it individually.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "648",
						"endLine": "648",
						"relevantVariables": [
							"pMap",
							"segments",
							"cutSegment"
						]
					},
					"inputDataExample": "{\"segments\": [{\"start\": 10.5, \"end\": 25.2}, {\"start\": 50.1, \"end\": 65.8}]}",
					"outputDataExample": "{\"path\": \"/Users/john/Movies/video-segment-1.mp4\", \"created\": true}"
				},
				{
					"simStepId": "75a49b6d-aca5-483b-ae62-9db1e8066ca6",
					"diagramNodeId": "d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f",
					"simStepLabel": "Pass Single Segment Data",
					"simStepDescription": "For each iteration in the loop, the `start` and `end` timecodes of a single segment are passed to the `cutSegment` function for processing.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "528",
						"endLine": "528",
						"relevantVariables": [
							"cutSegment"
						]
					},
					"inputDataExample": "{\"start\": 10.5, \"end\": 25.2}",
					"outputDataExample": "{\"start\": 10.5, \"end\": 25.2}"
				},
				{
					"simStepId": "094622c7-3c67-4c0c-9127-f74b44e287c9",
					"diagramNodeId": "a42e2f9e-821b-4469-92a9-270ed3c2fcaf",
					"simStepLabel": "Select Lossless Cut Operation",
					"simStepDescription": "Inside `cutSegment`, the function checks if re-encoding is needed. For a standard lossless cut, `isEncoding` is false, which directs the logic to call `losslessCutSingle` to perform the cut without re-encoding.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "541",
						"endLine": "546",
						"relevantVariables": [
							"isEncoding",
							"losslessCutSingle"
						]
					},
					"inputDataExample": "{\"desiredCutFrom\": 10.5, \"cutTo\": 25.2, \"isEncoding\": false}",
					"outputDataExample": "{\"path\": \"/Users/john/Movies/video-segment-1.mp4\", \"created\": true}"
				},
				{
					"simStepId": "bfede9c1-b355-4fe4-9743-aec91885be39",
					"diagramNodeId": "64a4e618-8662-4f28-8ac6-fd723229e316",
					"simStepLabel": "Transmit Single Cut Parameters",
					"simStepDescription": "The detailed parameters required to cut one segment—such as start time, end time, output path, and stream information—are passed to the `losslessCutSingle` function.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "542",
						"endLine": "545",
						"relevantVariables": [
							"losslessCutSingle"
						]
					},
					"inputDataExample": "{\"cutFrom\": 10.5, \"cutTo\": 25.2, \"outPath\": \"/Users/john/Movies/video-segment-1.mp4\", \"copyFileStreams\": [{\"fileIndex\": 0, \"streams\": [0, 1]}], \"keyframeCut\": true, \"outFormat\": \"mp4\"}",
					"outputDataExample": "{\"cutFrom\": 10.5, \"cutTo\": 25.2, \"outPath\": \"/Users/john/Movies/video-segment-1.mp4\", \"copyFileStreams\": [{\"fileIndex\": 0, \"streams\": [0, 1]}], \"keyframeCut\": true, \"outFormat\": \"mp4\"}"
				},
				{
					"simStepId": "94a85694-deba-4194-bbdc-a7259f092fd3",
					"diagramNodeId": "d2ff73e2-fc80-48b8-8405-0a5d1c9e406b",
					"simStepLabel": "Construct and Execute FFmpeg Command",
					"simStepDescription": "The `losslessCutSingle` function assembles an array of arguments for the FFmpeg command-line tool based on the provided parameters. This includes input file, output file, start/end times, codec instructions (`-c copy`), and metadata flags. It then executes this command via `runFfmpeg`.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "235",
						"endLine": "482",
						"relevantVariables": [
							"losslessCutSingle",
							"ffmpegArgs",
							"runFfmpeg"
						]
					},
					"inputDataExample": "{\"cutFrom\": 10.5, \"cutTo\": 25.2, \"outPath\": \"/Users/john/Movies/video-segment-1.mp4\"}",
					"outputDataExample": "{\"ffmpegArgs\": [\"-hide_banner\", \"-ss\", \"10.5\", \"-i\", \"/path/to/source/video.mov\", \"-to\", \"25.2\", \"-c\", \"copy\", \"-map\", \"0\", \"-map_metadata\", \"0\", \"/Users/john/Movies/video-segment-1.mp4\"]}"
				},
				{
					"simStepId": "e32e2f34-4a4e-4082-9085-29163c74ee3d",
					"diagramNodeId": "665b9b8d-5ebf-4595-a962-92e96bf0bb8c",
					"simStepLabel": "FFmpeg Command Transmission",
					"simStepDescription": "The fully constructed FFmpeg argument array is passed to the `runFfmpeg` function, which interfaces with the main process to execute the command in a child process.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "481",
						"endLine": "481",
						"relevantVariables": [
							"runFfmpeg",
							"ffmpegArgs"
						]
					},
					"inputDataExample": "{\"ffmpegArgs\": [\"-hide_banner\", \"-ss\", \"10.5\", \"-i\", \"/path/to/source/video.mov\", \"-to\", \"25.2\", \"-c\", \"copy\", \"-map\", \"0\", \"-map_metadata\", \"0\", \"/Users/john/Movies/video-segment-1.mp4\"]}",
					"outputDataExample": "{\"ffmpegArgs\": [\"-hide_banner\", \"-ss\", \"10.5\", \"-i\", \"/path/to/source/video.mov\", \"-to\", \"25.2\", \"-c\", \"copy\", \"-map\", \"0\", \"-map_metadata\", \"0\", \"/Users/john/Movies/video-segment-1.mp4\"]}"
				},
				{
					"simStepId": "02f4ae7d-a804-4596-a7a1-283443f846ac",
					"diagramNodeId": "300bb67a-6d77-4cd3-9752-0504b721b3f1",
					"simStepLabel": "Aggregate Export Results",
					"simStepDescription": "After all segment processing promises resolve, `pMap` returns an array of result objects, each containing the path to the newly created video file for that segment. The `cutMultiple` function then returns this array.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "648",
						"endLine": "648",
						"relevantVariables": [
							"pMap"
						]
					},
					"inputDataExample": "{\"resolvedPromises\": [{\"path\": \"/Users/john/Movies/video-segment-1.mp4\", \"created\": true}, {\"path\": \"/Users/john/Movies/video-segment-2.mp4\", \"created\": true}]}",
					"outputDataExample": "[{\"path\": \"/Users/john/Movies/video-segment-1.mp4\", \"created\": true}, {\"path\": \"/Users/john/Movies/video-segment-2.mp4\", \"created\": true}]"
				},
				{
					"simStepId": "55eeda84-7f47-44a6-b0d8-c3d460ad7f42",
					"diagramNodeId": "4b6225fd-880e-4303-a556-046cdf4f3bec",
					"simStepLabel": "Return File Paths to Caller",
					"simStepDescription": "The array of newly created file paths is returned from the `cutMultiple` function back to the `handleExport` function in `App.tsx`.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1115",
						"endLine": "1115",
						"relevantVariables": [
							"outFiles"
						]
					},
					"inputDataExample": "[{\"path\": \"/Users/john/Movies/video-segment-1.mp4\", \"created\": true}, {\"path\": \"/Users/john/Movies/video-segment-2.mp4\", \"created\": true}]",
					"outputDataExample": "[{\"path\": \"/Users/john/Movies/video-segment-1.mp4\", \"created\": true}, {\"path\": \"/Users/john/Movies/video-segment-2.mp4\", \"created\": true}]"
				},
				{
					"simStepId": "4eb0e9e5-71df-47bd-b79f-cfb6912c5dc8",
					"diagramNodeId": "3fbb97de-244f-4d2f-81da-c826f31797ad",
					"simStepLabel": "Finalize Export Process",
					"simStepDescription": "Back in `App.tsx`, the `handleExport` function receives the list of created files. It then proceeds with post-export actions, such as displaying an OS notification of success and cleaning up any temporary files.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1242",
						"endLine": "1250",
						"relevantVariables": [
							"setWorking",
							"setProgress",
							"showOsNotification",
							"cleanupFilesWithDialog"
						]
					},
					"inputDataExample": "{\"outFiles\": [{\"path\": \"/Users/john/Movies/video-segment-1.mp4\", \"created\": true}, {\"path\": \"/Users/john/Movies/video-segment-2.mp4\", \"created\": true}]}",
					"outputDataExample": "{}"
				}
			],
			"description": "<ul><li>The core feature of the application, allowing users to define multiple segments on a visual timeline by setting start and end points</li><li>The application uses FFmpeg to perform a direct data copy of the selected segments, which is extremely fast and preserves the original quality</li><li>Users can export each segment as a separate file or merge them into a single file</li><li>The core logic is handled in <code>useSegments</li><li>ts</code> for managing segment state and <code>useFfmpegOperations</li><li>ts</code> for executing the export</li></ul>",
			"simulationNodesAndEdges": {
				"fe2d22b0-0ef4-48b7-9d4a-255979f68b67": {
					"simStepIds": [
						"845251c0-7452-4a4b-8012-c8ec97276b91"
					]
				},
				"de110d79-f4d1-4207-9f70-d81c9e80873c": {
					"simStepIds": [
						"65ff028f-6203-4209-9b7c-e1e2ad08f2ea"
					]
				},
				"a42e2f9e-821b-4469-92a9-270ed3c2fcaf": {
					"simStepIds": [
						"094622c7-3c67-4c0c-9127-f74b44e287c9"
					]
				},
				"d2ff73e2-fc80-48b8-8405-0a5d1c9e406b": {
					"simStepIds": [
						"94a85694-deba-4194-bbdc-a7259f092fd3"
					]
				},
				"300bb67a-6d77-4cd3-9752-0504b721b3f1": {
					"simStepIds": [
						"02f4ae7d-a804-4596-a7a1-283443f846ac"
					]
				},
				"3fbb97de-244f-4d2f-81da-c826f31797ad": {
					"simStepIds": [
						"4eb0e9e5-71df-47bd-b79f-cfb6912c5dc8"
					]
				},
				"eb1e541d-893f-46d8-a04a-fb59997562e6": {
					"simStepIds": [
						"20bb3bf1-3b85-4cb1-ad93-85980f847002"
					]
				},
				"d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f": {
					"simStepIds": [
						"75a49b6d-aca5-483b-ae62-9db1e8066ca6"
					]
				},
				"64a4e618-8662-4f28-8ac6-fd723229e316": {
					"simStepIds": [
						"bfede9c1-b355-4fe4-9743-aec91885be39"
					]
				},
				"665b9b8d-5ebf-4595-a962-92e96bf0bb8c": {
					"simStepIds": [
						"e32e2f34-4a4e-4082-9085-29163c74ee3d"
					]
				},
				"4b6225fd-880e-4303-a556-046cdf4f3bec": {
					"simStepIds": [
						"55eeda84-7f47-44a6-b0d8-c3d460ad7f42"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "cutMultiple, useSegments, losslessCutSingle",
			"generationPrompt": "Lossless Segment Cutting and Exporting",
			"generationKeywords": "cutMultiple, useSegments, losslessCutSingle"
		},
		"Merging Multiple Files (Concatenation)": {
			"name": "Merging Multiple Files (Concatenation)",
			"simSteps": [
				{
					"simStepId": "ac922fa1-891d-4a0b-887b-3c45a5b73c3b",
					"diagramNodeId": "2d06215c-fe3e-4416-a3c7-fe10657bf467",
					"simStepLabel": "User Initiates File Concatenation",
					"simStepDescription": "The user is presented with the 'ConcatDialog' after selecting multiple files. This dialog allows them to confirm the files to be merged and configure output options before starting the operation.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/components/ConcatDialog.tsx",
						"startLine": "38",
						"endLine": "43",
						"relevantVariables": [
							"ConcatDialog",
							"onConcat"
						]
					},
					"inputDataExample": "{\"isShown\": true, \"paths\": [\"/path/to/video1.mp4\", \"/path/to/video2.mp4\"], \"exportCount\": 2}",
					"outputDataExample": "{\"paths\": [\"/path/to/video1.mp4\", \"/path/to/video2.mp4\"], \"includeAllStreams\": true, \"streams\": [], \"outFileName\": \"video1-merged.mp4\", \"fileFormat\": \"mp4\", \"clearBatchFilesAfterConcat\": true}"
				},
				{
					"simStepId": "2927425d-e2d1-4c68-a682-333f31ad6394",
					"diagramNodeId": "fbb618a0-e07c-46d7-8948-808dafdc9dc7",
					"simStepLabel": "Send Concatenation Request",
					"simStepDescription": "The configuration and file paths selected by the user in the ConcatDialog are passed to a handler function in the main App component to begin the concatenation process.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2825",
						"endLine": "2825",
						"relevantVariables": [
							"onConcat",
							"userConcatFiles"
						]
					},
					"inputDataExample": "{\"paths\": [\"/path/to/video1.mp4\", \"/path/to/video2.mp4\"], \"includeAllStreams\": true, \"streams\": [], \"outFileName\": \"video1-merged.mp4\", \"fileFormat\": \"mp4\", \"clearBatchFilesAfterConcat\": true}",
					"outputDataExample": "{\"paths\": [\"/path/to/video1.mp4\", \"/path/to/video2.mp4\"], \"includeAllStreams\": true, \"streams\": [], \"outFileName\": \"video1-merged.mp4\", \"fileFormat\": \"mp4\", \"clearBatchFilesAfterConcat\": true}"
				},
				{
					"simStepId": "863ff54c-7df3-4a46-b9a1-35635cab1400",
					"diagramNodeId": "ac7b945f-009b-48d8-b31c-1d605096bd36",
					"simStepLabel": "Orchestrate FFmpeg Operation",
					"simStepDescription": "The main `App` component receives the request and calls the `concatFiles` function from the `useFfmpegOperations` hook. It prepares the necessary parameters like output path, format, and metadata source.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "954",
						"endLine": "955",
						"relevantVariables": [
							"concatFiles",
							"paths",
							"outPath",
							"outDir",
							"outFormat"
						]
					},
					"inputDataExample": "{\"paths\": [\"/path/to/video1.mp4\", \"/path/to/video2.mp4\"], \"includeAllStreams\": true, \"streams\": [], \"outFileName\": \"video1-merged.mp4\", \"fileFormat\": \"mp4\", \"clearBatchFilesAfterConcat\": true}",
					"outputDataExample": "{\"paths\": [\"/path/to/video1.mp4\", \"/path/to/video2.mp4\"], \"outPath\": \"/path/to/output/video1-merged.mp4\", \"outDir\": \"/path/to/output\", \"outFormat\": \"mp4\", \"metadataFromPath\": \"/path/to/video1.mp4\", \"includeAllStreams\": true, \"streams\": []}"
				},
				{
					"simStepId": "83054c09-b200-4d3b-8723-d6e4c8d163a6",
					"diagramNodeId": "435dd0f4-2dae-4277-9f80-6dfe96e3dd31",
					"simStepLabel": "Pass Parameters to concatFiles Hook",
					"simStepDescription": "The prepared data for the concatenation operation is passed as arguments to the `concatFiles` function.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "954",
						"endLine": "955",
						"relevantVariables": [
							"concatFiles"
						]
					},
					"inputDataExample": "{\"paths\": [\"/path/to/video1.mp4\", \"/path/to/video2.mp4\"], \"outPath\": \"/path/to/output/video1-merged.mp4\", \"outDir\": \"/path/to/output\", \"outFormat\": \"mp4\", \"metadataFromPath\": \"/path/to/video1.mp4\", \"includeAllStreams\": true, \"streams\": []}",
					"outputDataExample": "{\"paths\": [\"/path/to/video1.mp4\", \"/path/to/video2.mp4\"], \"outPath\": \"/path/to/output/video1-merged.mp4\", \"outDir\": \"/path/to/output\", \"outFormat\": \"mp4\", \"metadataFromPath\": \"/path/to/video1.mp4\", \"includeAllStreams\": true, \"streams\": []}"
				},
				{
					"simStepId": "c1b749bd-c3f1-4a1a-917f-879fdc03fe75",
					"diagramNodeId": "98403ab6-6ec1-4bdd-b9d2-91bea01c233b",
					"simStepLabel": "Prepare FFmpeg Concat Command",
					"simStepDescription": "The `concatFiles` function in `useFfmpegOperations.ts` constructs the FFmpeg command. It generates a text-based list of files for FFmpeg's concat demuxer and assembles all the necessary command-line arguments for a lossless merge. It then calls `runFfmpegConcat` to execute the command.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "113",
						"endLine": "229",
						"relevantVariables": [
							"concatFiles",
							"ffmpegArgs",
							"concatTxt",
							"runFfmpegConcat"
						]
					},
					"inputDataExample": "{\"paths\": [\"/path/to/video1.mp4\", \"/path/to/video2.mp4\"], \"outPath\": \"/path/to/output/video1-merged.mp4\", \"outDir\": \"/path/to/output\", \"outFormat\": \"mp4\", \"metadataFromPath\": \"/path/to/video1.mp4\", \"includeAllStreams\": true, \"streams\": []}",
					"outputDataExample": "{\"ffmpegArgs\": [\"-f\", \"concat\", \"-safe\", \"0\", \"-i\", \"-\", \"-c\", \"copy\", \"-map\", \"0\", \"/path/to/output/video1-merged.mp4\"], \"concatTxt\": \"file '/path/to/video1.mp4'\\nfile '/path/to/video2.mp4'\\n\", \"totalDuration\": 360.5}"
				},
				{
					"simStepId": "260737b5-8e03-4587-993c-a3d00af7fb21",
					"diagramNodeId": "53f57e02-1e21-454a-911a-dae6b5c88f05",
					"simStepLabel": "Invoke FFmpeg Execution",
					"simStepDescription": "The generated FFmpeg arguments and the special concat text file content are passed to the `runFfmpegConcat` function, which bridges the renderer and main processes.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "225",
						"endLine": "225",
						"relevantVariables": [
							"runFfmpegConcat"
						]
					},
					"inputDataExample": "{\"ffmpegArgs\": [\"-f\", \"concat\", \"-safe\", \"0\", \"-i\", \"-\", \"-c\", \"copy\", \"-map\", \"0\", \"/path/to/output/video1-merged.mp4\"], \"concatTxt\": \"file '/path/to/video1.mp4'\\nfile '/path/to/video2.mp4'\\n\", \"totalDuration\": 360.5}",
					"outputDataExample": "{\"ffmpegArgs\": [\"-f\", \"concat\", \"-safe\", \"0\", \"-i\", \"-\", \"-c\", \"copy\", \"-map\", \"0\", \"/path/to/output/video1-merged.mp4\"], \"concatTxt\": \"file '/path/to/video1.mp4'\\nfile '/path/to/video2.mp4'\\n\", \"totalDuration\": 360.5}"
				},
				{
					"simStepId": "ffc9135c-640e-45bc-9963-f91a56c4be28",
					"diagramNodeId": "d28248f6-2c22-40b4-bc29-a0b9948ed507",
					"simStepLabel": "Renderer to Main Process Bridge",
					"simStepDescription": "In the renderer process, `runFfmpegConcat` is a proxy function obtained via Electron's remote module. Calling it triggers an Inter-Process Communication (IPC) call to the corresponding function in the main process, where the actual command can be executed safely.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/ffmpeg.ts",
						"startLine": "17",
						"endLine": "20",
						"relevantVariables": [
							"ffmpeg",
							"runFfmpegConcat",
							"window.require('@electron/remote')"
						]
					},
					"inputDataExample": "{\"ffmpegArgs\": [\"-f\", \"concat\", \"-safe\", \"0\", \"-i\", \"-\", \"-c\", \"copy\", \"-map\", \"0\", \"/path/to/output/video1-merged.mp4\"], \"concatTxt\": \"file '/path/to/video1.mp4'\\nfile '/path/to/video2.mp4'\\n\", \"totalDuration\": 360.5}",
					"outputDataExample": "{\"ffmpegArgs\": [\"-f\", \"concat\", \"-safe\", \"0\", \"-i\", \"-\", \"-c\", \"copy\", \"-map\", \"0\", \"/path/to/output/video1-merged.mp4\"], \"concatTxt\": \"file '/path/to/video1.mp4'\\nfile '/path/to/video2.mp4'\\n\", \"totalDuration\": 360.5}"
				},
				{
					"simStepId": "5433a936-c1ba-43aa-8955-51f5a0dc427d",
					"diagramNodeId": "24ae749a-dfd1-467a-b652-5223c9e46fef",
					"simStepLabel": "IPC: Execute FFmpeg Command",
					"simStepDescription": "The FFmpeg arguments and concat text are serialized and sent over an IPC channel from the renderer process to the main process for execution.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/ffmpeg.ts",
						"startLine": "17",
						"endLine": "17",
						"relevantVariables": [
							"ffmpeg"
						]
					},
					"inputDataExample": "{\"ffmpegArgs\": [\"-f\", \"concat\", \"-safe\", \"0\", \"-i\", \"-\", \"-c\", \"copy\", \"-map\", \"0\", \"/path/to/output/video1-merged.mp4\"], \"concatTxt\": \"file '/path/to/video1.mp4'\\nfile '/path/to/video2.mp4'\\n\", \"totalDuration\": 360.5}",
					"outputDataExample": "{\"ffmpegArgs\": [\"-f\", \"concat\", \"-safe\", \"0\", \"-i\", \"-\", \"-c\", \"copy\", \"-map\", \"0\", \"/path/to/output/video1-merged.mp4\"], \"concatTxt\": \"file '/path/to/video1.mp4'\\nfile '/path/to/video2.mp4'\\n\", \"totalDuration\": 360.5}"
				},
				{
					"simStepId": "a188d42d-7b37-4af8-899e-515c2b18fec1",
					"diagramNodeId": "a9e2aacd-aa48-45a3-9abc-e4155c788650",
					"simStepLabel": "Execute FFmpeg Process",
					"simStepDescription": "In the main process, `runFfmpegConcat` receives the arguments. It spawns the `ffmpeg` binary as a child process using `execa`. The `concatTxt` string, containing the list of files, is piped directly to the standard input of the FFmpeg process, which is configured to read from it (`-i -`). Progress is monitored by parsing FFmpeg's stderr output.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/ffmpeg.ts",
						"startLine": "136",
						"endLine": "148",
						"relevantVariables": [
							"runFfmpegConcat",
							"runFfmpegProcess",
							"process",
							"process.stdin"
						]
					},
					"inputDataExample": "{\"ffmpegArgs\": [\"-f\", \"concat\", \"-safe\", \"0\", \"-i\", \"-\", \"-c\", \"copy\", \"-map\", \"0\", \"/path/to/output/video1-merged.mp4\"], \"concatTxt\": \"file '/path/to/video1.mp4'\\nfile '/path/to/video2.mp4'\\n\", \"totalDuration\": 360.5}",
					"outputDataExample": "{\"stdout\": \"\", \"stderr\": \"ffmpeg version 5.1...\", \"exitCode\": 0}"
				}
			],
			"description": "<ul><li>Users can select multiple video or audio files to be joined together in sequence</li><li>This operation is lossless, provided the files share the same codec parameters (e</li><li>g</li><li>, clips from the same camera)</li><li>The UI is managed by the <code>ConcatDialog</li><li>tsx</code> component, and the backend operation is handled by the <code>concatFiles</code> function in <code>useFfmpegOperations</li><li>ts</code> which generates an FFmpeg concat command</li></ul>",
			"simulationNodesAndEdges": {
				"2d06215c-fe3e-4416-a3c7-fe10657bf467": {
					"simStepIds": [
						"ac922fa1-891d-4a0b-887b-3c45a5b73c3b"
					]
				},
				"ac7b945f-009b-48d8-b31c-1d605096bd36": {
					"simStepIds": [
						"863ff54c-7df3-4a46-b9a1-35635cab1400"
					]
				},
				"98403ab6-6ec1-4bdd-b9d2-91bea01c233b": {
					"simStepIds": [
						"c1b749bd-c3f1-4a1a-917f-879fdc03fe75"
					]
				},
				"d28248f6-2c22-40b4-bc29-a0b9948ed507": {
					"simStepIds": [
						"ffc9135c-640e-45bc-9963-f91a56c4be28"
					]
				},
				"a9e2aacd-aa48-45a3-9abc-e4155c788650": {
					"simStepIds": [
						"a188d42d-7b37-4af8-899e-515c2b18fec1"
					]
				},
				"fbb618a0-e07c-46d7-8948-808dafdc9dc7": {
					"simStepIds": [
						"2927425d-e2d1-4c68-a682-333f31ad6394"
					]
				},
				"435dd0f4-2dae-4277-9f80-6dfe96e3dd31": {
					"simStepIds": [
						"83054c09-b200-4d3b-8723-d6e4c8d163a6"
					]
				},
				"53f57e02-1e21-454a-911a-dae6b5c88f05": {
					"simStepIds": [
						"260737b5-8e03-4587-993c-a3d00af7fb21"
					]
				},
				"24ae749a-dfd1-467a-b652-5223c9e46fef": {
					"simStepIds": [
						"5433a936-c1ba-43aa-8955-51f5a0dc427d"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "concatFiles, ConcatDialog, runFfmpegConcat",
			"generationPrompt": "Merging Multiple Files (Concatenation)",
			"generationKeywords": "concatFiles, ConcatDialog, runFfmpegConcat"
		},
		"Managing Media Tracks (Audio, Video, Subtitles)": {
			"name": "Managing Media Tracks (Audio, Video, Subtitles)",
			"simSteps": [
				{
					"simStepId": "955ac900-0c55-4874-a6b0-79d5d2d837bd",
					"diagramNodeId": "278368fe-f438-43ce-b29e-2dd4620f6144",
					"simStepLabel": "Flow 1: Show Streams Selector Dialog",
					"simStepDescription": "The user action of opening the stream selector UI triggers a state update, setting `streamsSelectorShown` to true. This causes the `StreamsSelector` component, which is wrapped in a `Sheet`, to become visible.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2778",
						"endLine": "2778",
						"relevantVariables": [
							"streamsSelectorShown",
							"setStreamsSelectorShown"
						]
					},
					"inputDataExample": "{\n  \"streamsSelectorShown\": false\n}",
					"outputDataExample": "{\n  \"streamsSelectorShown\": true\n}"
				},
				{
					"simStepId": "39c8dad5-33f3-4912-9d50-738cb104ddd6",
					"diagramNodeId": "65d636c5-f1de-4017-ba01-a72fa4bfcce6",
					"simStepLabel": "Flow 1: Pass Stream Metadata to UI",
					"simStepDescription": "The main `App` component passes crucial data as props to the `StreamsSelector` component. This includes metadata for all loaded files (`allFilesMeta`) and the current state of which streams are selected for inclusion in the export.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2779",
						"endLine": "2790",
						"relevantVariables": [
							"StreamsSelector",
							"allFilesMeta",
							"mainFilePath",
							"copyFileStreams"
						]
					},
					"inputDataExample": "{\n  \"allFilesMeta\": {\n    \"/path/to/video.mp4\": {\n      \"streams\": [\n        { \"index\": 0, \"codec_type\": \"video\", \"codec_name\": \"h264\" },\n        { \"index\": 1, \"codec_type\": \"audio\", \"codec_name\": \"aac\", \"tags\": { \"language\": \"eng\" } },\n        { \"index\": 2, \"codec_type\": \"subtitle\", \"codec_name\": \"srt\", \"tags\": { \"language\": \"spa\" } }\n      ]\n    }\n  },\n  \"copyFileStreams\": [\n    { \"path\": \"/path/to/video.mp4\", \"streamIds\": [0, 1] }\n  ]\n}",
					"outputDataExample": "{\n  \"allFilesMeta\": {\n    \"/path/to/video.mp4\": {\n      \"streams\": [\n        { \"index\": 0, \"codec_type\": \"video\", \"codec_name\": \"h264\" },\n        { \"index\": 1, \"codec_type\": \"audio\", \"codec_name\": \"aac\", \"tags\": { \"language\": \"eng\" } },\n        { \"index\": 2, \"codec_type\": \"subtitle\", \"codec_name\": \"srt\", \"tags\": { \"language\": \"spa\" } }\n      ]\n    }\n  },\n  \"copyFileStreams\": [\n    { \"path\": \"/path/to/video.mp4\", \"streamIds\": [0, 1] }\n  ]\n}"
				},
				{
					"simStepId": "e33fd41f-8e45-4629-891a-96bfe74befea",
					"diagramNodeId": "89f6803e-d025-491d-a31d-ce4a63331ded",
					"simStepLabel": "Flow 1: Render Streams UI and Handle User Interaction",
					"simStepDescription": "The `StreamsSelector` component receives the props and renders an interface listing each stream from each file. Checkboxes reflect the current selection. When a user clicks a checkbox, a callback function like `toggleCopyStreamId` is invoked.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/StreamsSelector.tsx",
						"startLine": "362",
						"endLine": "371",
						"relevantVariables": [
							"StreamsSelector",
							"allFilesMeta",
							"toggleCopyStreamId",
							"setCopyStreamIdsForPath"
						]
					},
					"inputDataExample": "{\n  \"props\": {\n    \"allFilesMeta\": { \"/path/to/video.mp4\": { \"streams\": [/* ... */] } },\n    \"isCopyingStreamId\": \"function to check if a stream is selected\"\n  }\n}",
					"outputDataExample": "{\n  \"action\": \"toggle\",\n  \"path\": \"/path/to/video.mp4\",\n  \"streamIndex\": 2\n}"
				},
				{
					"simStepId": "59233149-9951-4ea3-8265-e0aad9419c63",
					"diagramNodeId": "8686cae6-d053-49ad-9fd8-de57ee5eb608",
					"simStepLabel": "Flow 1: Transmit Selection Change",
					"simStepDescription": "The user's interaction (clicking a checkbox) triggers a callback that transmits the desired change (the file path and stream index to toggle) back to the parent `App` component's state management logic.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useStreamsMeta.ts",
						"startLine": "47",
						"endLine": "51",
						"relevantVariables": [
							"setCopyStreamIdsForPath",
							"setCopyStreamIdsByFile"
						]
					},
					"inputDataExample": "{\n  \"path\": \"/path/to/video.mp4\",\n  \"streamIndexToToggle\": 2,\n  \"currentState\": {\n    \"/path/to/video.mp4\": { \"0\": true, \"1\": true }\n  }\n}",
					"outputDataExample": "{\n  \"path\": \"/path/to/video.mp4\",\n  \"streamIndexToToggle\": 2,\n  \"currentState\": {\n    \"/path/to/video.mp4\": { \"0\": true, \"1\": true }\n  }\n}"
				},
				{
					"simStepId": "45111440-dac7-4619-9756-f78f1df3cd51",
					"diagramNodeId": "cccadc33-0f5b-4dab-be58-f6bbbe92f112",
					"simStepLabel": "Flow 1: Update Stream Selection State",
					"simStepDescription": "The `setCopyStreamIdsForPath` function, part of the `useStreamsMeta` hook, processes the user's action. It updates the central `copyStreamIdsByFile` state, toggling the selection status for the specified stream.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useStreamsMeta.ts",
						"startLine": "47",
						"endLine": "51",
						"relevantVariables": [
							"setCopyStreamIdsForPath",
							"setCopyStreamIdsByFile"
						]
					},
					"inputDataExample": "{\n  \"oldState\": {\n    \"/path/to/video.mp4\": { \"0\": true, \"1\": true }\n  },\n  \"path\": \"/path/to/video.mp4\",\n  \"streamIndexToToggle\": 2\n}",
					"outputDataExample": "{\n  \"newState\": {\n    \"/path/to/video.mp4\": { \"0\": true, \"1\": true, \"2\": true }\n  }\n}"
				},
				{
					"simStepId": "e19af8ee-1182-4654-8381-19cd25d59c61",
					"diagramNodeId": "4680330c-14bb-48b3-8109-2ec8112c9523",
					"simStepLabel": "Flow 1: Pass Updated Selection to Export Logic",
					"simStepDescription": "When the user initiates an export, the newly updated stream selection state (`copyFileStreams`) is gathered along with all other export parameters and passed to the appropriate function in the `useFfmpegOperations` hook to begin processing.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1249",
						"endLine": "1249",
						"relevantVariables": [
							"onExportPress",
							"copyFileStreams",
							"allFilesMeta",
							"concatCutSegments",
							"cutMultiple"
						]
					},
					"inputDataExample": "{\n  \"copyFileStreams\": [\n    { \"path\": \"/path/to/video.mp4\", \"streamIds\": [0, 1, 2] }\n  ],\n  \"allFilesMeta\": { \"/path/to/video.mp4\": { \"streams\": [/* ... */] } },\n  \"outFormat\": \"mp4\"\n}",
					"outputDataExample": "{\n  \"copyFileStreams\": [\n    { \"path\": \"/path/to/video.mp4\", \"streamIds\": [0, 1, 2] }\n  ],\n  \"allFilesMeta\": { \"/path/to/video.mp4\": { \"streams\": [/* ... */] } },\n  \"outFormat\": \"mp4\"\n}"
				},
				{
					"simStepId": "f8e52e75-cb21-49b8-b08b-30f1528d8813",
					"diagramNodeId": "29714876-444b-4ff3-9380-8eb92263b487",
					"simStepLabel": "Flow 1: Generate FFmpeg Stream Mapping Arguments",
					"simStepDescription": "The `getMapStreamsArgs` utility function is called with the list of selected streams. It generates the corresponding `-map` and codec (`-c`) arguments for the FFmpeg command, handling necessary codec conversions (e.g., srt to mov_text for an mp4 container).",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/util/streams.ts",
						"startLine": "202",
						"endLine": "215",
						"relevantVariables": [
							"getMapStreamsArgs",
							"copyFileStreams",
							"allFilesMeta",
							"outFormat"
						]
					},
					"inputDataExample": "{\n  \"copyFileStreams\": [\n    { \"path\": \"/path/to/video.mp4\", \"streamIds\": [0, 1, 2] }\n  ],\n  \"allFilesMeta\": {\n    \"/path/to/video.mp4\": {\n      \"streams\": [\n        { \"index\": 0, \"codec_type\": \"video\", \"codec_name\": \"h264\" },\n        { \"index\": 1, \"codec_type\": \"audio\", \"codec_name\": \"aac\" },\n        { \"index\": 2, \"codec_type\": \"subtitle\", \"codec_name\": \"srt\" }\n      ]\n    }\n  },\n  \"outFormat\": \"mp4\"\n}",
					"outputDataExample": "{\n  \"ffmpeg_args\": [\"-map\", \"0:0\", \"-c:0\", \"copy\", \"-map\", \"0:1\", \"-c:1\", \"copy\", \"-map\", \"0:2\", \"-c:2\", \"mov_text\"]\n}"
				},
				{
					"simStepId": "76e62589-7a50-4e68-aa44-e60258bc8fb9",
					"diagramNodeId": "66fadc68-79f0-4536-aea5-d88ff355b207",
					"simStepLabel": "Flow 1: Return FFmpeg Arguments",
					"simStepDescription": "The generated array of FFmpeg arguments for stream mapping is returned to the calling function within the `useFfmpegOperations` hook.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "328",
						"endLine": "328",
						"relevantVariables": [
							"mapStreamsArgs",
							"getMapStreamsArgs"
						]
					},
					"inputDataExample": "{\n  \"ffmpeg_args\": [\"-map\", \"0:0\", \"-c:0\", \"copy\", \"-map\", \"0:1\", \"-c:1\", \"copy\", \"-map\", \"0:2\", \"-c:2\", \"mov_text\"]\n}",
					"outputDataExample": "{\n  \"ffmpeg_args\": [\"-map\", \"0:0\", \"-c:0\", \"copy\", \"-map\", \"0:1\", \"-c:1\", \"copy\", \"-map\", \"0:2\", \"-c:2\", \"mov_text\"]\n}"
				},
				{
					"simStepId": "af6a3da3-d0fd-4655-b7c0-2b80659eb50c",
					"diagramNodeId": "85c1e7e6-d4fb-4f2c-b0a3-d103d579f37c",
					"simStepLabel": "Flow 1: Assemble and Execute FFmpeg Command",
					"simStepDescription": "The stream mapping arguments are combined with other FFmpeg parameters (input file, output file, etc.) to form the final command. This command is then executed as a child process to produce the final output file with only the selected streams.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "321",
						"endLine": "344",
						"relevantVariables": [
							"cutMultiple",
							"mapStreamsArgs",
							"runFfmpegWithProgress"
						]
					},
					"inputDataExample": "{\n  \"base_args\": [\"-i\", \"/path/to/video.mp4\"],\n  \"stream_args\": [\"-map\", \"0:0\", \"-c:0\", \"copy\", \"-map\", \"0:1\", \"-c:1\", \"copy\", \"-map\", \"0:2\", \"-c:2\", \"mov_text\"],\n  \"output_args\": [\"/path/to/output.mp4\"]\n}",
					"outputDataExample": "{\n  \"full_command\": \"ffmpeg -i /path/to/video.mp4 -map 0:0 -c:0 copy -map 0:1 -c:1 copy -map 0:2 -c:2 mov_text /path/to/output.mp4\"\n}"
				},
				{
					"simStepId": "27c9cc5e-0f71-47ec-9662-16036a682f0e",
					"diagramNodeId": "fe33d7f0-dc9a-4170-be8d-bfb30bb090db",
					"simStepLabel": "Flow 2: User Initiates Single Stream Extraction",
					"simStepDescription": "As an alternative to exporting, the user can click an 'Extract' button for a specific stream in the `StreamsSelector` UI. This action triggers the `onExtractStreamPress` callback with the stream's index, which in turn calls the `extractStreams` operation.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2237",
						"endLine": "2245",
						"relevantVariables": [
							"onExtractStreamPress",
							"extractStreams",
							"setWorking"
						]
					},
					"inputDataExample": "{\n  \"action\": \"extract\",\n  \"streamIndex\": 2\n}",
					"outputDataExample": "{\n  \"status\": \"working\",\n  \"text\": \"Extracting track\"\n}"
				},
				{
					"simStepId": "618f93b5-e302-495a-b5a4-73b2715e8097",
					"diagramNodeId": "d369e114-6ba4-4890-a02b-049875d226a3",
					"simStepLabel": "Flow 2: Pass Stream to Extraction Logic",
					"simStepDescription": "The `onExtractStreamPress` handler in `App.tsx` calls the `extractStreams` function from the `useFfmpegOperations` hook, providing it with an array containing only the single stream object that the user selected for extraction.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2240",
						"endLine": "2240",
						"relevantVariables": [
							"extractStreams",
							"mainStreams"
						]
					},
					"inputDataExample": "{\n  \"customOutDir\": \"/path/to/output\",\n  \"streams\": [\n    { \"index\": 2, \"codec_type\": \"subtitle\", \"codec_name\": \"srt\" }\n  ]\n}",
					"outputDataExample": "{\n  \"customOutDir\": \"/path/to/output\",\n  \"streams\": [\n    { \"index\": 2, \"codec_type\": \"subtitle\", \"codec_name\": \"srt\" }\n  ]\n}"
				},
				{
					"simStepId": "b8f2de2b-803a-4c4b-b156-49db2f78fe25",
					"diagramNodeId": "363164a0-9f86-43c6-b468-3925e202f374",
					"simStepLabel": "Flow 2: Execute FFmpeg Extraction Command",
					"simStepDescription": "The `extractStreams` function receives the stream to be extracted. It constructs and executes a specific FFmpeg command designed to copy that single stream from the input file into its own separate output file.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "981",
						"endLine": "985",
						"relevantVariables": [
							"extractStreams",
							"streams",
							"runFfmpeg"
						]
					},
					"inputDataExample": "{\n  \"filePath\": \"/path/to/video.mp4\",\n  \"streams\": [\n    { \"index\": 2, \"codec_type\": \"subtitle\", \"codec_name\": \"srt\" }\n  ]\n}",
					"outputDataExample": "{\n  \"command_executed\": \"ffmpeg -i /path/to/video.mp4 -map 0:2 -c copy /path/to/output/video-track.2.srt\"\n}"
				}
			],
			"description": "<ul><li>Provides a detailed view of all video, audio, subtitle, and data tracks within a media file</li><li>Users can select which tracks to keep for the final export, effectively removing unwanted ones</li><li>It also allows including tracks from external files, such as adding a new audio track or subtitles</li><li>The primary UI is <code>StreamsSelector</li><li>tsx</code>, and the FFmpeg stream mapping logic is in <code>util/streams</li><li>ts</code> (<code>getMapStreamsArgs</code>)</li></ul>",
			"simulationNodesAndEdges": {
				"278368fe-f438-43ce-b29e-2dd4620f6144": {
					"simStepIds": [
						"955ac900-0c55-4874-a6b0-79d5d2d837bd"
					]
				},
				"89f6803e-d025-491d-a31d-ce4a63331ded": {
					"simStepIds": [
						"e33fd41f-8e45-4629-891a-96bfe74befea"
					]
				},
				"cccadc33-0f5b-4dab-be58-f6bbbe92f112": {
					"simStepIds": [
						"45111440-dac7-4619-9756-f78f1df3cd51"
					]
				},
				"29714876-444b-4ff3-9380-8eb92263b487": {
					"simStepIds": [
						"f8e52e75-cb21-49b8-b08b-30f1528d8813"
					]
				},
				"85c1e7e6-d4fb-4f2c-b0a3-d103d579f37c": {
					"simStepIds": [
						"af6a3da3-d0fd-4655-b7c0-2b80659eb50c"
					]
				},
				"fe33d7f0-dc9a-4170-be8d-bfb30bb090db": {
					"simStepIds": [
						"27c9cc5e-0f71-47ec-9662-16036a682f0e"
					]
				},
				"363164a0-9f86-43c6-b468-3925e202f374": {
					"simStepIds": [
						"b8f2de2b-803a-4c4b-b156-49db2f78fe25"
					]
				},
				"65d636c5-f1de-4017-ba01-a72fa4bfcce6": {
					"simStepIds": [
						"39c8dad5-33f3-4912-9d50-738cb104ddd6"
					]
				},
				"8686cae6-d053-49ad-9fd8-de57ee5eb608": {
					"simStepIds": [
						"59233149-9951-4ea3-8265-e0aad9419c63"
					]
				},
				"4680330c-14bb-48b3-8109-2ec8112c9523": {
					"simStepIds": [
						"e19af8ee-1182-4654-8381-19cd25d59c61"
					]
				},
				"66fadc68-79f0-4536-aea5-d88ff355b207": {
					"simStepIds": [
						"76e62589-7a50-4e68-aa44-e60258bc8fb9"
					]
				},
				"d369e114-6ba4-4890-a02b-049875d226a3": {
					"simStepIds": [
						"618f93b5-e302-495a-b5a4-73b2715e8097"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "StreamsSelector, getMapStreamsArgs, extractStreams",
			"generationPrompt": "Managing Media Tracks (Audio, Video, Subtitles)",
			"generationKeywords": "StreamsSelector, getMapStreamsArgs, extractStreams"
		},
		"Lossless Format Conversion (Remuxing)": {
			"name": "Lossless Format Conversion (Remuxing)",
			"simSteps": [
				{
					"simStepId": "f427d759-56a1-41a0-80fe-b023c1dce208",
					"diagramNodeId": "e4b79729-7cda-4e49-8549-edb007ea3edd",
					"simStepLabel": "Flow 1 - Remuxing via Export: User Selects Output Format",
					"simStepDescription": "The user opens the export dialog and interacts with the `OutputFormatSelect` component to choose a new container format for the output file, for instance, changing 'mkv' to 'mp4'. This selection is captured by the component's state.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/components/OutputFormatSelect.tsx",
						"startLine": "24",
						"endLine": "52",
						"relevantVariables": [
							"Select",
							"onOutputFormatUserChange",
							"fileFormat"
						]
					},
					"inputDataExample": "{\n  \"detectedFileFormat\": \"matroska\",\n  \"fileFormat\": \"matroska\"\n}",
					"outputDataExample": "{\n  \"selectedFormat\": \"mp4\"\n}"
				},
				{
					"simStepId": "63df2f35-2328-48d0-bac2-e5c7fd10cff7",
					"diagramNodeId": "9ea28bb1-20d6-444c-b3fc-fc002e010695",
					"simStepLabel": "Flow 1 - Remuxing via Export: Transmit New Format Selection",
					"simStepDescription": "The `onChange` event from the Select dropdown triggers the `onOutputFormatUserChange` callback, passing the new format string ('mp4') up to the parent `App` component to be stored in its state for the upcoming export operation.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/components/OutputFormatSelect.tsx",
						"startLine": "48",
						"endLine": "48",
						"relevantVariables": [
							"onOutputFormatUserChange"
						]
					},
					"inputDataExample": "{\n  \"format\": \"mp4\"\n}",
					"outputDataExample": "{\n  \"format\": \"mp4\"\n}"
				},
				{
					"simStepId": "9ddf9512-4cd7-4624-a73e-42c7226a4b2a",
					"diagramNodeId": "87dcacf4-cd17-41d5-979f-951f6de2df0d",
					"simStepLabel": "Flow 1 - Remuxing via Export: Prepare FFmpeg Command",
					"simStepDescription": "When the user initiates the export, the `cutMultiple` function from the `useFfmpegOperations` hook is invoked. Its internal helper `cutSegment` assembles the FFmpeg command arguments. Because no re-encoding is specified, it sets stream copy flags (`-c copy`) and uses the selected format for the output format flag (`-f mp4`), defining a lossless remux operation.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "527",
						"endLine": "561",
						"relevantVariables": [
							"cutSegment",
							"isEncoding",
							"losslessCutSingle",
							"outFormat"
						]
					},
					"inputDataExample": "{\n  \"filePath\": \"/path/to/video.mkv\",\n  \"outFormat\": \"mp4\",\n  \"segments\": [\n    {\n      \"start\": 0,\n      \"end\": 120\n    }\n  ],\n  \"isEncoding\": false\n}",
					"outputDataExample": "{\n  \"ffmpegArgs\": [\n    \"-i\",\n    \"/path/to/video.mkv\",\n    \"-ss\",\n    \"0\",\n    \"-to\",\n    \"120\",\n    \"-c\",\n    \"copy\",\n    \"-map\",\n    \"0\",\n    \"-f\",\n    \"mp4\",\n    \"/path/to/output.mp4\"\n  ]\n}"
				},
				{
					"simStepId": "5d2b4804-1a23-4478-be35-3b603073c0a0",
					"diagramNodeId": "afd1e437-6b9c-426f-9c83-b9b161394bfb",
					"simStepLabel": "Flow 1 - Remuxing via Export: Execute FFmpeg Process",
					"simStepDescription": "The generated FFmpeg command array is passed to a runner function which spawns the FFmpeg binary as a child process to perform the actual file operation.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "550",
						"endLine": "550",
						"relevantVariables": [
							"losslessCutSingle"
						]
					},
					"inputDataExample": "{\n  \"ffmpegArgs\": [\n    \"-i\",\n    \"/path/to/video.mkv\",\n    \"-ss\",\n    \"0\",\n    \"-to\",\n    \"120\",\n    \"-c\",\n    \"copy\",\n    \"-map\",\n    \"0\",\n    \"-f\",\n    \"mp4\",\n    \"/path/to/output.mp4\"\n  ]\n}",
					"outputDataExample": "{\n  \"ffmpegArgs\": [\n    \"-i\",\n    \"/path/to/video.mkv\",\n    \"-ss\",\n    \"0\",\n    \"-to\",\n    \"120\",\n    \"-c\",\n    \"copy\",\n    \"-map\",\n    \"0\",\n    \"-f\",\n    \"mp4\",\n    \"/path/to/output.mp4\"\n  ]\n}"
				},
				{
					"simStepId": "031e71fd-9b3c-497f-aadd-c28741dfc46c",
					"diagramNodeId": "d541368c-3351-4ecf-b558-521e7a2da2e4",
					"simStepLabel": "Flow 1 - Remuxing via Export: FFmpeg Writes New File",
					"simStepDescription": "The FFmpeg process executes, reading the source file, copying the audio/video streams without re-encoding, and writing them into the new container format (e.g., MP4) on the file system. The operation is very fast as no data is re-encoded.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "527",
						"endLine": "561",
						"relevantVariables": [
							"finalOutPath"
						]
					},
					"inputDataExample": "{\n  \"inputFile\": \"/path/to/video.mkv\"\n}",
					"outputDataExample": "{\n  \"outputFile\": \"/path/to/output.mp4\",\n  \"status\": \"success\"\n}"
				},
				{
					"simStepId": "8bf66a0d-a5d6-4d8f-90d9-8d31cb11506c",
					"diagramNodeId": "0ffa312b-b42c-4731-9198-454bb47379ad",
					"simStepLabel": "Flow 2 - Fix Duration: User Initiates Action",
					"simStepDescription": "The user triggers the 'Fix incorrect duration' action, either by selecting it from the 'File' menu or by using its assigned keyboard shortcut.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "198",
						"endLine": "202",
						"relevantVariables": [
							"label: esc(t('Fix incorrect duration'))",
							"mainWindow.webContents.send"
						]
					},
					"inputDataExample": "{\n  \"userAction\": \"clickMenu\"\n}",
					"outputDataExample": "{\n  \"channel\": \"fixInvalidDuration\",\n  \"payload\": null\n}"
				},
				{
					"simStepId": "0d57c4e8-0661-4bc3-b44b-4c9254d9cf2a",
					"diagramNodeId": "91584e67-3532-45b7-8a12-113fbe2220c9",
					"simStepLabel": "Flow 2 - Fix Duration: IPC Message to Renderer",
					"simStepDescription": "The main process sends an IPC message named `fixInvalidDuration` to the renderer process (the main application window) to invoke the corresponding logic.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "201",
						"endLine": "201",
						"relevantVariables": [
							"mainWindow.webContents.send('fixInvalidDuration')"
						]
					},
					"inputDataExample": "{\n  \"channel\": \"fixInvalidDuration\",\n  \"payload\": null\n}",
					"outputDataExample": "{\n  \"channel\": \"fixInvalidDuration\",\n  \"payload\": null\n}"
				},
				{
					"simStepId": "aee3ba2d-a5a4-4722-bffa-117747a9baa2",
					"diagramNodeId": "a4014582-24ef-42f2-b4a7-547fe51eee4f",
					"simStepLabel": "Flow 2 - Fix Duration: Renderer Calls Hook",
					"simStepDescription": "The `App` component in the renderer process listens for the `fixInvalidDuration` event. It then calls the `tryFixInvalidDuration` function, which updates the UI to a 'working' state and invokes the `fixInvalidDuration` function from the `useFfmpegOperations` hook.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1727",
						"endLine": "1736",
						"relevantVariables": [
							"tryFixInvalidDuration",
							"setWorking",
							"fixInvalidDuration"
						]
					},
					"inputDataExample": "{\n  \"fileFormat\": \"webm\",\n  \"customOutDir\": \"/Users/john/Videos/output\"\n}",
					"outputDataExample": "{\n  \"fileFormat\": \"webm\",\n  \"customOutDir\": \"/Users/john/Videos/output\",\n  \"onProgress\": \"<function>\"\n}"
				},
				{
					"simStepId": "ae4b4a67-e1c8-436f-98c6-929fcfdd8b2e",
					"diagramNodeId": "9326d5a0-398d-4452-a0b5-33161bc10fd8",
					"simStepLabel": "Flow 2 - Fix Duration: Data Flow to FFmpeg Operation",
					"simStepDescription": "The file format and output directory information are passed as arguments from the `App` component to the `fixInvalidDuration` function within the `useFfmpegOperations` hook.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1731",
						"endLine": "1731",
						"relevantVariables": [
							"fixInvalidDuration"
						]
					},
					"inputDataExample": "{\n  \"fileFormat\": \"webm\",\n  \"customOutDir\": \"/Users/john/Videos/output\"\n}",
					"outputDataExample": "{\n  \"fileFormat\": \"webm\",\n  \"customOutDir\": \"/Users/john/Videos/output\"\n}"
				},
				{
					"simStepId": "6b85e666-b0ef-41bb-8508-7e05c2717090",
					"diagramNodeId": "bd46cc28-1881-4d51-88b4-a9226d123c19",
					"simStepLabel": "Flow 2 - Fix Duration: Execute FFmpeg to Remux",
					"simStepDescription": "The `fixInvalidDuration` function builds and executes an FFmpeg command. This command losslessly copies all codecs (`-c copy`) into a new file of the same container format. This process forces FFmpeg to rewrite the file's metadata, which often corrects inaccurate duration information present in the original file.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "822",
						"endLine": "828",
						"relevantVariables": [
							"fixInvalidDuration",
							"fileFormat",
							"customOutDir"
						]
					},
					"inputDataExample": "{\n  \"fileFormat\": \"webm\",\n  \"filePath\": \"/Users/john/Videos/input.webm\"\n}",
					"outputDataExample": "{\n  \"ffmpegArgs\": [\n    \"-i\",\n    \"/Users/john/Videos/input.webm\",\n    \"-c\",\n    \"copy\",\n    \"/Users/john/Videos/output/input-fixed.webm\"\n  ]\n}"
				},
				{
					"simStepId": "de08474e-5547-496e-bfde-ba84aceff85a",
					"diagramNodeId": "7d94b105-bb7f-4a7c-a656-0827e985c10a",
					"simStepLabel": "Flow 2 - Fix Duration: Return Corrected File Path",
					"simStepDescription": "After the FFmpeg process successfully creates the new file with the fixed duration, the path to this new file is returned asynchronously to the `App` component.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1731",
						"endLine": "1734",
						"relevantVariables": [
							"path",
							"loadMedia"
						]
					},
					"inputDataExample": "{\n  \"newFilePath\": \"/Users/john/Videos/output/input-fixed.webm\"\n}",
					"outputDataExample": "{\n  \"newFilePath\": \"/Users/john/Videos/output/input-fixed.webm\"\n}"
				},
				{
					"simStepId": "213b4de5-e0db-45e8-8800-5a6bd805b2d7",
					"diagramNodeId": "03273e09-5637-4dd1-918a-91542bcb2eec",
					"simStepLabel": "Flow 2 - Fix Duration: App Loads New Media",
					"simStepDescription": "The `App` component calls `loadMedia` with the path of the newly generated file, replacing the original problematic file in the player with the corrected version.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1734",
						"endLine": "1734",
						"relevantVariables": [
							"loadMedia"
						]
					},
					"inputDataExample": "{\n  \"filePath\": \"/Users/john/Videos/output/input-fixed.webm\"\n}",
					"outputDataExample": "{\n  \"status\": \"media_loaded\",\n  \"currentFile\": \"/Users/john/Videos/output/input-fixed.webm\"\n}"
				}
			],
			"description": "<ul><li>Quickly changes a file's container format (e</li><li>g</li><li>, from MKV to MP4) for better compatibility with different devices and software</li><li>The operation is lossless as it only repackages the existing video and audio streams without altering them</li><li>The user selects the output format in the export dialog, controlled by <code>OutputFormatSelect</li><li>tsx</code>, and the <code>-f</code> format flag is passed to FFmpeg during export</li></ul>",
			"simulationNodesAndEdges": {
				"e4b79729-7cda-4e49-8549-edb007ea3edd": {
					"simStepIds": [
						"f427d759-56a1-41a0-80fe-b023c1dce208"
					]
				},
				"87dcacf4-cd17-41d5-979f-951f6de2df0d": {
					"simStepIds": [
						"9ddf9512-4cd7-4624-a73e-42c7226a4b2a"
					]
				},
				"d541368c-3351-4ecf-b558-521e7a2da2e4": {
					"simStepIds": [
						"031e71fd-9b3c-497f-aadd-c28741dfc46c"
					]
				},
				"0ffa312b-b42c-4731-9198-454bb47379ad": {
					"simStepIds": [
						"8bf66a0d-a5d6-4d8f-90d9-8d31cb11506c"
					]
				},
				"a4014582-24ef-42f2-b4a7-547fe51eee4f": {
					"simStepIds": [
						"aee3ba2d-a5a4-4722-bffa-117747a9baa2"
					]
				},
				"bd46cc28-1881-4d51-88b4-a9226d123c19": {
					"simStepIds": [
						"6b85e666-b0ef-41bb-8508-7e05c2717090"
					]
				},
				"03273e09-5637-4dd1-918a-91542bcb2eec": {
					"simStepIds": [
						"213b4de5-e0db-45e8-8800-5a6bd805b2d7"
					]
				},
				"9ea28bb1-20d6-444c-b3fc-fc002e010695": {
					"simStepIds": [
						"63df2f35-2328-48d0-bac2-e5c7fd10cff7"
					]
				},
				"afd1e437-6b9c-426f-9c83-b9b161394bfb": {
					"simStepIds": [
						"5d2b4804-1a23-4478-be35-3b603073c0a0"
					]
				},
				"91584e67-3532-45b7-8a12-113fbe2220c9": {
					"simStepIds": [
						"0d57c4e8-0661-4bc3-b44b-4c9254d9cf2a"
					]
				},
				"9326d5a0-398d-4452-a0b5-33161bc10fd8": {
					"simStepIds": [
						"ae4b4a67-e1c8-436f-98c6-929fcfdd8b2e"
					]
				},
				"7d94b105-bb7f-4a7c-a656-0827e985c10a": {
					"simStepIds": [
						"de08474e-5547-496e-bfde-ba84aceff85a"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "OutputFormatSelect, outFormats, fixInvalidDuration",
			"generationPrompt": "Lossless Format Conversion (Remuxing)",
			"generationKeywords": "OutputFormatSelect, outFormats, fixInvalidDuration"
		},
		"Smart Cutting for Precise Edits": {
			"name": "Smart Cutting for Precise Edits",
			"simSteps": [
				{
					"simStepId": "41d0cbd1-99b2-4b9a-b291-0dbe5a2f88e9",
					"diagramNodeId": "a082670c-4826-432f-82ab-22c57fcac9da",
					"simStepLabel": "Enable Smart Cut",
					"simStepDescription": "In the export confirmation dialog, the user enables the 'Smart cut' option. This UI component displays a warning that the feature is experimental.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/components/ExportConfirm.tsx",
						"startLine": "541",
						"endLine": "543",
						"relevantVariables": [
							"Switch",
							"enableSmartCut",
							"setEnableSmartCut"
						]
					},
					"inputDataExample": "{\"enableSmartCut\": false}",
					"outputDataExample": "{\"enableSmartCut\": true}"
				},
				{
					"simStepId": "41492037-e0b6-4220-ad5c-23eba6cf1689",
					"diagramNodeId": "a24fc8c3-5674-47a5-9c53-0609c9e8d115",
					"simStepLabel": "Trigger Export with Smart Cut",
					"simStepDescription": "The user confirms the export, triggering the cutting process. The 'enableSmartCut' setting, along with other export parameters, is passed to the ffmpeg operations handler.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/components/ExportConfirm.tsx",
						"startLine": "127",
						"endLine": "127",
						"relevantVariables": [
							"onExportConfirm"
						]
					},
					"inputDataExample": "{\"segmentsToExport\": [{\"start\": 10.5, \"end\": 25.0}], \"enableSmartCut\": true}",
					"outputDataExample": "{\"segmentsToExport\": [{\"start\": 10.5, \"end\": 25.0}], \"enableSmartCut\": true}"
				},
				{
					"simStepId": "3d80835f-159e-412d-9da6-3166ad9782ab",
					"diagramNodeId": "ba14524f-0627-4818-b255-c0f39aba0926",
					"simStepLabel": "Check if Smart Cut is Needed",
					"simStepDescription": "For a given segment, the 'useFfmpegOperations' hook calls the 'needsSmartCut' utility to determine if the desired cut point falls on a keyframe. If it doesn't, a smart cut is required.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "593",
						"endLine": "594",
						"relevantVariables": [
							"needsSmartCut",
							"filePath",
							"desiredCutFrom",
							"videoStream"
						]
					},
					"inputDataExample": "{\"path\": \"/Users/john/Movies/drone_footage.mp4\", \"desiredCutFrom\": 10.5, \"videoStream\": {\"index\": 0, \"codec_type\": \"video\"}}",
					"outputDataExample": "{\"losslessCutFrom\": 10.01, \"segmentNeedsSmartCut\": true}"
				},
				{
					"simStepId": "e2eead9e-be36-456f-8960-c5e28b374275",
					"diagramNodeId": "f778dfab-f74b-4339-a019-6119ea0f2101",
					"simStepLabel": "Pass Parameters to Keyframe Checker",
					"simStepDescription": "The file path, desired cut time, and video stream index are passed into the 'needsSmartCut' function for analysis.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "593",
						"endLine": "593",
						"relevantVariables": [
							"needsSmartCut"
						]
					},
					"inputDataExample": "{\"path\": \"/Users/john/Movies/drone_footage.mp4\", \"desiredCutFrom\": 10.5, \"videoStream\": {\"index\": 0}}",
					"outputDataExample": "{\"path\": \"/Users/john/Movies/drone_footage.mp4\", \"desiredCutFrom\": 10.5, \"videoStream\": {\"index\": 0}}"
				},
				{
					"simStepId": "98f7863b-55ac-4cc4-8e10-10ed2b48680c",
					"diagramNodeId": "9d3ced96-2c64-4920-926a-e111aeab43d9",
					"simStepLabel": "Analyze Keyframes",
					"simStepDescription": "The 'needsSmartCut' function reads keyframe data around the desired cut time. It determines that the cut is not on a keyframe and identifies the timestamp of the preceding keyframe, which will be the starting point for the lossless copy.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/smartcut.ts",
						"startLine": "9",
						"endLine": "15",
						"relevantVariables": [
							"needsSmartCut",
							"readKeyframesAroundTime",
							"findKeyframeAtExactTime"
						]
					},
					"inputDataExample": "{\"filePath\": \"/Users/john/Movies/drone_footage.mp4\", \"streamIndex\": 0, \"aroundTime\": 10.5, \"window\": 5}",
					"outputDataExample": "{\"losslessCutFrom\": 10.01, \"segmentNeedsSmartCut\": true}"
				},
				{
					"simStepId": "54538d16-d54a-4d1e-a451-ed10157f65ca",
					"diagramNodeId": "1c1f3377-03b7-4195-bf0d-923e6cc7546d",
					"simStepLabel": "Return Smart Cut Decision",
					"simStepDescription": "The 'needsSmartCut' function returns an object confirming that a smart cut is needed and provides the calculated start time for the lossless portion of the cut.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "593",
						"endLine": "593",
						"relevantVariables": [
							"losslessCutFrom",
							"segmentNeedsSmartCut"
						]
					},
					"inputDataExample": "{\"losslessCutFrom\": 10.01, \"segmentNeedsSmartCut\": true}",
					"outputDataExample": "{\"losslessCutFrom\": 10.01, \"segmentNeedsSmartCut\": true}"
				},
				{
					"simStepId": "03207e44-e3f8-4bb5-bfbc-f4d8566c5ae9",
					"diagramNodeId": "5f631d25-f39b-42db-aadb-5a3ae1f3d35a",
					"simStepLabel": "Re-encode the 'Smart' Part",
					"simStepDescription": "The system calls 'cutEncodeSmartPartWrapper' to handle the first part of the operation. This function re-encodes the small portion of the video from the user's desired start time to the next keyframe, ensuring a precise cut.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "635",
						"endLine": "635",
						"relevantVariables": [
							"cutEncodeSmartPartWrapper",
							"desiredCutFrom",
							"encodeCutToSafe",
							"smartCutEncodedPartOutPath"
						]
					},
					"inputDataExample": "{\"cutFrom\": 10.5, \"cutTo\": 10.0, \"outPath\": \"/tmp/smartcut-segment-encode-0.mp4\"}",
					"outputDataExample": "{\"status\": \"success\", \"outputPath\": \"/tmp/smartcut-segment-encode-0.mp4\"}"
				},
				{
					"simStepId": "ecc2789d-1fa8-42a9-a05e-e214e4f739c9",
					"diagramNodeId": "684f87e0-d7aa-4e1f-9125-f53a18bfc9e9",
					"simStepLabel": "Save Re-encoded Part to Temp File",
					"simStepDescription": "The small, precisely cut, re-encoded video segment is saved to a temporary file on the disk.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "420",
						"endLine": "425",
						"relevantVariables": [
							"cutEncodeSmartPart",
							"outPath"
						]
					},
					"inputDataExample": "{\"fileData\": \"<binary video data>\", \"path\": \"/tmp/smartcut-segment-encode-0.mp4\"}",
					"outputDataExample": "{\"fileData\": \"<binary video data>\", \"path\": \"/tmp/smartcut-segment-encode-0.mp4\"}"
				},
				{
					"simStepId": "fb1e959e-770f-42ea-9fb7-87ce48613ccb",
					"diagramNodeId": "793e945f-70c8-4583-8a69-9defa4fd895e",
					"simStepLabel": "Losslessly Cut the Remainder",
					"simStepDescription": "Next, the system calls 'losslessCutSingle' to losslessly copy the rest of the video segment. This operation starts from the keyframe identified earlier ('losslessCutFrom') and goes to the end of the segment.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "616",
						"endLine": "620",
						"relevantVariables": [
							"losslessCutSingle",
							"losslessCutFrom",
							"cutTo",
							"losslessPartOutPath"
						]
					},
					"inputDataExample": "{\"cutFrom\": 10.01, \"cutTo\": 25.0, \"outPath\": \"/tmp/smartcut-segment-copy-0.mp4\", \"keyframeCut\": true}",
					"outputDataExample": "{\"status\": \"success\", \"outputPath\": \"/tmp/smartcut-segment-copy-0.mp4\"}"
				},
				{
					"simStepId": "b9fe3c66-2db3-4c7e-a78a-27e9f79e4ac1",
					"diagramNodeId": "bf477e73-2f9a-4ce1-bb76-89c70b63776a",
					"simStepLabel": "Save Lossless Part to Temp File",
					"simStepDescription": "The large, losslessly cut video segment is saved to a second temporary file on the disk.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "612",
						"endLine": "614",
						"relevantVariables": [
							"losslessPartOutPath"
						]
					},
					"inputDataExample": "{\"fileData\": \"<binary video data>\", \"path\": \"/tmp/smartcut-segment-copy-0.mp4\"}",
					"outputDataExample": "{\"fileData\": \"<binary video data>\", \"path\": \"/tmp/smartcut-segment-copy-0.mp4\"}"
				},
				{
					"simStepId": "426751d7-e093-4f4f-8fae-20213883b58f",
					"diagramNodeId": "eaf7e7ea-1f08-43db-be35-fe5883680fb0",
					"simStepLabel": "Concatenate Video Parts",
					"simStepDescription": "With both the re-encoded 'smart' part and the lossless part saved as temporary files, the 'concatFiles' function is called to merge them into a single, final video file.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "639",
						"endLine": "639",
						"relevantVariables": [
							"concatFiles",
							"smartCutSegmentsToConcat",
							"finalOutPath"
						]
					},
					"inputDataExample": "{\"paths\": [\"/tmp/smartcut-segment-encode-0.mp4\", \"/tmp/smartcut-segment-copy-0.mp4\"], \"outPath\": \"/Users/john/Movies/exports/drone_footage-cut.mp4\"}",
					"outputDataExample": "{\"status\": \"success\", \"outputPath\": \"/Users/john/Movies/exports/drone_footage-cut.mp4\"}"
				},
				{
					"simStepId": "a0f54978-a468-420b-9339-55d6c89ffbb3",
					"diagramNodeId": "0f401530-8b31-439f-8d86-78c3fc2c613a",
					"simStepLabel": "Save Final Merged File",
					"simStepDescription": "The final, precisely edited video file is written to the user's specified output directory.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "639",
						"endLine": "639",
						"relevantVariables": [
							"finalOutPath"
						]
					},
					"inputDataExample": "{\"fileData\": \"<binary video data>\", \"path\": \"/Users/john/Movies/exports/drone_footage-cut.mp4\"}",
					"outputDataExample": "{\"fileData\": \"<binary video data>\", \"path\": \"/Users/john/Movies/exports/drone_footage-cut.mp4\"}"
				},
				{
					"simStepId": "c629b7a3-c9e0-4527-aa02-078be0b06664",
					"diagramNodeId": "9e5a8f61-0a9f-438a-8a19-4f5911ee938a",
					"simStepLabel": "Clean Up Temporary Files",
					"simStepDescription": "After the final file is successfully created, a 'finally' block ensures that the two temporary video parts (the re-encoded part and the lossless part) are deleted from the disk.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "641",
						"endLine": "643",
						"relevantVariables": [
							"tryDeleteFiles",
							"smartCutSegmentsToConcat"
						]
					},
					"inputDataExample": "{\"filesToDelete\": [\"/tmp/smartcut-segment-encode-0.mp4\", \"/tmp/smartcut-segment-copy-0.mp4\"]}",
					"outputDataExample": "{\"status\": \"deleted\"}"
				}
			],
			"description": "<ul><li>Overcomes the limitation of purely lossless cutting, which can only happen at keyframes</li><li>When a cut point is not on a keyframe, 'Smart Cut' re-encodes only the small Group of Pictures (GOP) around the cut point</li><li>The rest of the video is still copied losslessly, combining precision with speed and quality preservation</li><li>The logic is implemented in <code>src/renderer/src/smartcut</li><li>ts</code></li></ul>",
			"simulationNodesAndEdges": {
				"a082670c-4826-432f-82ab-22c57fcac9da": {
					"simStepIds": [
						"41d0cbd1-99b2-4b9a-b291-0dbe5a2f88e9"
					]
				},
				"ba14524f-0627-4818-b255-c0f39aba0926": {
					"simStepIds": [
						"3d80835f-159e-412d-9da6-3166ad9782ab"
					]
				},
				"9d3ced96-2c64-4920-926a-e111aeab43d9": {
					"simStepIds": [
						"98f7863b-55ac-4cc4-8e10-10ed2b48680c"
					]
				},
				"5f631d25-f39b-42db-aadb-5a3ae1f3d35a": {
					"simStepIds": [
						"03207e44-e3f8-4bb5-bfbc-f4d8566c5ae9"
					]
				},
				"793e945f-70c8-4583-8a69-9defa4fd895e": {
					"simStepIds": [
						"fb1e959e-770f-42ea-9fb7-87ce48613ccb"
					]
				},
				"eaf7e7ea-1f08-43db-be35-fe5883680fb0": {
					"simStepIds": [
						"426751d7-e093-4f4f-8fae-20213883b58f"
					]
				},
				"9e5a8f61-0a9f-438a-8a19-4f5911ee938a": {
					"simStepIds": [
						"c629b7a3-c9e0-4527-aa02-078be0b06664"
					]
				},
				"a24fc8c3-5674-47a5-9c53-0609c9e8d115": {
					"simStepIds": [
						"41492037-e0b6-4220-ad5c-23eba6cf1689"
					]
				},
				"f778dfab-f74b-4339-a019-6119ea0f2101": {
					"simStepIds": [
						"e2eead9e-be36-456f-8960-c5e28b374275"
					]
				},
				"1c1f3377-03b7-4195-bf0d-923e6cc7546d": {
					"simStepIds": [
						"54538d16-d54a-4d1e-a451-ed10157f65ca"
					]
				},
				"684f87e0-d7aa-4e1f-9125-f53a18bfc9e9": {
					"simStepIds": [
						"ecc2789d-1fa8-42a9-a05e-e214e4f739c9"
					]
				},
				"bf477e73-2f9a-4ce1-bb76-89c70b63776a": {
					"simStepIds": [
						"b9fe3c66-2db3-4c7e-a78a-27e9f79e4ac1"
					]
				},
				"0f401530-8b31-439f-8d86-78c3fc2c613a": {
					"simStepIds": [
						"a0f54978-a468-420b-9339-55d6c89ffbb3"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "smartcut, needsSmartCut, cutEncodeSmartPart",
			"generationPrompt": "Smart Cutting for Precise Edits",
			"generationKeywords": "smartcut, needsSmartCut, cutEncodeSmartPart"
		},
		"Automated Scene Detection": {
			"name": "Automated Scene Detection",
			"simSteps": [
				{
					"simStepId": "40371c98-e32f-4c44-88de-65a268b0365d",
					"diagramNodeId": "be0399f3-aafe-458a-91c0-3cd8256e9ab8",
					"simStepLabel": "User Action: Select Scene Detection",
					"simStepDescription": "The user clicks on the \"Tools\" menu in the application's top menu bar and selects one of the automated detection options: \"Detect black scenes\", \"Detect silent scenes\", or \"Detect scene changes\". This action initiates the analysis of the video file.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "408",
						"endLine": "411",
						"relevantVariables": [
							"label: esc(t('Detect black scenes'))",
							"mainWindow.webContents.send('detectBlackScenes')"
						]
					},
					"inputDataExample": "{\"event\": \"click\", \"target\": \"Tools > Detect black scenes\"}",
					"outputDataExample": "{\"ipcMessage\": \"detectBlackScenes\"}"
				},
				{
					"simStepId": "86d61117-e9ba-456d-ba91-c15faeac6329",
					"diagramNodeId": "bc63267c-2d3e-4527-8c13-366857538486",
					"simStepLabel": "IPC: Main -> Renderer",
					"simStepDescription": "The click event handler in the main process's menu sends an IPC message, such as 'detectBlackScenes', to the renderer process to trigger the corresponding function.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "410",
						"endLine": "410",
						"relevantVariables": [
							"mainWindow.webContents.send('detectBlackScenes')"
						]
					},
					"inputDataExample": "{\"channel\": \"detectBlackScenes\", \"payload\": null}",
					"outputDataExample": "{\"channel\": \"detectBlackScenes\", \"payload\": null}"
				},
				{
					"simStepId": "ed52fb91-1af8-488d-aadf-191b5bd500b2",
					"diagramNodeId": "cb2d5282-649d-4169-9459-bd5722c494b2",
					"simStepLabel": "Renderer: Event Listener",
					"simStepDescription": "The renderer process listens for the IPC message. The action is mapped (e.g., via keyboard shortcut definitions which also handle menu events) to the corresponding function from the `useSegments` hook. For instance, the 'detectBlackScenes' event calls the `detectBlackScenes` function.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2150",
						"endLine": "2152",
						"relevantVariables": [
							"detectBlackScenes"
						]
					},
					"inputDataExample": "{\"ipcMessage\": \"detectBlackScenes\"}",
					"outputDataExample": "{\"functionCall\": \"detectBlackScenes()\"}"
				},
				{
					"simStepId": "595957a2-d81e-4772-b5d3-66a01a313b07",
					"diagramNodeId": "0b975994-c566-4ec8-9b77-c4fc01fc0778",
					"simStepLabel": "Function Call: `detectBlackScenes`",
					"simStepDescription": "The event handler in `App.tsx` calls the `detectBlackScenes` function, which is provided by the `useSegments` hook. This function encapsulates the logic for the detection process.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "366",
						"endLine": "366",
						"relevantVariables": [
							"detectBlackScenes",
							"useSegments"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{}"
				},
				{
					"simStepId": "15be662c-7685-488b-a47c-fced395616dd",
					"diagramNodeId": "37245537-83e0-4424-8828-38ed04ce7af6",
					"simStepLabel": "Parameter Input Dialog",
					"simStepDescription": "The `detectBlackScenes` function in the `useSegments` hook is executed. It first opens a dialog window using `showParametersDialog` to let the user configure parameters for the FFmpeg filter (e.g., `blackdetect`), such as minimum duration and black pixel threshold.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "212",
						"endLine": "213",
						"relevantVariables": [
							"showParametersDialog",
							"getFfmpegParameters"
						]
					},
					"inputDataExample": "{\"dialogType\": \"blackdetect\", \"title\": \"Enter parameters\"}",
					"outputDataExample": "{\"parameters\": {\"black_min_duration\": \"2.0\", \"picture_black_ratio_th\": \"0.98\", \"pixel_black_th\": \"0.10\", \"mode\": \"1\"}}"
				},
				{
					"simStepId": "b867447b-34e3-45c9-b64d-5a0270e68156",
					"diagramNodeId": "8fb0eef8-b010-4d5b-8a97-307002463373",
					"simStepLabel": "Data Flow: Parameters to FFmpeg wrapper",
					"simStepDescription": "After the user confirms the parameters, the `detectBlackScenes` function calls the main process's `blackDetect` FFmpeg wrapper via Electron's remote module, passing the file path, stream index, and filter options.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "218",
						"endLine": "218",
						"relevantVariables": [
							"blackDetect",
							"filePath",
							"activeVideoStreamIndex",
							"filterOptions",
							"onSegmentDetected"
						]
					},
					"inputDataExample": "{\"filePath\": \"/Users/john/Movies/my_video.mp4\", \"streamId\": 0, \"filterOptions\": {\"black_min_duration\": \"2.0\", \"picture_black_ratio_th\": \"0.98\", \"pixel_black_th\": \"0.10\"}, \"boundingMode\": true, \"from\": 0, \"to\": 1800}",
					"outputDataExample": "{\"filePath\": \"/Users/john/Movies/my_video.mp4\", \"streamId\": 0, \"filterOptions\": {\"black_min_duration\": \"2.0\", \"picture_black_ratio_th\": \"0.98\", \"pixel_black_th\": \"0.10\"}, \"boundingMode\": true, \"from\": 0, \"to\": 1800}"
				},
				{
					"simStepId": "cdb7e529-e5ce-42b5-8f47-68240dc70caf",
					"diagramNodeId": "37cfdc91-2660-4067-aaa0-90217d83c698",
					"simStepLabel": "Main Process: Execute FFmpeg",
					"simStepDescription": "The `blackDetect` function in `src/main/ffmpeg.ts` constructs and executes an FFmpeg command using the specified video filter (e.g., `blackdetect`) and user parameters. It uses a utility to run the command and parse its output in real-time.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/ffmpeg.ts",
						"startLine": "361",
						"endLine": "399",
						"relevantVariables": [
							"blackDetect",
							"runFfmpegWithProgress",
							"mapFilterOptions"
						]
					},
					"inputDataExample": "{\"filePath\": \"/Users/john/Movies/my_video.mp4\", \"streamId\": 0, \"filterOptions\": {\"black_min_duration\": \"2.0\"}}",
					"outputDataExample": "{\"ffmpegCommand\": \"ffmpeg -i /Users/john/Movies/my_video.mp4 -map 0:0 -filter:v blackdetect=black_min_duration=2.0... -f null -\"}"
				},
				{
					"simStepId": "7d14d62e-751d-4580-b72c-9404c5a7e3f2",
					"diagramNodeId": "40eb651f-95df-4092-9e3b-32800adadd06",
					"simStepLabel": "Data Stream: FFmpeg stderr",
					"simStepDescription": "The running FFmpeg process writes its progress and detection results to its standard error stream. The Node.js wrapper captures this output line by line for parsing.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/main/ffmpeg.ts",
						"startLine": "378",
						"endLine": "382",
						"relevantVariables": [
							"matchLineTokens",
							"line.match"
						]
					},
					"inputDataExample": "\"[blackdetect @ 0x14d50b780] black_start:60.06 black_end:62.16 black_duration:2.1\"",
					"outputDataExample": "\"[blackdetect @ 0x14d50b780] black_start:60.06 black_end:62.16 black_duration:2.1\""
				},
				{
					"simStepId": "af8d83bf-8f21-48e3-9167-bb0f9e810d6e",
					"diagramNodeId": "ddb47d87-44fe-4a40-b379-d89682b80404",
					"simStepLabel": "Main Process: Parse FFmpeg Output",
					"simStepDescription": "A callback function (`matchLineTokens`) inside `blackDetect` uses a regular expression to parse each line of the FFmpeg output. When a line matches the detection format, it extracts the start and end timestamps of the detected event.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/ffmpeg.ts",
						"startLine": "378",
						"endLine": "390",
						"relevantVariables": [
							"matchLineTokens",
							"match",
							"parseFloat"
						]
					},
					"inputDataExample": "\"[blackdetect @ 0x14d50b780] black_start:60.06 black_end:62.16 black_duration:2.1\"",
					"outputDataExample": "{\"start\": 60.06, \"end\": 62.16}"
				},
				{
					"simStepId": "c7666ef9-d773-4def-baca-911ccb7836a1",
					"diagramNodeId": "23fd92ba-e3a8-4b04-80b1-8451f0774db6",
					"simStepLabel": "IPC: Callback to Renderer",
					"simStepDescription": "Each time a segment is successfully parsed, the `onSegmentDetected` callback, which was passed from the renderer, is invoked. This sends the parsed segment data back to the renderer process.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "218",
						"endLine": "218",
						"relevantVariables": [
							"onSegmentDetected"
						]
					},
					"inputDataExample": "{\"start\": 60.06, \"end\": 62.16}",
					"outputDataExample": "{\"start\": 60.06, \"end\": 62.16}"
				},
				{
					"simStepId": "c0969ce8-50b4-4827-81d2-25bba7b52713",
					"diagramNodeId": "5241093d-0c10-4147-89ad-9c47e0c8a2bb",
					"simStepLabel": "Renderer: Update Segments State",
					"simStepDescription": "A helper function in `useSegments.ts` collects all the segments sent back from the main process. Once the FFmpeg process is complete, it adds these new segments to the existing list of cut segments in the React state, triggering a UI update.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "218",
						"endLine": "218",
						"relevantVariables": [
							"detectSegments"
						]
					},
					"inputDataExample": "[{\"start\": 60.06, \"end\": 62.16}, {\"start\": 125.1, \"end\": 128.4}]",
					"outputDataExample": "{\"cutSegments\": [{\"start\": 0, \"end\": 10, \"name\": \"Segment 1\"}, {\"start\": 60.06, \"end\": 62.16, \"name\": \"blackScenes-1\"}, {\"start\": 125.1, \"end\": 128.4, \"name\": \"blackScenes-2\"}]}"
				},
				{
					"simStepId": "e9a1c29e-fb83-437a-805a-82fe14f04fd5",
					"diagramNodeId": "8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5",
					"simStepLabel": "React State -> UI",
					"simStepDescription": "The update to the `cutSegments` state variable causes React to re-render the components that depend on it, such as the timeline and the segment list.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "365",
						"endLine": "365",
						"relevantVariables": [
							"cutSegments",
							"useSegments"
						]
					},
					"inputDataExample": "{\"cutSegments\": [{\"start\": 0, \"end\": 10, \"name\": \"Segment 1\"}, {\"start\": 60.06, \"end\": 62.16, \"name\": \"blackScenes-1\"}, {\"start\": 125.1, \"end\": 128.4, \"name\": \"blackScenes-2\"}]}",
					"outputDataExample": "{\"cutSegments\": [{\"start\": 0, \"end\": 10, \"name\": \"Segment 1\"}, {\"start\": 60.06, \"end\": 62.16, \"name\": \"blackScenes-1\"}, {\"start\": 125.1, \"end\": 128.4, \"name\": \"blackScenes-2\"}]}"
				},
				{
					"simStepId": "02e786cd-aa09-446c-b601-8abb229d3006",
					"diagramNodeId": "b803913c-42c9-43d8-8575-6757b399ed40",
					"simStepLabel": "UI Update: Display New Segments",
					"simStepDescription": "The application's UI, specifically the timeline and the segment list, now displays the newly created segments that correspond to the detected black scenes. The user can then proceed to edit or export these segments.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "365",
						"endLine": "371",
						"relevantVariables": [
							"cutSegments",
							"segmentsOrInverse"
						]
					},
					"inputDataExample": "{\"cutSegments\": [{\"start\": 0, \"end\": 10, \"name\": \"Segment 1\"}, {\"start\": 60.06, \"end\": 62.16, \"name\": \"blackScenes-1\"}]}",
					"outputDataExample": "{\"ui\": {\"timeline\": \"shows new segments\", \"segmentList\": \"shows new segments\"}}"
				}
			],
			"description": "<ul><li>Automates the process of finding relevant segments in a long video by detecting events</li><li>Users can choose to detect silent portions, black screens (e</li><li>g</li><li>, between TV show segments), or visual scene changes</li><li>These features are accessible from the 'Tools' menu and are implemented in the <code>useSegments</li><li>ts</code> hook, which calls dedicated FFmpeg filter functions in <code>src/main/ffmpeg</li><li>ts</code></li></ul>",
			"simulationNodesAndEdges": {
				"be0399f3-aafe-458a-91c0-3cd8256e9ab8": {
					"simStepIds": [
						"40371c98-e32f-4c44-88de-65a268b0365d"
					]
				},
				"cb2d5282-649d-4169-9459-bd5722c494b2": {
					"simStepIds": [
						"ed52fb91-1af8-488d-aadf-191b5bd500b2"
					]
				},
				"37245537-83e0-4424-8828-38ed04ce7af6": {
					"simStepIds": [
						"15be662c-7685-488b-a47c-fced395616dd"
					]
				},
				"37cfdc91-2660-4067-aaa0-90217d83c698": {
					"simStepIds": [
						"cdb7e529-e5ce-42b5-8f47-68240dc70caf"
					]
				},
				"ddb47d87-44fe-4a40-b379-d89682b80404": {
					"simStepIds": [
						"af8d83bf-8f21-48e3-9167-bb0f9e810d6e"
					]
				},
				"5241093d-0c10-4147-89ad-9c47e0c8a2bb": {
					"simStepIds": [
						"c0969ce8-50b4-4827-81d2-25bba7b52713"
					]
				},
				"b803913c-42c9-43d8-8575-6757b399ed40": {
					"simStepIds": [
						"02e786cd-aa09-446c-b601-8abb229d3006"
					]
				},
				"bc63267c-2d3e-4527-8c13-366857538486": {
					"simStepIds": [
						"86d61117-e9ba-456d-ba91-c15faeac6329"
					]
				},
				"0b975994-c566-4ec8-9b77-c4fc01fc0778": {
					"simStepIds": [
						"595957a2-d81e-4772-b5d3-66a01a313b07"
					]
				},
				"8fb0eef8-b010-4d5b-8a97-307002463373": {
					"simStepIds": [
						"b867447b-34e3-45c9-b64d-5a0270e68156"
					]
				},
				"40eb651f-95df-4092-9e3b-32800adadd06": {
					"simStepIds": [
						"7d14d62e-751d-4580-b72c-9404c5a7e3f2"
					]
				},
				"23fd92ba-e3a8-4b04-80b1-8451f0774db6": {
					"simStepIds": [
						"c7666ef9-d773-4def-baca-911ccb7836a1"
					]
				},
				"8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5": {
					"simStepIds": [
						"e9a1c29e-fb83-437a-805a-82fe14f04fd5"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "detectSceneChanges, detectSilentScenes, blackDetect",
			"generationPrompt": "Automated Scene Detection",
			"generationKeywords": "detectSceneChanges, detectSilentScenes, blackDetect"
		},
		"Importing and Exporting Cut Lists (EDL)": {
			"name": "Importing and Exporting Cut Lists (EDL)",
			"simSteps": [
				{
					"simStepId": "d20ea994-dd2c-4f30-bdb9-e578fe2db09d",
					"diagramNodeId": "8132c00a-6af6-429d-b6b9-16c2b93f8af7",
					"simStepLabel": "Import Flow: User Selects Import Option",
					"simStepDescription": "The user initiates the import process by clicking on the 'Times in seconds (CSV)' option from the 'File > Import project' menu.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "79",
						"endLine": "81",
						"relevantVariables": [
							"click"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{}"
				},
				{
					"simStepId": "d6bf5102-ac1a-4da3-94be-e5cb9280dc73",
					"diagramNodeId": "a8a903a5-f2ed-4eef-9d74-491986cb8f76",
					"simStepLabel": "Import Flow: IPC Message to Renderer",
					"simStepDescription": "The main process sends an Inter-Process Communication (IPC) message 'importEdlFile' to the renderer process, specifying 'csv' as the import format.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "80",
						"endLine": "80",
						"relevantVariables": [
							"mainWindow.webContents.send"
						]
					},
					"inputDataExample": "{\"format\": \"csv\"}",
					"outputDataExample": "{\"format\": \"csv\"}"
				},
				{
					"simStepId": "7b06b4b9-5998-4da9-a4f0-0ecd26beb4a6",
					"diagramNodeId": "3be1cc98-9f00-4ec4-b9ae-b89114477cac",
					"simStepLabel": "Import Flow: Renderer Receives IPC Message",
					"simStepDescription": "An IPC listener in the main App component receives the 'importEdlFile' message and triggers the importEdlFile function.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2362",
						"endLine": "2371",
						"relevantVariables": [
							"ipcActions",
							"importEdlFile"
						]
					},
					"inputDataExample": "{\"format\": \"csv\"}",
					"outputDataExample": "null"
				},
				{
					"simStepId": "a8b3a5b1-36e5-47e1-8b91-98689158cf71",
					"diagramNodeId": "0b438473-97e3-4504-b856-779156a0774d",
					"simStepLabel": "Import Flow: Request User to Select File",
					"simStepDescription": "The `importEdlFile` function calls `askForEdlImport` to handle the file selection and parsing logic, passing along the format type and the detected frames per second (fps).",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2334",
						"endLine": "2334",
						"relevantVariables": [
							"askForEdlImport"
						]
					},
					"inputDataExample": "{\"type\": \"csv\", \"fps\": 29.97}",
					"outputDataExample": "{\"type\": \"csv\", \"fps\": 29.97}"
				},
				{
					"simStepId": "23e2dcc5-356b-456a-ad5f-8f0a5e7f5208",
					"diagramNodeId": "12d0fa17-0475-450a-92f5-b5667b3540e5",
					"simStepLabel": "Import Flow: Show File Dialog and Read File",
					"simStepDescription": "`askForEdlImport` from `edlStore` shows a native file dialog. After the user selects a file, it calls `readEdlFile` to read its content.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/edlStore.ts",
						"startLine": "179",
						"endLine": "181",
						"relevantVariables": [
							"askForEdlImport",
							"showOpenDialog",
							"readEdlFile"
						]
					},
					"inputDataExample": "{\"type\": \"csv\", \"fps\": 29.97}",
					"outputDataExample": "{\"type\": \"csv\", \"path\": \"/Users/jane/Documents/cuts.csv\", \"fps\": 29.97}"
				},
				{
					"simStepId": "fb7685d1-a9fd-46f4-805b-360e4ee276a4",
					"diagramNodeId": "7e0ab734-d424-44a5-ae87-5e2bc7e5f629",
					"simStepLabel": "Import Flow: Pass File Content to Parser",
					"simStepDescription": "`readEdlFile` reads the text content from the selected file path and passes it to the appropriate parser function based on the import type.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/edlStore.ts",
						"startLine": "5",
						"endLine": "5",
						"relevantVariables": [
							"parseCsvTime"
						]
					},
					"inputDataExample": "{\"rawContent\": \"10.5,20.2,Opening Scene\\n35.0,45.8,Action Sequence\"}",
					"outputDataExample": "{\"rawContent\": \"10.5,20.2,Opening Scene\\n35.0,45.8,Action Sequence\"}"
				},
				{
					"simStepId": "2573bac3-ef83-4317-8fd9-d95b9179b062",
					"diagramNodeId": "5d7657a9-18cf-4461-baee-23cf277e15df",
					"simStepLabel": "Import Flow: Parse EDL File Content",
					"simStepDescription": "A specialized parser function in `edlFormats.ts` (e.g., `parseCsvTime`) processes the raw string content and transforms it into an array of segment objects.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/edlFormats.ts",
						"startLine": "1",
						"endLine": "1",
						"relevantVariables": [
							"parseCsvTime"
						]
					},
					"inputDataExample": "\"10.5,20.2,Opening Scene\\n35.0,45.8,Action Sequence\"",
					"outputDataExample": "{\"segments\": [{\"start\": 10.5, \"end\": 20.2, \"name\": \"Opening Scene\"}, {\"start\": 35.0, \"end\": 45.8, \"name\": \"Action Sequence\"}]}"
				},
				{
					"simStepId": "b70e2054-18b8-4684-af31-5e0a98cb193d",
					"diagramNodeId": "7526d6c5-59f6-4293-9656-9c52bafc6516",
					"simStepLabel": "Import Flow: Return Parsed Segments",
					"simStepDescription": "The array of parsed segment objects is returned up the call stack to the `importEdlFile` function in `App.tsx`.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2334",
						"endLine": "2334",
						"relevantVariables": [
							"edl"
						]
					},
					"inputDataExample": "{\"segments\": [{\"start\": 10.5, \"end\": 20.2, \"name\": \"Opening Scene\"}, {\"start\": 35.0, \"end\": 45.8, \"name\": \"Action Sequence\"}]}",
					"outputDataExample": "{\"segments\": [{\"start\": 10.5, \"end\": 20.2, \"name\": \"Opening Scene\"}, {\"start\": 35.0, \"end\": 45.8, \"name\": \"Action Sequence\"}]}"
				},
				{
					"simStepId": "2e47980d-2b90-4e07-b525-55d0a7066f71",
					"diagramNodeId": "f5e2907f-63c2-419a-8d37-cd625c321a57",
					"simStepLabel": "Import Flow: Update Application State",
					"simStepDescription": "The returned segments are loaded into the application's state using `loadCutSegments`, which updates the timeline in the UI to display the newly imported cuts.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2331",
						"endLine": "2338",
						"relevantVariables": [
							"loadCutSegments"
						]
					},
					"inputDataExample": "{\"segments\": [{\"start\": 10.5, \"end\": 20.2, \"name\": \"Opening Scene\"}, {\"start\": 35.0, \"end\": 45.8, \"name\": \"Action Sequence\"}]}",
					"outputDataExample": "null"
				},
				{
					"simStepId": "ae5699f1-d8c0-49eb-8b5c-04086b2b8c5d",
					"diagramNodeId": "d4a22f5b-fcda-4a11-9fbb-e19a52a4b7ca",
					"simStepLabel": "Export Flow: User Selects Export Option",
					"simStepDescription": "The user initiates the export process by clicking on the 'Times in seconds (CSV)' option from the 'File > Export project' menu.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "154",
						"endLine": "156",
						"relevantVariables": [
							"click"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{}"
				},
				{
					"simStepId": "ce53852f-9230-4518-83f7-67c19aa1f17e",
					"diagramNodeId": "5420e169-ff0c-40cc-af81-2f8b3ef52899",
					"simStepLabel": "Export Flow: IPC Message to Renderer",
					"simStepDescription": "The main process sends an Inter-Process Communication (IPC) message 'exportEdlFile' to the renderer process, specifying 'csv' as the export format.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "155",
						"endLine": "155",
						"relevantVariables": [
							"mainWindow.webContents.send"
						]
					},
					"inputDataExample": "{\"format\": \"csv\"}",
					"outputDataExample": "{\"format\": \"csv\"}"
				},
				{
					"simStepId": "d7853b0d-1469-446f-97a4-8f4917bcc39c",
					"diagramNodeId": "3e09cd2d-52ef-4b0b-a5fb-972f78bab761",
					"simStepLabel": "Export Flow: Renderer Receives IPC Message",
					"simStepDescription": "An IPC listener in the main App component receives the 'exportEdlFile' message and triggers the `tryExportEdlFile` function.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2362",
						"endLine": "2371",
						"relevantVariables": [
							"ipcActions",
							"exportEdlFile",
							"tryExportEdlFile"
						]
					},
					"inputDataExample": "{\"format\": \"csv\"}",
					"outputDataExample": "null"
				},
				{
					"simStepId": "14dac8dd-53d7-465c-8685-40daac53b612",
					"diagramNodeId": "2fe168cb-edec-4f7e-a799-4639d808b5e6",
					"simStepLabel": "Export Flow: Pass Segments for Export",
					"simStepDescription": "The `tryExportEdlFile` function gathers the currently selected segments and other relevant data, then calls `exportEdlFile` from `edlStore` to handle the export logic.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2325",
						"endLine": "2325",
						"relevantVariables": [
							"exportEdlFile",
							"selectedSegments"
						]
					},
					"inputDataExample": "{\"type\": \"csv\", \"cutSegments\": [{\"start\": 5.1, \"end\": 15.2, \"name\": \"First cut\"}, {\"start\": 62.3, \"end\": 85.0, \"name\": \"Second cut\"}], \"filePath\": \"/Users/jane/Movies/my_video.mp4\"}",
					"outputDataExample": "{\"type\": \"csv\", \"cutSegments\": [{\"start\": 5.1, \"end\": 15.2, \"name\": \"First cut\"}, {\"start\": 62.3, \"end\": 85.0, \"name\": \"Second cut\"}], \"filePath\": \"/Users/jane/Movies/my_video.mp4\"}"
				},
				{
					"simStepId": "d27362df-12ad-4537-8ad0-6773f1007d7a",
					"diagramNodeId": "f2c09708-cd24-4092-9948-c8497f0169a7",
					"simStepLabel": "Export Flow: Prepare Data for Formatting",
					"simStepDescription": "`exportEdlFile` in `edlStore` receives the segments and prepares to format them by calling the appropriate formatter from `edlFormats.ts`.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/edlStore.ts",
						"startLine": "183",
						"endLine": "187",
						"relevantVariables": [
							"exportEdlFile",
							"cutSegments"
						]
					},
					"inputDataExample": "{\"type\": \"csv\", \"cutSegments\": [{\"start\": 5.1, \"end\": 15.2, \"name\": \"First cut\"}, {\"start\": 62.3, \"end\": 85.0, \"name\": \"Second cut\"}], \"filePath\": \"/Users/jane/Movies/my_video.mp4\"}",
					"outputDataExample": "[{\"start\": 5.1, \"end\": 15.2, \"name\": \"First cut\"}, {\"start\": 62.3, \"end\": 85.0, \"name\": \"Second cut\"}]"
				},
				{
					"simStepId": "7a556467-3147-43c8-abc7-ed2d98cf50c1",
					"diagramNodeId": "6a73fc2a-2ea4-424a-9adf-1e8b234193bb",
					"simStepLabel": "Export Flow: Pass Segments to Formatter",
					"simStepDescription": "The array of segment objects is passed to the specialized formatter function.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/edlStore.ts",
						"startLine": "5",
						"endLine": "5",
						"relevantVariables": [
							"formatCsvSeconds"
						]
					},
					"inputDataExample": "[{\"start\": 5.1, \"end\": 15.2, \"name\": \"First cut\"}, {\"start\": 62.3, \"end\": 85.0, \"name\": \"Second cut\"}]",
					"outputDataExample": "[{\"start\": 5.1, \"end\": 15.2, \"name\": \"First cut\"}, {\"start\": 62.3, \"end\": 85.0, \"name\": \"Second cut\"}]"
				},
				{
					"simStepId": "50d00e9f-edde-4033-b5ae-f51aba69975a",
					"diagramNodeId": "674617d8-eef8-4226-bfb4-f1e1883cf1c5",
					"simStepLabel": "Export Flow: Format Segments to String",
					"simStepDescription": "A formatter function in `edlFormats.ts` (e.g., `formatCsvSeconds`) converts the array of segment objects into a single CSV-formatted string.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/edlFormats.ts",
						"startLine": "1",
						"endLine": "1",
						"relevantVariables": [
							"formatCsvSeconds"
						]
					},
					"inputDataExample": "[{\"start\": 5.1, \"end\": 15.2, \"name\": \"First cut\"}, {\"start\": 62.3, \"end\": 85.0, \"name\": \"Second cut\"}]",
					"outputDataExample": "\"5.1,15.2,First cut\\n62.3,85.0,Second cut\""
				},
				{
					"simStepId": "c2ca5c19-4603-4ca3-b7de-8121f4a82033",
					"diagramNodeId": "a455187c-9171-4787-b1eb-13f324c0dce0",
					"simStepLabel": "Export Flow: Return Formatted String",
					"simStepDescription": "The formatted string is returned to the `exportEdlFile` function.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/edlStore.ts",
						"startLine": "183",
						"endLine": "187",
						"relevantVariables": [
							"exportEdlFile"
						]
					},
					"inputDataExample": "\"5.1,15.2,First cut\\n62.3,85.0,Second cut\"",
					"outputDataExample": "\"5.1,15.2,First cut\\n62.3,85.0,Second cut\""
				},
				{
					"simStepId": "528b00f4-ae1a-44a0-a878-7956402a1e54",
					"diagramNodeId": "e7cd4725-f11e-4689-82a3-18ecd0bcec83",
					"simStepLabel": "Export Flow: Save File to Disk",
					"simStepDescription": "`exportEdlFile` shows a native 'save file' dialog, allowing the user to choose a destination. It then writes the formatted string content to the specified file on the user's disk.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/edlStore.ts",
						"startLine": "183",
						"endLine": "187",
						"relevantVariables": [
							"exportEdlFile"
						]
					},
					"inputDataExample": "{\"outputPath\": \"/Users/jane/Documents/exported_cuts.csv\", \"content\": \"5.1,15.2,First cut\\n62.3,85.0,Second cut\"}",
					"outputDataExample": "null"
				}
			],
			"description": "<ul><li>Supports importing cut points from various formats like CSV, YouTube chapters, CUE sheets, and Final Cut Pro XML</li><li>This allows users to prepare their cuts in another tool and execute them losslessly in LosslessCut</li><li>Segments created within the app can also be exported to these formats for use elsewhere</li><li>All parsing and formatting logic is centralized in <code>src/renderer/src/edlFormats</li><li>ts</code></li></ul>",
			"simulationNodesAndEdges": {
				"8132c00a-6af6-429d-b6b9-16c2b93f8af7": {
					"simStepIds": [
						"d20ea994-dd2c-4f30-bdb9-e578fe2db09d"
					]
				},
				"3be1cc98-9f00-4ec4-b9ae-b89114477cac": {
					"simStepIds": [
						"7b06b4b9-5998-4da9-a4f0-0ecd26beb4a6"
					]
				},
				"12d0fa17-0475-450a-92f5-b5667b3540e5": {
					"simStepIds": [
						"23e2dcc5-356b-456a-ad5f-8f0a5e7f5208"
					]
				},
				"5d7657a9-18cf-4461-baee-23cf277e15df": {
					"simStepIds": [
						"2573bac3-ef83-4317-8fd9-d95b9179b062"
					]
				},
				"f5e2907f-63c2-419a-8d37-cd625c321a57": {
					"simStepIds": [
						"2e47980d-2b90-4e07-b525-55d0a7066f71"
					]
				},
				"d4a22f5b-fcda-4a11-9fbb-e19a52a4b7ca": {
					"simStepIds": [
						"ae5699f1-d8c0-49eb-8b5c-04086b2b8c5d"
					]
				},
				"3e09cd2d-52ef-4b0b-a5fb-972f78bab761": {
					"simStepIds": [
						"d7853b0d-1469-446f-97a4-8f4917bcc39c"
					]
				},
				"f2c09708-cd24-4092-9948-c8497f0169a7": {
					"simStepIds": [
						"d27362df-12ad-4537-8ad0-6773f1007d7a"
					]
				},
				"674617d8-eef8-4226-bfb4-f1e1883cf1c5": {
					"simStepIds": [
						"50d00e9f-edde-4033-b5ae-f51aba69975a"
					]
				},
				"e7cd4725-f11e-4689-82a3-18ecd0bcec83": {
					"simStepIds": [
						"528b00f4-ae1a-44a0-a878-7956402a1e54"
					]
				},
				"a8a903a5-f2ed-4eef-9d74-491986cb8f76": {
					"simStepIds": [
						"d6bf5102-ac1a-4da3-94be-e5cb9280dc73"
					]
				},
				"0b438473-97e3-4504-b856-779156a0774d": {
					"simStepIds": [
						"a8b3a5b1-36e5-47e1-8b91-98689158cf71"
					]
				},
				"7e0ab734-d424-44a5-ae87-5e2bc7e5f629": {
					"simStepIds": [
						"fb7685d1-a9fd-46f4-805b-360e4ee276a4"
					]
				},
				"7526d6c5-59f6-4293-9656-9c52bafc6516": {
					"simStepIds": [
						"b70e2054-18b8-4684-af31-5e0a98cb193d"
					]
				},
				"5420e169-ff0c-40cc-af81-2f8b3ef52899": {
					"simStepIds": [
						"ce53852f-9230-4518-83f7-67c19aa1f17e"
					]
				},
				"2fe168cb-edec-4f7e-a799-4639d808b5e6": {
					"simStepIds": [
						"14dac8dd-53d7-465c-8685-40daac53b612"
					]
				},
				"6a73fc2a-2ea4-424a-9adf-1e8b234193bb": {
					"simStepIds": [
						"7a556467-3147-43c8-abc7-ed2d98cf50c1"
					]
				},
				"a455187c-9171-4787-b1eb-13f324c0dce0": {
					"simStepIds": [
						"c2ca5c19-4603-4ca3-b7de-8121f4a82033"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "edlFormats, importEdlFile, exportEdlFile",
			"generationPrompt": "Importing and Exporting Cut Lists (EDL)",
			"generationKeywords": "edlFormats, importEdlFile, exportEdlFile"
		},
		"Capturing Snapshots and Image Sequences": {
			"name": "Capturing Snapshots and Image Sequences",
			"simSteps": [
				{
					"simStepId": "ea5ac674-2bfc-489d-808f-76363db563d4",
					"diagramNodeId": "5899327c-9400-40f9-878b-614dbc189747",
					"simStepLabel": "(Snapshot Flow) User Clicks Capture Button",
					"simStepDescription": "The user clicks the camera icon in the bottom bar to capture a single, full-resolution snapshot of the current video frame.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/BottomBar.tsx",
						"startLine": "563",
						"endLine": "571",
						"relevantVariables": [
							"IoIosCamera",
							"captureSnapshot"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{\"event\": \"click\"}"
				},
				{
					"simStepId": "0de15a15-1f53-4261-b1dd-f4f00015b026",
					"diagramNodeId": "33683624-370a-4b7e-8c6a-6c88a43240bc",
					"simStepLabel": "(Snapshot Flow) Trigger `captureSnapshot` Function",
					"simStepDescription": "The `onClick` event on the camera icon triggers the `captureSnapshot` function, which is passed as a prop from the main `App` component.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/BottomBar.tsx",
						"startLine": "568",
						"endLine": "568",
						"relevantVariables": [
							"onClick={captureSnapshot}"
						]
					},
					"inputDataExample": "{\"event\": \"click\"}",
					"outputDataExample": "{\"event\": \"click\"}"
				},
				{
					"simStepId": "173ecc7a-95f8-4554-a47c-644510ad0dd5",
					"diagramNodeId": "3a8a4cb2-dcba-43f7-8be3-b464a572e138",
					"simStepLabel": "(Snapshot Flow) Handle Snapshot Request",
					"simStepDescription": "The `captureSnapshot` function in `App.tsx` is executed. It retrieves the current playback time and calls the `captureFrameFromFfmpeg` utility function to handle the actual frame capture logic.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1771",
						"endLine": "1775",
						"relevantVariables": [
							"captureSnapshotAsCoverArt",
							"getRelevantTime",
							"captureFrameFromFfmpeg",
							"filePath",
							"captureFormat",
							"captureFrameQuality"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{\"customOutDir\": \"/Users/jane/Movies/LosslessCut\", \"filePath\": \"/Users/jane/Movies/drone_footage.mp4\", \"time\": 42.17, \"captureFormat\": \"jpeg\", \"quality\": 90}"
				},
				{
					"simStepId": "08683851-3460-4a81-b51d-6b9b04181158",
					"diagramNodeId": "eea2e371-ef9c-49c8-bbf9-1e74c4c11433",
					"simStepLabel": "(Snapshot Flow) Invoke Frame Capture Hook",
					"simStepDescription": "The snapshot parameters are passed to the `captureFrameFromFfmpeg` function from the `useFrameCapture` hook. This hook prepares the arguments for an IPC call to the main process.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFrameCapture.ts",
						"startLine": "127",
						"endLine": "135",
						"relevantVariables": [
							"captureFrameFromFfmpeg"
						]
					},
					"inputDataExample": "{\"customOutDir\": \"/Users/jane/Movies/LosslessCut\", \"filePath\": \"/Users/jane/Movies/drone_footage.mp4\", \"time\": 42.17, \"captureFormat\": \"jpeg\", \"quality\": 90}",
					"outputDataExample": "{\"customOutDir\": \"/Users/jane/Movies/LosslessCut\", \"filePath\": \"/Users/jane/Movies/drone_footage.mp4\", \"time\": 42.17, \"captureFormat\": \"jpeg\", \"quality\": 90}"
				},
				{
					"simStepId": "78826a87-8c3c-46ac-b641-a502a73fa459",
					"diagramNodeId": "1be22197-755b-40c1-8231-6fb608c02044",
					"simStepLabel": "(Snapshot Flow) Execute FFmpeg in Main Process",
					"simStepDescription": "The main process receives the request. The `captureFrame` function constructs the final FFmpeg command with the correct timestamp, quality, and output path, then executes it to save the snapshot image file.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/ffmpeg.ts",
						"startLine": "455",
						"endLine": "474",
						"relevantVariables": [
							"captureFrames",
							"getQualityOpts",
							"runFfmpegWithProgress"
						]
					},
					"inputDataExample": "{\"from\": 42.17, \"videoPath\": \"/Users/jane/Movies/drone_footage.mp4\", \"outPathTemplate\": \"/Users/jane/Movies/LosslessCut/drone_footage-snapshot.jpeg\", \"quality\": 90, \"captureFormat\": \"jpeg\"}",
					"outputDataExample": "{\"outputPath\": \"/Users/jane/Movies/LosslessCut/drone_footage-snapshot.jpeg\"}"
				},
				{
					"simStepId": "2bbb9120-cc5a-4728-a757-a793aeaab9da",
					"diagramNodeId": "05d22903-b741-44cd-a40f-d6294542efdb",
					"simStepLabel": "(Sequence Flow) User Initiates Frame Extraction",
					"simStepDescription": "The user triggers an action, such as from a context menu or keyboard shortcut, to extract frames from the currently selected video segment.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1322",
						"endLine": "1324",
						"relevantVariables": [
							"extractCurrentSegmentFramesAsImages",
							"currentCutSeg",
							"extractSegmentsFramesAsImages"
						]
					},
					"inputDataExample": "{\"currentCutSeg\": {\"start\": 15.5, \"end\": 45.0, \"name\": \"Interesting part\"}}",
					"outputDataExample": "{\"segmentsToExtract\": [{\"start\": 15.5, \"end\": 45.0, \"name\": \"Interesting part\"}]}"
				},
				{
					"simStepId": "090045bf-7b75-4225-b95e-424a274a179c",
					"diagramNodeId": "d2850200-1088-4c62-88ab-cc574dd3f70d",
					"simStepLabel": "(Sequence Flow) Request User Parameters",
					"simStepDescription": "The core `extractSegmentsFramesAsImages` function is called, which then invokes `askExtractFramesAsImages` to open a dialog for user input.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1286",
						"endLine": "1290",
						"relevantVariables": [
							"askExtractFramesAsImages",
							"segmentsNumFrames",
							"detectedFps"
						]
					},
					"inputDataExample": "{\"segmentsToExtract\": [{\"start\": 15.5, \"end\": 45.0, \"name\": \"Interesting part\"}]}",
					"outputDataExample": "{\"segmentsToExtract\": [{\"start\": 15.5, \"end\": 45.0, \"name\": \"Interesting part\"}]}"
				},
				{
					"simStepId": "b15d12d0-6a2e-49c9-8273-33f9473ea5a6",
					"diagramNodeId": "bca28915-50c6-4c4a-967a-d3ccc6f8c42a",
					"simStepLabel": "(Sequence Flow) User Selects Extraction Filter",
					"simStepDescription": "A dialog is displayed, prompting the user to choose how frames should be extracted (e.g., every Nth frame, every second, best thumbnails). The application waits for the user's selection.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/dialogs/extractFrames.tsx",
						"startLine": "7",
						"endLine": "11",
						"relevantVariables": [
							"Swal.fire"
						]
					},
					"inputDataExample": "{\"segmentsNumFrames\": 885, \"plural\": false, \"fps\": 29.97}",
					"outputDataExample": "{\"value\": \"everyNthFrame\"}"
				},
				{
					"simStepId": "6e59692d-410e-4cfd-bd53-6c154b73d948",
					"diagramNodeId": "18b4a40d-a82e-4247-9572-98bfb3da73b1",
					"simStepLabel": "(Sequence Flow) Return User's Choice",
					"simStepDescription": "The dialog returns the user's chosen filter configuration, including the calculated FFmpeg filter string and an estimated number of files to be created.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1286",
						"endLine": "1290",
						"relevantVariables": [
							"captureFramesResponse"
						]
					},
					"inputDataExample": "{\"filter\": \"select='not(mod(n,30))'\", \"estimatedMaxNumFiles\": 30}",
					"outputDataExample": "{\"filter\": \"select='not(mod(n,30))'\", \"estimatedMaxNumFiles\": 30}"
				},
				{
					"simStepId": "ee5cf021-2f21-4b87-8636-49838317018b",
					"diagramNodeId": "231861b0-ddcf-4129-8f75-49a63bf9b379",
					"simStepLabel": "(Sequence Flow) Process Segments and Capture Frames",
					"simStepDescription": "After receiving the user's settings, the application iterates through each selected segment and calls `captureFramesRange` for each one to initiate the extraction.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1309",
						"endLine": "1313",
						"relevantVariables": [
							"segments",
							"captureFramesRange",
							"customOutDir",
							"captureFormat",
							"captureFrameQuality"
						]
					},
					"inputDataExample": "{\"segments\": [{\"start\": 15.5, \"end\": 45.0}], \"captureFramesResponse\": {\"filter\": \"select='not(mod(n,30))'\", \"estimatedMaxNumFiles\": 30}}",
					"outputDataExample": "{\"filePath\": \"/path/to/video.mp4\", \"fromTime\": 15.5, \"toTime\": 45.0, \"filter\": \"select='not(mod(n,30))'\"}"
				},
				{
					"simStepId": "3b54127a-920d-4c3b-a6c1-bc6ed6a6f44c",
					"diagramNodeId": "1704c16d-ebcc-44ff-8c7e-68159315e892",
					"simStepLabel": "(Sequence Flow) Invoke Frame Range Capture Hook",
					"simStepDescription": "The parameters for the segment (file path, start/end times, filter) are passed to the `captureFramesRange` function in the `useFrameCapture` hook, which then calls the main process via IPC.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFrameCapture.ts",
						"startLine": "54",
						"endLine": "54",
						"relevantVariables": [
							"ffmpeg.captureFrames"
						]
					},
					"inputDataExample": "{\"filePath\": \"/path/to/video.mp4\", \"fromTime\": 15.5, \"toTime\": 45.0, \"filter\": \"select='not(mod(n,30))'\", \"estimatedMaxNumFiles\": 30, \"captureFormat\": \"png\"}",
					"outputDataExample": "{\"filePath\": \"/path/to/video.mp4\", \"fromTime\": 15.5, \"toTime\": 45.0, \"filter\": \"select='not(mod(n,30))'\", \"estimatedMaxNumFiles\": 30, \"captureFormat\": \"png\"}"
				},
				{
					"simStepId": "f67ab7d7-8548-408b-a182-457f662f46ad",
					"diagramNodeId": "d0ee992f-e79c-4acc-ac1c-16fafe2a07f2",
					"simStepLabel": "(Sequence Flow) Execute FFmpeg Extraction in Main Process",
					"simStepDescription": "The `captureFrames` function in the main process receives the request. It constructs the final FFmpeg command, including the video filter (`-vf`) for selecting frames and an output path template for sequential numbering (e.g., `output-%04d.png`), and then executes the command.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/ffmpeg.ts",
						"startLine": "455",
						"endLine": "474",
						"relevantVariables": [
							"captureFrames",
							"from",
							"to",
							"videoPath",
							"outPathTemplate",
							"filter",
							"runFfmpegWithProgress"
						]
					},
					"inputDataExample": "{\"from\": 15.5, \"to\": 45.0, \"videoPath\": \"/path/to/video.mp4\", \"outPathTemplate\": \"/path/to/output/video-out-%04d.png\", \"filter\": \"select='not(mod(n,30))'\"}",
					"outputDataExample": "{\"commandLine\": \"ffmpeg -ss 15.5 -i /path/to/video.mp4 -t 29.5 -vf \\\"select='not(mod(n,30))'\\\" -vsync vfr /path/to/output/video-out-%04d.png\"}"
				},
				{
					"simStepId": "0213e7b6-7e23-42ea-90e6-9a9f89edd818",
					"diagramNodeId": "8729cbb8-4f27-4578-b465-900583cb7a2e",
					"simStepLabel": "(Sequence Flow) Report Completion",
					"simStepDescription": "After the FFmpeg process completes, the `captureFramesRange` function returns the path to the first created file, signaling completion for that segment.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFrameCapture.ts",
						"startLine": "56",
						"endLine": "56",
						"relevantVariables": [
							"firstFileOutPath"
						]
					},
					"inputDataExample": "{\"lastOutPath\": \"/path/to/output/video-out-0001.png\"}",
					"outputDataExample": "{\"lastOutPath\": \"/path/to/output/video-out-0001.png\"}"
				},
				{
					"simStepId": "21467898-a81a-4dbe-8ee2-2fc84400d6fd",
					"diagramNodeId": "9c9c85c3-b4a1-4767-8264-999e40b2d754",
					"simStepLabel": "(Sequence Flow) Notify User of Completion",
					"simStepDescription": "Once all segments have been processed, the application displays a system notification and a toast message confirming that the frames have been extracted, providing a button to open the output folder.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1314",
						"endLine": "1317",
						"relevantVariables": [
							"showOsNotification",
							"openDirToast",
							"lastOutPath"
						]
					},
					"inputDataExample": "{\"lastOutPath\": \"/path/to/output/video-out-0001.png\"}",
					"outputDataExample": "{}"
				}
			],
			"description": "<ul><li>Users can capture a single full-resolution snapshot of the current frame as a JPEG or PNG file</li><li>It's also possible to export an entire segment as a sequence of images (e</li><li>g</li><li>, every Nth frame)</li><li>The UI for this is on the <code>BottomBar</li><li>tsx</code> and in dialogs, with the underlying FFmpeg commands executed via <code>captureFrames</code> in <code>src/main/ffmpeg</li><li>ts</code></li></ul>",
			"simulationNodesAndEdges": {
				"5899327c-9400-40f9-878b-614dbc189747": {
					"simStepIds": [
						"ea5ac674-2bfc-489d-808f-76363db563d4"
					]
				},
				"3a8a4cb2-dcba-43f7-8be3-b464a572e138": {
					"simStepIds": [
						"173ecc7a-95f8-4554-a47c-644510ad0dd5"
					]
				},
				"1be22197-755b-40c1-8231-6fb608c02044": {
					"simStepIds": [
						"78826a87-8c3c-46ac-b641-a502a73fa459"
					]
				},
				"05d22903-b741-44cd-a40f-d6294542efdb": {
					"simStepIds": [
						"2bbb9120-cc5a-4728-a757-a793aeaab9da"
					]
				},
				"bca28915-50c6-4c4a-967a-d3ccc6f8c42a": {
					"simStepIds": [
						"b15d12d0-6a2e-49c9-8273-33f9473ea5a6"
					]
				},
				"231861b0-ddcf-4129-8f75-49a63bf9b379": {
					"simStepIds": [
						"ee5cf021-2f21-4b87-8636-49838317018b"
					]
				},
				"d0ee992f-e79c-4acc-ac1c-16fafe2a07f2": {
					"simStepIds": [
						"f67ab7d7-8548-408b-a182-457f662f46ad"
					]
				},
				"9c9c85c3-b4a1-4767-8264-999e40b2d754": {
					"simStepIds": [
						"21467898-a81a-4dbe-8ee2-2fc84400d6fd"
					]
				},
				"33683624-370a-4b7e-8c6a-6c88a43240bc": {
					"simStepIds": [
						"0de15a15-1f53-4261-b1dd-f4f00015b026"
					]
				},
				"eea2e371-ef9c-49c8-bbf9-1e74c4c11433": {
					"simStepIds": [
						"08683851-3460-4a81-b51d-6b9b04181158"
					]
				},
				"d2850200-1088-4c62-88ab-cc574dd3f70d": {
					"simStepIds": [
						"090045bf-7b75-4225-b95e-424a274a179c"
					]
				},
				"18b4a40d-a82e-4247-9572-98bfb3da73b1": {
					"simStepIds": [
						"6e59692d-410e-4cfd-bd53-6c154b73d948"
					]
				},
				"1704c16d-ebcc-44ff-8c7e-68159315e892": {
					"simStepIds": [
						"3b54127a-920d-4c3b-a6c1-bc6ed6a6f44c"
					]
				},
				"8729cbb8-4f27-4578-b465-900583cb7a2e": {
					"simStepIds": [
						"0213e7b6-7e23-42ea-90e6-9a9f89edd818"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "captureFrames, captureSnapshot, askExtractFramesAsImages",
			"generationPrompt": "Capturing Snapshots and Image Sequences",
			"generationKeywords": "captureFrames, captureSnapshot, askExtractFramesAsImages"
		},
		"Editing File and Track Metadata": {
			"name": "Editing File and Track Metadata",
			"simSteps": [
				{
					"simStepId": "4a9e886e-c83a-4a83-aa9a-0255e1593db8",
					"diagramNodeId": "44bb0916-1c38-4556-8138-6af52160f2c9",
					"simStepLabel": "State Initialization",
					"simStepDescription": "The main App component initializes and manages the application state. The `customTagsByFile` state is created using `useState` to hold any user-defined metadata for each loaded file. Initially, it's an empty object.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "134",
						"endLine": "134",
						"relevantVariables": [
							"customTagsByFile",
							"setCustomTagsByFile",
							"useState"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{\"customTagsByFile\": {}}"
				},
				{
					"simStepId": "a8032886-f843-42ff-a61a-ace33bffeea9",
					"diagramNodeId": "35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10",
					"simStepLabel": "State Propagation to StreamsSelector",
					"simStepDescription": "The `App` component renders the `StreamsSelector` and passes down the `customTagsByFile` state and its update function `setCustomTagsByFile` as props, enabling the child component to read and modify the metadata state.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2793",
						"endLine": "2794",
						"relevantVariables": [
							"customTagsByFile",
							"setCustomTagsByFile"
						]
					},
					"inputDataExample": "{\"customTagsByFile\": {}, \"setCustomTagsByFile\": \"<function>\"}",
					"outputDataExample": "{\"customTagsByFile\": {}, \"setCustomTagsByFile\": \"<function>\"}"
				},
				{
					"simStepId": "46e88c5a-04a3-41e7-8a20-88a1d33375f5",
					"diagramNodeId": "e364ce6c-1250-48e0-b0aa-dcdd8bf585d9",
					"simStepLabel": "User Opens File Metadata Editor",
					"simStepDescription": "When the user clicks an 'Edit' button for a file in the Streams panel, `StreamsSelector` updates its internal state to show a dialog. This dialog renders the `EditFileDialog` component, which contains a `TagEditor` for modifying the file's container-level metadata.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/StreamsSelector.tsx",
						"startLine": "504",
						"endLine": "512",
						"relevantVariables": [
							"editingFile",
							"setEditingFile",
							"Dialog",
							"EditFileDialog"
						]
					},
					"inputDataExample": "{\"userClickEvent\": {\"file_path\": \"C:/videos/my-trip.mp4\"}}",
					"outputDataExample": "{\"editingFile\": \"C:/videos/my-trip.mp4\", \"dialogIsVisible\": true}"
				},
				{
					"simStepId": "47b9ec8a-12f2-4d8b-95ac-58f6504132b6",
					"diagramNodeId": "d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9",
					"simStepLabel": "User Input Triggers State Update",
					"simStepDescription": "Inside the `TagEditor`, the user adds a new metadata tag (e.g., 'title'). This action invokes the `onTagsChange` callback, passing the new key-value pair upwards to the parent `EditFileDialog` component within `StreamsSelector`.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/StreamsSelector.tsx",
						"startLine": "50",
						"endLine": "52",
						"relevantVariables": [
							"onTagsChange",
							"keyValues",
							"setCustomTagsByFile"
						]
					},
					"inputDataExample": "{\"title\": \"My Awesome Trip\"}",
					"outputDataExample": "{\"title\": \"My Awesome Trip\"}"
				},
				{
					"simStepId": "988c168d-d169-44e2-8db4-5fa824a2c9fc",
					"diagramNodeId": "8181f0d8-0132-4b93-98b6-fd777aa5e45d",
					"simStepLabel": "Metadata State Update Logic",
					"simStepDescription": "The `onTagsChange` callback within `EditFileDialog` receives the new metadata. It then calls the `setCustomTagsByFile` prop, updating the state by merging the new tags for the currently editing file.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/StreamsSelector.tsx",
						"startLine": "50",
						"endLine": "52",
						"relevantVariables": [
							"setCustomTagsByFile",
							"editingFile",
							"keyValues"
						]
					},
					"inputDataExample": "{\"oldState\": {}, \"editingFile\": \"C:/videos/my-trip.mp4\", \"newTags\": {\"title\": \"My Awesome Trip\"}}",
					"outputDataExample": "{\"newStateFragment\": {\"C:/videos/my-trip.mp4\": {\"title\": \"My Awesome Trip\"}}}"
				},
				{
					"simStepId": "fb1d4f06-bd16-409d-92f0-be3a609fba92",
					"diagramNodeId": "6e73adea-b533-40bf-be8d-7222957dfa29",
					"simStepLabel": "State Propagation to App Component",
					"simStepDescription": "The `setCustomTagsByFile` function call, originating from the `useState` hook in `App.tsx`, updates the central application state, persisting the user's changes.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "134",
						"endLine": "134",
						"relevantVariables": [
							"setCustomTagsByFile",
							"customTagsByFile"
						]
					},
					"inputDataExample": "{\"C:/videos/my-trip.mp4\": {\"title\": \"My Awesome Trip\"}}",
					"outputDataExample": "{\"C:/videos/my-trip.mp4\": {\"title\": \"My Awesome Trip\"}}"
				},
				{
					"simStepId": "fe019b51-f6a4-4d7c-92f5-57bfb4c33006",
					"diagramNodeId": "c697a034-ba9e-4c07-a007-9e5576db8364",
					"simStepLabel": "App State Ready for Export",
					"simStepDescription": "The `customTagsByFile` state in `App.tsx` now contains the user-defined metadata. This data is ready to be used when the user initiates an export operation.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "134",
						"endLine": "134",
						"relevantVariables": [
							"customTagsByFile"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{\"customTagsByFile\": {\"C:/videos/my-trip.mp4\": {\"title\": \"My Awesome Trip\"}}}"
				},
				{
					"simStepId": "2411a4bb-6054-4b50-9703-95fbf343470e",
					"diagramNodeId": "e49335ce-8e18-4eb4-8934-7122406f9aa8",
					"simStepLabel": "Metadata Passed to Export Process",
					"simStepDescription": "When the user confirms the export, the `onExportConfirm` function is executed. It gathers all necessary parameters, including the updated `customTagsByFile` state, and passes them to the underlying FFmpeg operation hooks.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "1186",
						"endLine": "1186",
						"relevantVariables": [
							"cutMultiple",
							"customTagsByFile"
						]
					},
					"inputDataExample": "{\"customTagsByFile\": {\"C:/videos/my-trip.mp4\": {\"title\": \"My Awesome Trip\"}}}",
					"outputDataExample": "{\"customTagsByFile\": {\"C:/videos/my-trip.mp4\": {\"title\": \"My Awesome Trip\"}}}"
				},
				{
					"simStepId": "b94f13fd-1350-41ac-9665-090724eb133a",
					"diagramNodeId": "f8cfc304-fc12-4138-9b9d-16287d5c68ef",
					"simStepLabel": "FFmpeg Command Generation",
					"simStepDescription": "Inside the `losslessCutSingle` function (called by the export process), the `customTagsByFile` object is used to construct FFmpeg command line arguments. Each key-value pair is formatted into a `-metadata key=value` argument.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "321",
						"endLine": "324",
						"relevantVariables": [
							"customTagsArgs",
							"customTagsByFile",
							"filePath"
						]
					},
					"inputDataExample": "{\"filePath\": \"C:/videos/my-trip.mp4\", \"customTagsByFile\": {\"C:/videos/my-trip.mp4\": {\"title\": \"My Awesome Trip\"}}}",
					"outputDataExample": "{\"customTagsArgs\": [\"-metadata\", \"title=My Awesome Trip\"]}"
				},
				{
					"simStepId": "508dd45b-3ee9-4d5d-a56f-7b7b3d3b8ceb",
					"diagramNodeId": "a3f38611-e09d-480e-bbe0-3b2a555d4f6a",
					"simStepLabel": "FFmpeg Command Execution",
					"simStepDescription": "The complete FFmpeg command, including the new metadata arguments, is constructed and passed to a function that executes it as a child process.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "482",
						"endLine": "482",
						"relevantVariables": [
							"runFfmpeg",
							"ffmpegArgs"
						]
					},
					"inputDataExample": "{\"ffmpegArgs\": [\"-i\", \"C:/videos/my-trip.mp4\", \"-c\", \"copy\", \"-metadata\", \"title=My Awesome Trip\", \"C:/videos/output/my-trip-edited.mp4\"]}",
					"outputDataExample": "{\"ffmpegArgs\": [\"-i\", \"C:/videos/my-trip.mp4\", \"-c\", \"copy\", \"-metadata\", \"title=My Awesome Trip\", \"C:/videos/output/my-trip-edited.mp4\"]}"
				},
				{
					"simStepId": "b9c1b90e-b931-4dab-98f3-bdc4b0e6c33f",
					"diagramNodeId": "98309d94-d144-447a-a0ef-516448532229",
					"simStepLabel": "Output File with New Metadata",
					"simStepDescription": "FFmpeg processes the input file and creates a new output file. The new file is a lossless copy that now contains the user-specified title in its container-level metadata, viewable in other media players and editors.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useFfmpegOperations.ts",
						"startLine": "482",
						"endLine": "482",
						"relevantVariables": [
							"runFfmpeg"
						]
					},
					"inputDataExample": "{\"processExitCode\": 0, \"stderr\": \"ffmpeg output log...\"}",
					"outputDataExample": "{\"outputFile\": \"C:/videos/output/my-trip-edited.mp4\"}"
				}
			],
			"description": "<ul><li>Allows users to modify container-level metadata such as title, author, and comments</li><li>It provides an interface to edit per-track metadata, like the language or title of an audio track, and change track 'disposition' to set defaults</li><li>This is primarily managed through the <code>StreamsSelector</li><li>tsx</code> component and its child <code>TagEditor</li><li>tsx</code></li></ul>",
			"simulationNodesAndEdges": {
				"44bb0916-1c38-4556-8138-6af52160f2c9": {
					"simStepIds": [
						"4a9e886e-c83a-4a83-aa9a-0255e1593db8"
					]
				},
				"e364ce6c-1250-48e0-b0aa-dcdd8bf585d9": {
					"simStepIds": [
						"46e88c5a-04a3-41e7-8a20-88a1d33375f5"
					]
				},
				"8181f0d8-0132-4b93-98b6-fd777aa5e45d": {
					"simStepIds": [
						"988c168d-d169-44e2-8db4-5fa824a2c9fc"
					]
				},
				"c697a034-ba9e-4c07-a007-9e5576db8364": {
					"simStepIds": [
						"fe019b51-f6a4-4d7c-92f5-57bfb4c33006"
					]
				},
				"f8cfc304-fc12-4138-9b9d-16287d5c68ef": {
					"simStepIds": [
						"b94f13fd-1350-41ac-9665-090724eb133a"
					]
				},
				"98309d94-d144-447a-a0ef-516448532229": {
					"simStepIds": [
						"b9c1b90e-b931-4dab-98f3-bdc4b0e6c33f"
					]
				},
				"35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10": {
					"simStepIds": [
						"a8032886-f843-42ff-a61a-ace33bffeea9"
					]
				},
				"d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9": {
					"simStepIds": [
						"47b9ec8a-12f2-4d8b-95ac-58f6504132b6"
					]
				},
				"6e73adea-b533-40bf-be8d-7222957dfa29": {
					"simStepIds": [
						"fb1d4f06-bd16-409d-92f0-be3a609fba92"
					]
				},
				"e49335ce-8e18-4eb4-8934-7122406f9aa8": {
					"simStepIds": [
						"2411a4bb-6054-4b50-9703-95fbf343470e"
					]
				},
				"a3f38611-e09d-480e-bbe0-3b2a555d4f6a": {
					"simStepIds": [
						"508dd45b-3ee9-4d5d-a56f-7b7b3d3b8ceb"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "TagEditor, StreamsSelector, customTagsByFile",
			"generationPrompt": "Editing File and Track Metadata",
			"generationKeywords": "TagEditor, StreamsSelector, customTagsByFile"
		},
		"Advanced Segment Manipulation on Timeline": {
			"name": "Advanced Segment Manipulation on Timeline",
			"simSteps": [
				{
					"simStepId": "f7da2115-31e3-45e8-9e57-488261e71e75",
					"diagramNodeId": "3f2b38be-7348-47a9-9067-95777a400ec4",
					"simStepLabel": "[Invert Flow] User Triggers Invert Segments",
					"simStepDescription": "The user initiates the 'Invert Segments' operation by clicking the 'Invert all segments on timeline' option from the 'Segments' menu in the application's top menu bar. This action is handled in the main process.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "324",
						"endLine": "328",
						"relevantVariables": [
							"mainWindow.webContents.send"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{\"event\": \"invertAllSegments\"}"
				},
				{
					"simStepId": "cc63814d-95aa-4cd0-aa20-73538e2ad2ba",
					"diagramNodeId": "186521f7-9226-4363-b238-efdf5356086a",
					"simStepLabel": "[Invert Flow] IPC Message to Renderer",
					"simStepDescription": "The main process sends an 'invertAllSegments' IPC message to the renderer process to instruct the main application window to perform the segment inversion.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "326",
						"endLine": "326",
						"relevantVariables": [
							"'invertAllSegments'"
						]
					},
					"inputDataExample": "{\"channel\": \"invertAllSegments\"}",
					"outputDataExample": "{\"channel\": \"invertAllSegments\"}"
				},
				{
					"simStepId": "ca2c6087-098f-4937-ac1b-f24daeefe21f",
					"diagramNodeId": "a224479d-e0b0-4429-9fe3-c586de862f1a",
					"simStepLabel": "[Invert Flow] Renderer Calls `invertAllSegments` Hook Function",
					"simStepDescription": "The renderer process receives the IPC message. The main App component, via its keyboard and action handling logic, invokes the `invertAllSegments` function provided by the `useSegments` custom hook.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "366",
						"endLine": "366",
						"relevantVariables": [
							"invertAllSegments",
							"useSegments"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{\"cutSegments\": [{\"start\": 10, \"end\": 20, \"name\": \"Scene 1\", \"segId\": \"d2b7d53b-012e-4b6a-9b3e-7a0c1e8d9f6b\"}, {\"start\": 35, \"end\": 45, \"name\": \"Scene 2\", \"segId\": \"a1c9e42f-87b1-4f2c-8d0a-9e1b2c3d4e5f\"}], \"fileDuration\": 60}"
				},
				{
					"simStepId": "22cf59bc-c947-4668-8652-9f81fde52a9e",
					"diagramNodeId": "3e040134-87f0-485e-81a9-9b38b73d7fea",
					"simStepLabel": "[Invert Flow] Passing Segments to Inversion Logic",
					"simStepDescription": "The `invertAllSegments` function inside the `useSegments` hook prepares the current list of segments. It filters out markers, sorts them, and passes the filtered list along with the total file duration to the core `invertSegments` utility function.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "294",
						"endLine": "294",
						"relevantVariables": [
							"invertSegments",
							"sortedSegments",
							"fileDuration"
						]
					},
					"inputDataExample": "{\"sortedSegments\": [{\"start\": 10, \"end\": 20, \"name\": \"Scene 1\", \"segId\": \"d2b7d53b-012e-4b6a-9b3e-7a0c1e8d9f6b\"}, {\"start\": 35, \"end\": 45, \"name\": \"Scene 2\", \"segId\": \"a1c9e42f-87b1-4f2c-8d0a-9e1b2c3d4e5f\"}], \"fileDuration\": 60}",
					"outputDataExample": "{\"sortedSegments\": [{\"start\": 10, \"end\": 20, \"name\": \"Scene 1\", \"segId\": \"d2b7d53b-012e-4b6a-9b3e-7a0c1e8d9f6b\"}, {\"start\": 35, \"end\": 45, \"name\": \"Scene 2\", \"segId\": \"a1c9e42f-87b1-4f2c-8d0a-9e1b2c3d4e5f\"}], \"fileDuration\": 60}"
				},
				{
					"simStepId": "ccfb1951-bbcd-4d12-8178-9768a5ba4cdc",
					"diagramNodeId": "51def865-de03-4187-85b6-ba86cf6d1936",
					"simStepLabel": "[Invert Flow] Core Inversion Logic Execution",
					"simStepDescription": "The `invertSegments` function calculates the gaps between the provided segments. It creates new segments to fill these gaps, effectively inverting the selection. It handles the start and end of the timeline based on provided flags.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/segments.ts",
						"startLine": "158",
						"endLine": "209",
						"relevantVariables": [
							"invertSegments",
							"sortedSegmentsIn",
							"duration",
							"out"
						]
					},
					"inputDataExample": "{\"sortedSegmentsIn\": [{\"start\": 10, \"end\": 20}, {\"start\": 35, \"end\": 45}], \"duration\": 60}",
					"outputDataExample": "{\"invertedSegments\": [{\"start\": 0, \"end\": 10}, {\"start\": 20, \"end\": 35}, {\"start\": 45, \"end\": 60}]}"
				},
				{
					"simStepId": "b0a049a0-2291-44f0-9b4e-114a07dede93",
					"diagramNodeId": "27b274fe-541f-41ae-b4ea-b75b03fcbcb6",
					"simStepLabel": "[Invert Flow] Return Inverted Segments",
					"simStepDescription": "The `invertSegments` function returns the newly created array of inverted segments back to the `useSegments` hook.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/segments.ts",
						"startLine": "208",
						"endLine": "208",
						"relevantVariables": [
							"out"
						]
					},
					"inputDataExample": "{\"invertedSegments\": [{\"start\": 0, \"end\": 10}, {\"start\": 20, \"end\": 35}, {\"start\": 45, \"end\": 60}]}",
					"outputDataExample": "{\"invertedSegments\": [{\"start\": 0, \"end\": 10}, {\"start\": 20, \"end\": 35}, {\"start\": 45, \"end\": 60}]}"
				},
				{
					"simStepId": "9d8e3dcd-9604-4c3d-9ca9-cc771de67142",
					"diagramNodeId": "8d01d37f-aab7-4e85-815d-4b14afe686c2",
					"simStepLabel": "[Invert Flow] Update State with Inverted Segments",
					"simStepDescription": "The `invertAllSegments` function in the hook receives the result, maps each new segment into a state-compatible object with a new ID, and updates the application's state using `safeSetCutSegments`. This triggers a UI re-render, displaying the inverted segments on the timeline.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "294",
						"endLine": "302",
						"relevantVariables": [
							"safeSetCutSegments",
							"newInverseCutSegments",
							"createIndexedSegment"
						]
					},
					"inputDataExample": "{\"inverseSegmentsAndMarkers\": [{\"start\": 0, \"end\": 10}, {\"start\": 20, \"end\": 35}, {\"start\": 45, \"end\": 60}]}",
					"outputDataExample": "{\"cutSegments\": [{\"start\": 0, \"end\": 10, \"segId\": \"...\"}, {\"start\": 20, \"end\": 35, \"segId\": \"...\"}, {\"start\": 45, \"end\": 60, \"segId\": \"...\"}]}"
				},
				{
					"simStepId": "9301e464-e767-4752-8918-5cdbc1ea7404",
					"diagramNodeId": "7f2155a4-b839-4e56-adf7-e3588ce38fd8",
					"simStepLabel": "[Combine Flow] User Triggers Combine Segments",
					"simStepDescription": "The user initiates the 'Combine Overlapping Segments' operation from the 'Segments' menu. This action is defined in the main process.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "306",
						"endLine": "310",
						"relevantVariables": [
							"mainWindow.webContents.send"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{\"event\": \"combineOverlappingSegments\"}"
				},
				{
					"simStepId": "cae7c2e7-2559-4035-bb9f-e9e785722f3b",
					"diagramNodeId": "173c03b6-39db-4d04-9025-2b021b534309",
					"simStepLabel": "[Combine Flow] IPC Message to Renderer",
					"simStepDescription": "The main process sends a 'combineOverlappingSegments' IPC message to the renderer process to execute the combination logic.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/main/menu.ts",
						"startLine": "308",
						"endLine": "308",
						"relevantVariables": [
							"'combineOverlappingSegments'"
						]
					},
					"inputDataExample": "{\"channel\": \"combineOverlappingSegments\"}",
					"outputDataExample": "{\"channel\": \"combineOverlappingSegments\"}"
				},
				{
					"simStepId": "58545d6d-e481-4e4b-ac77-f26f03f3f1a8",
					"diagramNodeId": "13fb567e-091d-438d-9b9e-a54c0669ccf3",
					"simStepLabel": "[Combine Flow] Renderer Calls `combineOverlappingSegments` Hook Function",
					"simStepDescription": "The renderer process, via the main App component's action handling, calls the `combineOverlappingSegments` function from the `useSegments` hook. This function will operate on the currently selected segments.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "367",
						"endLine": "367",
						"relevantVariables": [
							"combineOverlappingSegments",
							"useSegments"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{\"selectedSegments\": [{\"start\": 5, \"end\": 15, \"selected\": true}, {\"start\": 12, \"end\": 22, \"selected\": true}]}"
				},
				{
					"simStepId": "1fb35969-f799-4f56-85e6-ae3985f834a4",
					"diagramNodeId": "ea9caa83-779e-43b4-aa2f-9cfde7f94a28",
					"simStepLabel": "[Combine Flow] Passing Segments to Combination Logic",
					"simStepDescription": "The `combineOverlappingSegments` hook function filters the list of all segments to get only the selected ones and passes them to the core `combineOverlappingSegments2` utility function (aliased from `segments.ts`).",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "340",
						"endLine": "340",
						"relevantVariables": [
							"combineOverlappingSegments2",
							"existingSegments.filter((s) => s.selected)"
						]
					},
					"inputDataExample": "{\"selectedSegments\": [{\"start\": 5, \"end\": 15, \"name\": \"Part A\", \"segId\": \"e5a3c1d8-4f5b-4b6c-8a1d-9e0c3b2a1f8d\", \"selected\": true}, {\"start\": 12, \"end\": 22, \"name\": \"Part B\", \"segId\": \"f9b4d2e7-3e4d-4c5b-9b2e-8a1d9e0c3b2a\", \"selected\": true}]}",
					"outputDataExample": "{\"selectedSegments\": [{\"start\": 5, \"end\": 15, \"name\": \"Part A\", \"segId\": \"e5a3c1d8-4f5b-4b6c-8a1d-9e0c3b2a1f8d\", \"selected\": true}, {\"start\": 12, \"end\": 22, \"name\": \"Part B\", \"segId\": \"f9b4d2e7-3e4d-4c5b-9b2e-8a1d9e0c3b2a\", \"selected\": true}]}"
				},
				{
					"simStepId": "85edd41a-47b3-406a-83a5-84447dee6db9",
					"diagramNodeId": "2b5de623-18fd-40af-9d8c-21750eb5c26d",
					"simStepLabel": "[Combine Flow] Core Combination Logic Execution",
					"simStepDescription": "The `combineOverlappingSegments` utility function sorts the segments by start time, then iterates through them, merging any segments that overlap into a single segment with a start time from the first and an end time from the last overlapping segment.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/segments.ts",
						"startLine": "115",
						"endLine": "136",
						"relevantVariables": [
							"combineOverlappingSegments",
							"sortedSegments",
							"combined",
							"last"
						]
					},
					"inputDataExample": "{\"existingSegments\": [{\"start\": 5, \"end\": 15}, {\"start\": 12, \"end\": 22}]}",
					"outputDataExample": "{\"combinedSegments\": [{\"start\": 5, \"end\": 22}]}"
				},
				{
					"simStepId": "fc1b792e-fc06-4e69-b764-b133c5ad7b98",
					"diagramNodeId": "6eca0f1e-1b09-4591-8301-7de2905c0f68",
					"simStepLabel": "[Combine Flow] Return Combined Segments",
					"simStepDescription": "The utility function returns the new array containing the combined segments back to the `useSegments` hook.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/segments.ts",
						"startLine": "136",
						"endLine": "136",
						"relevantVariables": [
							"combined"
						]
					},
					"inputDataExample": "{\"combinedSegments\": [{\"start\": 5, \"end\": 22, \"name\": \"Part A\", \"segId\": \"e5a3c1d8-4f5b-4b6c-8a1d-9e0c3b2a1f8d\", \"selected\": true}]}",
					"outputDataExample": "{\"combinedSegments\": [{\"start\": 5, \"end\": 22, \"name\": \"Part A\", \"segId\": \"e5a3c1d8-4f5b-4b6c-8a1d-9e0c3b2a1f8d\", \"selected\": true}]}"
				},
				{
					"simStepId": "897dc8bf-7af7-4483-8d93-439ebe71a453",
					"diagramNodeId": "3fae905a-8e5a-4f9d-912f-4cf10d10ab20",
					"simStepLabel": "[Combine Flow] Update State with Combined Segments",
					"simStepDescription": "The hook function updates the application state by replacing the original selected segments with the newly combined ones, while keeping all unselected segments. This triggers a UI re-render.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "337",
						"endLine": "342",
						"relevantVariables": [
							"safeSetCutSegments",
							"combineOverlappingSegments2"
						]
					},
					"inputDataExample": "{\"combinedSegments\": [{\"start\": 5, \"end\": 22, \"name\": \"Part A\", \"segId\": \"e5a3c1d8-...\"}]}",
					"outputDataExample": "{\"newCutSegments\": [{\"start\": 0, \"end\": 3, \"selected\": false}, {\"start\": 5, \"end\": 22, \"selected\": true}, {\"start\": 30, \"end\": 40, \"selected\": false}]}"
				},
				{
					"simStepId": "5807cb31-3a26-4919-837c-45f6a8e25d38",
					"diagramNodeId": "31d722ba-a2c7-48e5-8687-5c3c5abf6260",
					"simStepLabel": "[Split Flow] User Triggers Split Segment",
					"simStepDescription": "The user clicks the 'Split segment at cursor' button in the Segment List UI. This action is only available if the playhead is currently over a segment.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/SegmentList.tsx",
						"startLine": "443",
						"endLine": "447",
						"relevantVariables": [
							"splitCurrentSegment",
							"onClick"
						]
					},
					"inputDataExample": "{\"event\": \"onClick\"}",
					"outputDataExample": "{}"
				},
				{
					"simStepId": "7d8626e5-bedd-4a8d-9657-a8a9b6fa56a3",
					"diagramNodeId": "0eb055af-faee-417c-ae68-e2b89e7ca762",
					"simStepLabel": "[Split Flow] Event Bubbles to App Component",
					"simStepDescription": "The `onClick` event triggers the `splitCurrentSegment` function, which was passed down as a prop from the main `App` component, ultimately originating from the `useSegments` hook.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/App.tsx",
						"startLine": "2652",
						"endLine": "2652",
						"relevantVariables": [
							"splitCurrentSegment"
						]
					},
					"inputDataExample": "{}",
					"outputDataExample": "{}"
				},
				{
					"simStepId": "3ff1ad81-a548-4df7-8e22-b2d42b4607fb",
					"diagramNodeId": "243c6b3d-7fac-4f13-b670-62533df24ebd",
					"simStepLabel": "[Split Flow] `splitCurrentSegment` Logic Execution",
					"simStepDescription": "The `splitCurrentSegment` function in the `useSegments` hook executes. It first gets the current playhead time and then finds which existing segment is at that time.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "579",
						"endLine": "583",
						"relevantVariables": [
							"splitCurrentSegment",
							"getRelevantTime",
							"findSegmentsAtCursor"
						]
					},
					"inputDataExample": "{\"currentTime\": 22.5}",
					"outputDataExample": "{\"segmentToSplit\": {\"start\": 10, \"end\": 30, \"name\": \"Long take\", \"segId\": \"c7b6a5d4-3e2d-4c1b-9a8e-7f6d5c4b3a21\"}}"
				},
				{
					"simStepId": "e3db0f11-4e61-4aed-9539-24c297c149b0",
					"diagramNodeId": "bb3f0916-e310-4f36-a7df-7a1cf4ae9045",
					"simStepLabel": "[Split Flow] Preparing New Segment Data",
					"simStepDescription": "The function modifies the original segment's end time to the split time. It then creates a new segment object that starts at the split time and has the same end time as the original segment.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "589",
						"endLine": "599",
						"relevantVariables": [
							"segmentToSplit",
							"newSegment",
							"updateSegAtIndex",
							"createIndexedSegment"
						]
					},
					"inputDataExample": "{\"segmentToSplit\": {\"start\": 10, \"end\": 30}, \"splitTime\": 22.5}",
					"outputDataExample": "{\"updatedOriginalSegment\": {\"start\": 10, \"end\": 22.5}, \"newSegment\": {\"start\": 22.5, \"end\": 30}}"
				},
				{
					"simStepId": "bdb38b0a-8b2d-4cd5-b92a-b0311f36f6f7",
					"diagramNodeId": "8ed4737a-df10-49cf-9730-e696349f2f22",
					"simStepLabel": "[Split Flow] Constructing Updated Segment List",
					"simStepDescription": "The function constructs a new array of all segments. It finds the index of the original segment and inserts the newly created segment immediately after it.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "601",
						"endLine": "606",
						"relevantVariables": [
							"safeSetCutSegments",
							"old",
							"newCutSegments"
						]
					},
					"inputDataExample": "{\"currentSegments\": [{\"start\": 0, \"end\": 5}, {\"start\": 10, \"end\": 22.5}, {\"start\": 40, \"end\": 50}], \"newSegment\": {\"start\": 22.5, \"end\": 30}}",
					"outputDataExample": "{\"newCutSegments\": [{\"start\": 0, \"end\": 5}, {\"start\": 10, \"end\": 22.5}, {\"start\": 22.5, \"end\": 30}, {\"start\": 40, \"end\": 50}]}"
				},
				{
					"simStepId": "43d1ada2-fad0-4955-a678-abca1222f245",
					"diagramNodeId": "5208c434-02d8-46b4-a43c-057ee92df774",
					"simStepLabel": "[Split Flow] Passing New List to State Setter",
					"simStepDescription": "The newly constructed list of segments, now containing the two split parts, is passed to the `safeSetCutSegments` state setter function.",
					"isEdge": 1,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "601",
						"endLine": "601",
						"relevantVariables": [
							"safeSetCutSegments"
						]
					},
					"inputDataExample": "{\"newCutSegments\": [{\"start\": 0, \"end\": 5}, {\"start\": 10, \"end\": 22.5, \"segId\": \"...\"}, {\"start\": 22.5, \"end\": 30, \"segId\": \"...\"}, {\"start\": 40, \"end\": 50}]}",
					"outputDataExample": "{\"newCutSegments\": [{\"start\": 0, \"end\": 5}, {\"start\": 10, \"end\": 22.5, \"segId\": \"...\"}, {\"start\": 22.5, \"end\": 30, \"segId\": \"...\"}, {\"start\": 40, \"end\": 50}]}"
				},
				{
					"simStepId": "afe7418e-42b8-476a-bdb5-270946172431",
					"diagramNodeId": "351e81f1-fe34-49ef-8219-de19aee749f9",
					"simStepLabel": "[Split Flow] State Update and UI Re-render",
					"simStepDescription": "The `safeSetCutSegments` function updates the `cutSegments` state with the new array. This change in state triggers React to re-render the components, showing the single segment now split into two on the timeline.",
					"isEdge": 0,
					"sourceCodeMapping": {
						"filePath": "src/renderer/src/hooks/useSegments.ts",
						"startLine": "601",
						"endLine": "606",
						"relevantVariables": [
							"safeSetCutSegments"
						]
					},
					"inputDataExample": "{\"newCutSegments\": [{\"start\": 0, \"end\": 5}, {\"start\": 10, \"end\": 22.5, \"segId\": \"c7b6a5...\"}, {\"start\": 22.5, \"end\": 30, \"segId\": \"a9e8f7...\"}, {\"start\": 40, \"end\": 50}]}",
					"outputDataExample": "{}"
				}
			],
			"description": "<ul><li>Offers advanced operations on timeline segments</li><li>Users can invert segments to keep the parts <em>outside</em> the defined cuts (e</li><li>g</li><li>, for removing commercials)</li><li>Overlapping segments can be automatically combined into a single larger segment, and any segment can be split in two at the current playhead position</li><li>The core logic is found in <code>src/renderer/src/segments</li><li>ts</code></li></ul>",
			"simulationNodesAndEdges": {
				"3f2b38be-7348-47a9-9067-95777a400ec4": {
					"simStepIds": [
						"f7da2115-31e3-45e8-9e57-488261e71e75"
					]
				},
				"a224479d-e0b0-4429-9fe3-c586de862f1a": {
					"simStepIds": [
						"ca2c6087-098f-4937-ac1b-f24daeefe21f"
					]
				},
				"51def865-de03-4187-85b6-ba86cf6d1936": {
					"simStepIds": [
						"ccfb1951-bbcd-4d12-8178-9768a5ba4cdc"
					]
				},
				"8d01d37f-aab7-4e85-815d-4b14afe686c2": {
					"simStepIds": [
						"9d8e3dcd-9604-4c3d-9ca9-cc771de67142"
					]
				},
				"7f2155a4-b839-4e56-adf7-e3588ce38fd8": {
					"simStepIds": [
						"9301e464-e767-4752-8918-5cdbc1ea7404"
					]
				},
				"13fb567e-091d-438d-9b9e-a54c0669ccf3": {
					"simStepIds": [
						"58545d6d-e481-4e4b-ac77-f26f03f3f1a8"
					]
				},
				"2b5de623-18fd-40af-9d8c-21750eb5c26d": {
					"simStepIds": [
						"85edd41a-47b3-406a-83a5-84447dee6db9"
					]
				},
				"3fae905a-8e5a-4f9d-912f-4cf10d10ab20": {
					"simStepIds": [
						"897dc8bf-7af7-4483-8d93-439ebe71a453"
					]
				},
				"31d722ba-a2c7-48e5-8687-5c3c5abf6260": {
					"simStepIds": [
						"5807cb31-3a26-4919-837c-45f6a8e25d38"
					]
				},
				"243c6b3d-7fac-4f13-b670-62533df24ebd": {
					"simStepIds": [
						"3ff1ad81-a548-4df7-8e22-b2d42b4607fb"
					]
				},
				"8ed4737a-df10-49cf-9730-e696349f2f22": {
					"simStepIds": [
						"bdb38b0a-8b2d-4cd5-b92a-b0311f36f6f7"
					]
				},
				"351e81f1-fe34-49ef-8219-de19aee749f9": {
					"simStepIds": [
						"afe7418e-42b8-476a-bdb5-270946172431"
					]
				},
				"186521f7-9226-4363-b238-efdf5356086a": {
					"simStepIds": [
						"cc63814d-95aa-4cd0-aa20-73538e2ad2ba"
					]
				},
				"3e040134-87f0-485e-81a9-9b38b73d7fea": {
					"simStepIds": [
						"22cf59bc-c947-4668-8652-9f81fde52a9e"
					]
				},
				"27b274fe-541f-41ae-b4ea-b75b03fcbcb6": {
					"simStepIds": [
						"b0a049a0-2291-44f0-9b4e-114a07dede93"
					]
				},
				"173c03b6-39db-4d04-9025-2b021b534309": {
					"simStepIds": [
						"cae7c2e7-2559-4035-bb9f-e9e785722f3b"
					]
				},
				"ea9caa83-779e-43b4-aa2f-9cfde7f94a28": {
					"simStepIds": [
						"1fb35969-f799-4f56-85e6-ae3985f834a4"
					]
				},
				"6eca0f1e-1b09-4591-8301-7de2905c0f68": {
					"simStepIds": [
						"fc1b792e-fc06-4e69-b764-b133c5ad7b98"
					]
				},
				"0eb055af-faee-417c-ae68-e2b89e7ca762": {
					"simStepIds": [
						"7d8626e5-bedd-4a8d-9657-a8a9b6fa56a3"
					]
				},
				"bb3f0916-e310-4f36-a7df-7a1cf4ae9045": {
					"simStepIds": [
						"e3db0f11-4e61-4aed-9539-24c297c149b0"
					]
				},
				"5208c434-02d8-46b4-a43c-057ee92df774": {
					"simStepIds": [
						"43d1ada2-fad0-4955-a678-abca1222f245"
					]
				}
			},
			"isAIGenerated": true,
			"keywords": "invertSegments, combineOverlappingSegments, splitCurrentSegment",
			"generationPrompt": "Advanced Segment Manipulation on Timeline",
			"generationKeywords": "invertSegments, combineOverlappingSegments, splitCurrentSegment"
		}
	},
	"cellToPath": {
		"08f574e7-9261-46ab-a2a4-e20060722bf1": "src",
		"b9187016-b5ee-4447-85ce-a5969e6e0bd1": "src/renderer",
		"6e32cfe4-6534-4175-993d-def5cfa859bf": "src/renderer/src",
		"3c6792a6-2b59-4658-8e1b-7a309b404b40": "src/renderer/src/App.tsx",
		"7e49f83d-ae9d-47b3-a830-816fcfb91933": "src/renderer/src/hooks",
		"60c0bf90-c76e-42a3-bfe5-baddf9ffde4c": "src/renderer/src/hooks/useFfmpegOperations.ts",
		"fe2d22b0-0ef4-48b7-9d4a-255979f68b67": "src/renderer/src/App.tsx-simstep-845251c0-7452-4a4b-8012-c8ec97276b91",
		"de110d79-f4d1-4207-9f70-d81c9e80873c": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-65ff028f-6203-4209-9b7c-e1e2ad08f2ea",
		"a42e2f9e-821b-4469-92a9-270ed3c2fcaf": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-094622c7-3c67-4c0c-9127-f74b44e287c9",
		"d2ff73e2-fc80-48b8-8405-0a5d1c9e406b": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-94a85694-deba-4194-bbdc-a7259f092fd3",
		"300bb67a-6d77-4cd3-9752-0504b721b3f1": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-02f4ae7d-a804-4596-a7a1-283443f846ac",
		"3fbb97de-244f-4d2f-81da-c826f31797ad": "src/renderer/src/App.tsx-simstep-4eb0e9e5-71df-47bd-b79f-cfb6912c5dc8",
		"eb1e541d-893f-46d8-a04a-fb59997562e6": "generated-edge-simstep-20bb3bf1-3b85-4cb1-ad93-85980f847002-eb1e541d-893f-46d8-a04a-fb59997562e6",
		"d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f": "generated-edge-simstep-75a49b6d-aca5-483b-ae62-9db1e8066ca6-d8fa064a-c45e-46ca-b9c2-0c1fb384ba9f",
		"64a4e618-8662-4f28-8ac6-fd723229e316": "generated-edge-simstep-bfede9c1-b355-4fe4-9743-aec91885be39-64a4e618-8662-4f28-8ac6-fd723229e316",
		"665b9b8d-5ebf-4595-a962-92e96bf0bb8c": "generated-edge-simstep-e32e2f34-4a4e-4082-9085-29163c74ee3d-665b9b8d-5ebf-4595-a962-92e96bf0bb8c",
		"4b6225fd-880e-4303-a556-046cdf4f3bec": "generated-edge-simstep-55eeda84-7f47-44a6-b0d8-c3d460ad7f42-4b6225fd-880e-4303-a556-046cdf4f3bec",
		"269ebc34-b745-4d7a-b2dc-e2d96c460f42": "src/main",
		"32eec39f-6ea1-43b3-9abf-a9309536057d": "src/main/ffmpeg.ts",
		"4d8cdb8b-92f1-4031-9deb-8db560dd8fd4": "src/renderer/src/components",
		"0480baa3-5d8d-4682-a2a0-40501c4f8b6f": "src/renderer/src/ffmpeg.ts",
		"67bad1d2-fef9-41fd-968a-99a1cbc0dc87": "src/renderer/src/components/ConcatDialog.tsx",
		"2d06215c-fe3e-4416-a3c7-fe10657bf467": "src/renderer/src/components/ConcatDialog.tsx-simstep-ac922fa1-891d-4a0b-887b-3c45a5b73c3b",
		"ac7b945f-009b-48d8-b31c-1d605096bd36": "src/renderer/src/App.tsx-simstep-863ff54c-7df3-4a46-b9a1-35635cab1400",
		"98403ab6-6ec1-4bdd-b9d2-91bea01c233b": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-c1b749bd-c3f1-4a1a-917f-879fdc03fe75",
		"d28248f6-2c22-40b4-bc29-a0b9948ed507": "src/renderer/src/ffmpeg.ts-simstep-ffc9135c-640e-45bc-9963-f91a56c4be28",
		"a9e2aacd-aa48-45a3-9abc-e4155c788650": "src/main/ffmpeg.ts-simstep-a188d42d-7b37-4af8-899e-515c2b18fec1",
		"fbb618a0-e07c-46d7-8948-808dafdc9dc7": "generated-edge-simstep-2927425d-e2d1-4c68-a682-333f31ad6394-fbb618a0-e07c-46d7-8948-808dafdc9dc7",
		"435dd0f4-2dae-4277-9f80-6dfe96e3dd31": "generated-edge-simstep-83054c09-b200-4d3b-8723-d6e4c8d163a6-435dd0f4-2dae-4277-9f80-6dfe96e3dd31",
		"53f57e02-1e21-454a-911a-dae6b5c88f05": "generated-edge-simstep-260737b5-8e03-4587-993c-a3d00af7fb21-53f57e02-1e21-454a-911a-dae6b5c88f05",
		"24ae749a-dfd1-467a-b652-5223c9e46fef": "generated-edge-simstep-5433a936-c1ba-43aa-8955-51f5a0dc427d-24ae749a-dfd1-467a-b652-5223c9e46fef",
		"5dbe3c60-4b67-4779-affd-efe158861967": "src/renderer/src/StreamsSelector.tsx",
		"39368be4-a7c3-4fa3-b45a-d18710dcf6c5": "src/renderer/src/util",
		"e95f28c1-0b53-4ac8-9f2b-b5bb46422e04": "src/renderer/src/hooks/useStreamsMeta.ts",
		"d304265f-c403-46aa-b3ef-0db7c41f2760": "src/renderer/src/util/streams.ts",
		"278368fe-f438-43ce-b29e-2dd4620f6144": "src/renderer/src/App.tsx-simstep-955ac900-0c55-4874-a6b0-79d5d2d837bd",
		"89f6803e-d025-491d-a31d-ce4a63331ded": "src/renderer/src/StreamsSelector.tsx-simstep-e33fd41f-8e45-4629-891a-96bfe74befea",
		"cccadc33-0f5b-4dab-be58-f6bbbe92f112": "src/renderer/src/hooks/useStreamsMeta.ts-simstep-45111440-dac7-4619-9756-f78f1df3cd51",
		"29714876-444b-4ff3-9380-8eb92263b487": "src/renderer/src/util/streams.ts-simstep-f8e52e75-cb21-49b8-b08b-30f1528d8813",
		"85c1e7e6-d4fb-4f2c-b0a3-d103d579f37c": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-af6a3da3-d0fd-4655-b7c0-2b80659eb50c",
		"fe33d7f0-dc9a-4170-be8d-bfb30bb090db": "src/renderer/src/App.tsx-simstep-27c9cc5e-0f71-47ec-9662-16036a682f0e",
		"363164a0-9f86-43c6-b468-3925e202f374": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b8f2de2b-803a-4c4b-b156-49db2f78fe25",
		"65d636c5-f1de-4017-ba01-a72fa4bfcce6": "generated-edge-simstep-39c8dad5-33f3-4912-9d50-738cb104ddd6-65d636c5-f1de-4017-ba01-a72fa4bfcce6",
		"8686cae6-d053-49ad-9fd8-de57ee5eb608": "generated-edge-simstep-59233149-9951-4ea3-8265-e0aad9419c63-8686cae6-d053-49ad-9fd8-de57ee5eb608",
		"4680330c-14bb-48b3-8109-2ec8112c9523": "generated-edge-simstep-e19af8ee-1182-4654-8381-19cd25d59c61-4680330c-14bb-48b3-8109-2ec8112c9523",
		"66fadc68-79f0-4536-aea5-d88ff355b207": "generated-edge-simstep-76e62589-7a50-4e68-aa44-e60258bc8fb9-66fadc68-79f0-4536-aea5-d88ff355b207",
		"d369e114-6ba4-4890-a02b-049875d226a3": "generated-edge-simstep-618f93b5-e302-495a-b5a4-73b2715e8097-d369e114-6ba4-4890-a02b-049875d226a3",
		"14ed4fa6-f08f-460f-be82-0791033d8061": "src/main/menu.ts",
		"041949e8-3540-4e65-b1a4-85251626e35a": "src/renderer/src/components/OutputFormatSelect.tsx",
		"e4b79729-7cda-4e49-8549-edb007ea3edd": "src/renderer/src/components/OutputFormatSelect.tsx-simstep-f427d759-56a1-41a0-80fe-b023c1dce208",
		"87dcacf4-cd17-41d5-979f-951f6de2df0d": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-9ddf9512-4cd7-4624-a73e-42c7226a4b2a",
		"d541368c-3351-4ecf-b558-521e7a2da2e4": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-031e71fd-9b3c-497f-aadd-c28741dfc46c",
		"0ffa312b-b42c-4731-9198-454bb47379ad": "src/main/menu.ts-simstep-8bf66a0d-a5d6-4d8f-90d9-8d31cb11506c",
		"a4014582-24ef-42f2-b4a7-547fe51eee4f": "src/renderer/src/App.tsx-simstep-aee3ba2d-a5a4-4722-bffa-117747a9baa2",
		"bd46cc28-1881-4d51-88b4-a9226d123c19": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-6b85e666-b0ef-41bb-8508-7e05c2717090",
		"03273e09-5637-4dd1-918a-91542bcb2eec": "src/renderer/src/App.tsx-simstep-213b4de5-e0db-45e8-8800-5a6bd805b2d7",
		"9ea28bb1-20d6-444c-b3fc-fc002e010695": "generated-edge-simstep-63df2f35-2328-48d0-bac2-e5c7fd10cff7-9ea28bb1-20d6-444c-b3fc-fc002e010695",
		"afd1e437-6b9c-426f-9c83-b9b161394bfb": "generated-edge-simstep-5d2b4804-1a23-4478-be35-3b603073c0a0-afd1e437-6b9c-426f-9c83-b9b161394bfb",
		"91584e67-3532-45b7-8a12-113fbe2220c9": "generated-edge-simstep-0d57c4e8-0661-4bc3-b44b-4c9254d9cf2a-91584e67-3532-45b7-8a12-113fbe2220c9",
		"9326d5a0-398d-4452-a0b5-33161bc10fd8": "generated-edge-simstep-ae4b4a67-e1c8-436f-98c6-929fcfdd8b2e-9326d5a0-398d-4452-a0b5-33161bc10fd8",
		"7d94b105-bb7f-4a7c-a656-0827e985c10a": "generated-edge-simstep-de08474e-5547-496e-bfde-ba84aceff85a-7d94b105-bb7f-4a7c-a656-0827e985c10a",
		"25e70706-236e-4980-b3ee-c3a693731783": "src/renderer/src/smartcut.ts",
		"5052c1c3-91bb-4c73-8e31-d7d619dda2ac": "src/renderer/src/components/ExportConfirm.tsx",
		"a082670c-4826-432f-82ab-22c57fcac9da": "src/renderer/src/components/ExportConfirm.tsx-simstep-41d0cbd1-99b2-4b9a-b291-0dbe5a2f88e9",
		"ba14524f-0627-4818-b255-c0f39aba0926": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-3d80835f-159e-412d-9da6-3166ad9782ab",
		"9d3ced96-2c64-4920-926a-e111aeab43d9": "src/renderer/src/smartcut.ts-simstep-98f7863b-55ac-4cc4-8e10-10ed2b48680c",
		"5f631d25-f39b-42db-aadb-5a3ae1f3d35a": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-03207e44-e3f8-4bb5-bfbc-f4d8566c5ae9",
		"793e945f-70c8-4583-8a69-9defa4fd895e": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-fb1e959e-770f-42ea-9fb7-87ce48613ccb",
		"eaf7e7ea-1f08-43db-be35-fe5883680fb0": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-426751d7-e093-4f4f-8fae-20213883b58f",
		"9e5a8f61-0a9f-438a-8a19-4f5911ee938a": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-c629b7a3-c9e0-4527-aa02-078be0b06664",
		"a24fc8c3-5674-47a5-9c53-0609c9e8d115": "generated-edge-simstep-41492037-e0b6-4220-ad5c-23eba6cf1689-a24fc8c3-5674-47a5-9c53-0609c9e8d115",
		"f778dfab-f74b-4339-a019-6119ea0f2101": "generated-edge-simstep-e2eead9e-be36-456f-8960-c5e28b374275-f778dfab-f74b-4339-a019-6119ea0f2101",
		"1c1f3377-03b7-4195-bf0d-923e6cc7546d": "generated-edge-simstep-54538d16-d54a-4d1e-a451-ed10157f65ca-1c1f3377-03b7-4195-bf0d-923e6cc7546d",
		"684f87e0-d7aa-4e1f-9125-f53a18bfc9e9": "generated-edge-simstep-ecc2789d-1fa8-42a9-a05e-e214e4f739c9-684f87e0-d7aa-4e1f-9125-f53a18bfc9e9",
		"bf477e73-2f9a-4ce1-bb76-89c70b63776a": "generated-edge-simstep-b9fe3c66-2db3-4c7e-a78a-27e9f79e4ac1-bf477e73-2f9a-4ce1-bb76-89c70b63776a",
		"0f401530-8b31-439f-8d86-78c3fc2c613a": "generated-edge-simstep-a0f54978-a468-420b-9339-55d6c89ffbb3-0f401530-8b31-439f-8d86-78c3fc2c613a",
		"8c1e43d7-fc51-4ba9-ba0a-543e07c54b28": "src/renderer/src/hooks/useSegments.ts",
		"be0399f3-aafe-458a-91c0-3cd8256e9ab8": "src/main/menu.ts-simstep-40371c98-e32f-4c44-88de-65a268b0365d",
		"cb2d5282-649d-4169-9459-bd5722c494b2": "src/renderer/src/App.tsx-simstep-ed52fb91-1af8-488d-aadf-191b5bd500b2",
		"37245537-83e0-4424-8828-38ed04ce7af6": "src/renderer/src/hooks/useSegments.ts-simstep-15be662c-7685-488b-a47c-fced395616dd",
		"37cfdc91-2660-4067-aaa0-90217d83c698": "src/main/ffmpeg.ts-simstep-cdb7e529-e5ce-42b5-8f47-68240dc70caf",
		"ddb47d87-44fe-4a40-b379-d89682b80404": "src/main/ffmpeg.ts-simstep-af8d83bf-8f21-48e3-9167-bb0f9e810d6e",
		"5241093d-0c10-4147-89ad-9c47e0c8a2bb": "src/renderer/src/hooks/useSegments.ts-simstep-c0969ce8-50b4-4827-81d2-25bba7b52713",
		"b803913c-42c9-43d8-8575-6757b399ed40": "src/renderer/src/App.tsx-simstep-02e786cd-aa09-446c-b601-8abb229d3006",
		"bc63267c-2d3e-4527-8c13-366857538486": "generated-edge-simstep-86d61117-e9ba-456d-ba91-c15faeac6329-bc63267c-2d3e-4527-8c13-366857538486",
		"0b975994-c566-4ec8-9b77-c4fc01fc0778": "generated-edge-simstep-595957a2-d81e-4772-b5d3-66a01a313b07-0b975994-c566-4ec8-9b77-c4fc01fc0778",
		"8fb0eef8-b010-4d5b-8a97-307002463373": "generated-edge-simstep-b867447b-34e3-45c9-b64d-5a0270e68156-8fb0eef8-b010-4d5b-8a97-307002463373",
		"40eb651f-95df-4092-9e3b-32800adadd06": "generated-edge-simstep-7d14d62e-751d-4580-b72c-9404c5a7e3f2-40eb651f-95df-4092-9e3b-32800adadd06",
		"23fd92ba-e3a8-4b04-80b1-8451f0774db6": "generated-edge-simstep-c7666ef9-d773-4def-baca-911ccb7836a1-23fd92ba-e3a8-4b04-80b1-8451f0774db6",
		"8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5": "generated-edge-simstep-e9a1c29e-fb83-437a-805a-82fe14f04fd5-8d84a6e7-3fab-4a4b-a7da-558d8e91fcb5",
		"31642bd3-508e-4846-82f7-69175958853a": "src/renderer/src/edlStore.ts",
		"ce0afe19-7f7a-4eab-a68e-60c2d7cddf6e": "src/renderer/src/edlFormats.ts",
		"8132c00a-6af6-429d-b6b9-16c2b93f8af7": "src/main/menu.ts-simstep-d20ea994-dd2c-4f30-bdb9-e578fe2db09d",
		"3be1cc98-9f00-4ec4-b9ae-b89114477cac": "src/renderer/src/App.tsx-simstep-7b06b4b9-5998-4da9-a4f0-0ecd26beb4a6",
		"12d0fa17-0475-450a-92f5-b5667b3540e5": "src/renderer/src/edlStore.ts-simstep-23e2dcc5-356b-456a-ad5f-8f0a5e7f5208",
		"5d7657a9-18cf-4461-baee-23cf277e15df": "src/renderer/src/edlFormats.ts-simstep-2573bac3-ef83-4317-8fd9-d95b9179b062",
		"f5e2907f-63c2-419a-8d37-cd625c321a57": "src/renderer/src/App.tsx-simstep-2e47980d-2b90-4e07-b525-55d0a7066f71",
		"d4a22f5b-fcda-4a11-9fbb-e19a52a4b7ca": "src/main/menu.ts-simstep-ae5699f1-d8c0-49eb-8b5c-04086b2b8c5d",
		"3e09cd2d-52ef-4b0b-a5fb-972f78bab761": "src/renderer/src/App.tsx-simstep-d7853b0d-1469-446f-97a4-8f4917bcc39c",
		"f2c09708-cd24-4092-9948-c8497f0169a7": "src/renderer/src/edlStore.ts-simstep-d27362df-12ad-4537-8ad0-6773f1007d7a",
		"674617d8-eef8-4226-bfb4-f1e1883cf1c5": "src/renderer/src/edlFormats.ts-simstep-50d00e9f-edde-4033-b5ae-f51aba69975a",
		"e7cd4725-f11e-4689-82a3-18ecd0bcec83": "src/renderer/src/edlStore.ts-simstep-528b00f4-ae1a-44a0-a878-7956402a1e54",
		"a8a903a5-f2ed-4eef-9d74-491986cb8f76": "generated-edge-simstep-d6bf5102-ac1a-4da3-94be-e5cb9280dc73-a8a903a5-f2ed-4eef-9d74-491986cb8f76",
		"0b438473-97e3-4504-b856-779156a0774d": "generated-edge-simstep-a8b3a5b1-36e5-47e1-8b91-98689158cf71-0b438473-97e3-4504-b856-779156a0774d",
		"7e0ab734-d424-44a5-ae87-5e2bc7e5f629": "generated-edge-simstep-fb7685d1-a9fd-46f4-805b-360e4ee276a4-7e0ab734-d424-44a5-ae87-5e2bc7e5f629",
		"7526d6c5-59f6-4293-9656-9c52bafc6516": "generated-edge-simstep-b70e2054-18b8-4684-af31-5e0a98cb193d-7526d6c5-59f6-4293-9656-9c52bafc6516",
		"5420e169-ff0c-40cc-af81-2f8b3ef52899": "generated-edge-simstep-ce53852f-9230-4518-83f7-67c19aa1f17e-5420e169-ff0c-40cc-af81-2f8b3ef52899",
		"2fe168cb-edec-4f7e-a799-4639d808b5e6": "generated-edge-simstep-14dac8dd-53d7-465c-8685-40daac53b612-2fe168cb-edec-4f7e-a799-4639d808b5e6",
		"6a73fc2a-2ea4-424a-9adf-1e8b234193bb": "generated-edge-simstep-7a556467-3147-43c8-abc7-ed2d98cf50c1-6a73fc2a-2ea4-424a-9adf-1e8b234193bb",
		"a455187c-9171-4787-b1eb-13f324c0dce0": "generated-edge-simstep-c2ca5c19-4603-4ca3-b7de-8121f4a82033-a455187c-9171-4787-b1eb-13f324c0dce0",
		"d263d28e-33a2-4457-9e76-89873582ee51": "src/renderer/src/BottomBar.tsx",
		"197b4bf0-df82-4800-9fde-dd2b5f1705c7": "src/renderer/src/dialogs",
		"4e6a5b3a-8901-4162-8137-3fe70dc0f0bd": "src/renderer/src/hooks/useFrameCapture.ts",
		"c74208fe-d712-4001-82d9-09b9305f1f8b": "src/renderer/src/dialogs/extractFrames.tsx",
		"5899327c-9400-40f9-878b-614dbc189747": "src/renderer/src/BottomBar.tsx-simstep-ea5ac674-2bfc-489d-808f-76363db563d4",
		"3a8a4cb2-dcba-43f7-8be3-b464a572e138": "src/renderer/src/App.tsx-simstep-173ecc7a-95f8-4554-a47c-644510ad0dd5",
		"1be22197-755b-40c1-8231-6fb608c02044": "src/main/ffmpeg.ts-simstep-78826a87-8c3c-46ac-b641-a502a73fa459",
		"05d22903-b741-44cd-a40f-d6294542efdb": "src/renderer/src/App.tsx-simstep-2bbb9120-cc5a-4728-a757-a793aeaab9da",
		"bca28915-50c6-4c4a-967a-d3ccc6f8c42a": "src/renderer/src/dialogs/extractFrames.tsx-simstep-b15d12d0-6a2e-49c9-8273-33f9473ea5a6",
		"231861b0-ddcf-4129-8f75-49a63bf9b379": "src/renderer/src/App.tsx-simstep-ee5cf021-2f21-4b87-8636-49838317018b",
		"d0ee992f-e79c-4acc-ac1c-16fafe2a07f2": "src/main/ffmpeg.ts-simstep-f67ab7d7-8548-408b-a182-457f662f46ad",
		"9c9c85c3-b4a1-4767-8264-999e40b2d754": "src/renderer/src/App.tsx-simstep-21467898-a81a-4dbe-8ee2-2fc84400d6fd",
		"33683624-370a-4b7e-8c6a-6c88a43240bc": "generated-edge-simstep-0de15a15-1f53-4261-b1dd-f4f00015b026-33683624-370a-4b7e-8c6a-6c88a43240bc",
		"eea2e371-ef9c-49c8-bbf9-1e74c4c11433": "generated-edge-simstep-08683851-3460-4a81-b51d-6b9b04181158-eea2e371-ef9c-49c8-bbf9-1e74c4c11433",
		"d2850200-1088-4c62-88ab-cc574dd3f70d": "generated-edge-simstep-090045bf-7b75-4225-b95e-424a274a179c-d2850200-1088-4c62-88ab-cc574dd3f70d",
		"18b4a40d-a82e-4247-9572-98bfb3da73b1": "generated-edge-simstep-6e59692d-410e-4cfd-bd53-6c154b73d948-18b4a40d-a82e-4247-9572-98bfb3da73b1",
		"1704c16d-ebcc-44ff-8c7e-68159315e892": "generated-edge-simstep-3b54127a-920d-4c3b-a6c1-bc6ed6a6f44c-1704c16d-ebcc-44ff-8c7e-68159315e892",
		"8729cbb8-4f27-4578-b465-900583cb7a2e": "generated-edge-simstep-0213e7b6-7e23-42ea-90e6-9a9f89edd818-8729cbb8-4f27-4578-b465-900583cb7a2e",
		"44bb0916-1c38-4556-8138-6af52160f2c9": "src/renderer/src/App.tsx-simstep-4a9e886e-c83a-4a83-aa9a-0255e1593db8",
		"e364ce6c-1250-48e0-b0aa-dcdd8bf585d9": "src/renderer/src/StreamsSelector.tsx-simstep-46e88c5a-04a3-41e7-8a20-88a1d33375f5",
		"8181f0d8-0132-4b93-98b6-fd777aa5e45d": "src/renderer/src/StreamsSelector.tsx-simstep-988c168d-d169-44e2-8db4-5fa824a2c9fc",
		"c697a034-ba9e-4c07-a007-9e5576db8364": "src/renderer/src/App.tsx-simstep-fe019b51-f6a4-4d7c-92f5-57bfb4c33006",
		"f8cfc304-fc12-4138-9b9d-16287d5c68ef": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b94f13fd-1350-41ac-9665-090724eb133a",
		"98309d94-d144-447a-a0ef-516448532229": "src/renderer/src/hooks/useFfmpegOperations.ts-simstep-b9c1b90e-b931-4dab-98f3-bdc4b0e6c33f",
		"35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10": "generated-edge-simstep-a8032886-f843-42ff-a61a-ace33bffeea9-35d4cf9e-5cec-48f4-9612-b2b0c0ff3a10",
		"d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9": "generated-edge-simstep-47b9ec8a-12f2-4d8b-95ac-58f6504132b6-d9127ea3-aed0-4b9b-aa14-2be8e53cd4c9",
		"6e73adea-b533-40bf-be8d-7222957dfa29": "generated-edge-simstep-fb1d4f06-bd16-409d-92f0-be3a609fba92-6e73adea-b533-40bf-be8d-7222957dfa29",
		"e49335ce-8e18-4eb4-8934-7122406f9aa8": "generated-edge-simstep-2411a4bb-6054-4b50-9703-95fbf343470e-e49335ce-8e18-4eb4-8934-7122406f9aa8",
		"a3f38611-e09d-480e-bbe0-3b2a555d4f6a": "generated-edge-simstep-508dd45b-3ee9-4d5d-a56f-7b7b3d3b8ceb-a3f38611-e09d-480e-bbe0-3b2a555d4f6a",
		"0ad2329f-13db-4897-8036-441b2de93368": "src/renderer/src/segments.ts",
		"739186cb-e6ce-4e17-9031-de32d7289ec2": "src/renderer/src/SegmentList.tsx",
		"3f2b38be-7348-47a9-9067-95777a400ec4": "src/main/menu.ts-simstep-f7da2115-31e3-45e8-9e57-488261e71e75",
		"a224479d-e0b0-4429-9fe3-c586de862f1a": "src/renderer/src/App.tsx-simstep-ca2c6087-098f-4937-ac1b-f24daeefe21f",
		"51def865-de03-4187-85b6-ba86cf6d1936": "src/renderer/src/segments.ts-simstep-ccfb1951-bbcd-4d12-8178-9768a5ba4cdc",
		"8d01d37f-aab7-4e85-815d-4b14afe686c2": "src/renderer/src/hooks/useSegments.ts-simstep-9d8e3dcd-9604-4c3d-9ca9-cc771de67142",
		"7f2155a4-b839-4e56-adf7-e3588ce38fd8": "src/main/menu.ts-simstep-9301e464-e767-4752-8918-5cdbc1ea7404",
		"13fb567e-091d-438d-9b9e-a54c0669ccf3": "src/renderer/src/App.tsx-simstep-58545d6d-e481-4e4b-ac77-f26f03f3f1a8",
		"2b5de623-18fd-40af-9d8c-21750eb5c26d": "src/renderer/src/segments.ts-simstep-85edd41a-47b3-406a-83a5-84447dee6db9",
		"3fae905a-8e5a-4f9d-912f-4cf10d10ab20": "src/renderer/src/hooks/useSegments.ts-simstep-897dc8bf-7af7-4483-8d93-439ebe71a453",
		"31d722ba-a2c7-48e5-8687-5c3c5abf6260": "src/renderer/src/SegmentList.tsx-simstep-5807cb31-3a26-4919-837c-45f6a8e25d38",
		"243c6b3d-7fac-4f13-b670-62533df24ebd": "src/renderer/src/hooks/useSegments.ts-simstep-3ff1ad81-a548-4df7-8e22-b2d42b4607fb",
		"8ed4737a-df10-49cf-9730-e696349f2f22": "src/renderer/src/hooks/useSegments.ts-simstep-bdb38b0a-8b2d-4cd5-b92a-b0311f36f6f7",
		"351e81f1-fe34-49ef-8219-de19aee749f9": "src/renderer/src/hooks/useSegments.ts-simstep-afe7418e-42b8-476a-bdb5-270946172431",
		"186521f7-9226-4363-b238-efdf5356086a": "generated-edge-simstep-cc63814d-95aa-4cd0-aa20-73538e2ad2ba-186521f7-9226-4363-b238-efdf5356086a",
		"3e040134-87f0-485e-81a9-9b38b73d7fea": "generated-edge-simstep-22cf59bc-c947-4668-8652-9f81fde52a9e-3e040134-87f0-485e-81a9-9b38b73d7fea",
		"27b274fe-541f-41ae-b4ea-b75b03fcbcb6": "generated-edge-simstep-b0a049a0-2291-44f0-9b4e-114a07dede93-27b274fe-541f-41ae-b4ea-b75b03fcbcb6",
		"173c03b6-39db-4d04-9025-2b021b534309": "generated-edge-simstep-cae7c2e7-2559-4035-bb9f-e9e785722f3b-173c03b6-39db-4d04-9025-2b021b534309",
		"ea9caa83-779e-43b4-aa2f-9cfde7f94a28": "generated-edge-simstep-1fb35969-f799-4f56-85e6-ae3985f834a4-ea9caa83-779e-43b4-aa2f-9cfde7f94a28",
		"6eca0f1e-1b09-4591-8301-7de2905c0f68": "generated-edge-simstep-fc1b792e-fc06-4e69-b764-b133c5ad7b98-6eca0f1e-1b09-4591-8301-7de2905c0f68",
		"0eb055af-faee-417c-ae68-e2b89e7ca762": "generated-edge-simstep-7d8626e5-bedd-4a8d-9657-a8a9b6fa56a3-0eb055af-faee-417c-ae68-e2b89e7ca762",
		"bb3f0916-e310-4f36-a7df-7a1cf4ae9045": "generated-edge-simstep-e3db0f11-4e61-4aed-9539-24c297c149b0-bb3f0916-e310-4f36-a7df-7a1cf4ae9045",
		"5208c434-02d8-46b4-a43c-057ee92df774": "generated-edge-simstep-43d1ada2-fad0-4955-a678-abca1222f245-5208c434-02d8-46b4-a43c-057ee92df774"
	}
}